// AUTOGENERATED FILE, DO NOT EDIT
// Generated by https://gridui.robotikabrno.cz/
// Layout: {"cols":12,"rows":18,"enableSplitting":true,"widgets":[{"uuid":11866,"type":"Joystick","state":{"id":"Joystick","x":3,"y":10,"w":6,"h":5.5,"tab":0,"css":{},"color":"#FF0000","keys":"wasd","text":""}},{"uuid":4862,"type":"Slider","state":{"id":"SetSpeed","x":1,"y":4,"w":10,"h":2.5,"tab":0,"css":{},"color":"#008000","fontSize":16,"min":0,"max":1,"value":0.5,"precision":0.05,"showValue":true}},{"uuid":47586,"type":"Text","state":{"id":"TextSpeed","x":1,"y":6.5,"w":10,"h":1,"tab":0,"css":{},"text":"Maximální rychlosti","fontSize":17,"color":"#000000","background":"","align":"center","valign":"center","prefix":"","suffix":""}}]}

// Add this as a file layout.ts to your project.
//
// Inicialization:
//
//   import Layout from "./layout.js"
//
//   Layout.begin("Owner name", "Device Name", builder => {
//
//     // Add calback handlers here, like this:
//     builder.Button1.onPress(btn => {
//         console.log("press")
//     })
//
//   })
//
// Usage later in code:
//
//   Layout.Button1.color = "red";
//   console.log(Layout.Button1.pressed)
//

import * as gridui from "gridui"

if(gridui.version() < 0x040000) {
    throw new Error("Your RBGridUi library version is too low for this layout, please update to 040000.")
}

interface LayoutBuilder {
    readonly Joystick: gridui.builder.Joystick
    readonly SetSpeed: gridui.builder.Slider
    readonly TextSpeed: gridui.builder.Text
}

interface Layout {
    readonly Joystick: gridui.widget.Joystick
    readonly SetSpeed: gridui.widget.Slider
    readonly TextSpeed: gridui.widget.Text

    begin(ownerName: string, deviceName: string, builderCallback?: (layoutBuilder: LayoutBuilder) => void): void

    changeTab(index: number): void
    log(message: string): void
}

const layout = {
    begin(ownerName: string, deviceName: string, builderCallback?: (layoutBuilder: LayoutBuilder) => void) {
        gridui.begin(ownerName, deviceName, (builder) => {
            const layoutBuilder: LayoutBuilder = {
                Joystick: builder.joystick(3, 10, 6, 5.5, 11866)
                    .keys("wasd"),
                SetSpeed: builder.slider(1, 4, 10, 2.5, 4862)
                    .max(1)
                    .value(0.5)
                    .precision(0.05),
                TextSpeed: builder.text(1, 6.5, 10, 1, 47586)
                    .text("Maximální rychlost")
                    .fontSize(17)
            }

            if(builderCallback !== undefined) {
                builderCallback(layoutBuilder)
            }

            for(const key in layoutBuilder) {
                layout[key] = layoutBuilder[key].finish()
                layoutBuilder[key] = undefined
            }
        })
    },
    changeTab: gridui.changeTab,
    log: gridui.log,
} as Layout

export default layout
