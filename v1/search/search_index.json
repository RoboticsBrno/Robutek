{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Rob\u016ftek V1","text":"<p>Toto je dokumentace pro verzi V1 rob\u016ftka, pokud jste cht\u011bli vid\u011bt dokumentaci pro verzi V2 p\u0159epn\u011bte se na ni v hlavi\u010dce t\u00e9to str\u00e1nky</p> <p>Skl\u00e1d\u00e1n\u00ed Rob\u016ftka Programov\u00e1n\u00ed Rob\u016ftka</p> <p></p>"},{"location":"robot/","title":"Programov\u00e1n\u00ed robota","text":""},{"location":"robot/#programovani","title":"Programov\u00e1n\u00ed:","text":"<p>Rob\u016ftek je \u0159\u00edzen\u00fd mikrokontrol\u00e9rem ESP32-S3. K programov\u00e1n\u00ed budeme pou\u017e\u00edvat jazyk TypeScript, kter\u00fd budeme spou\u0161t\u011bt pomoc\u00ed programu Jaculus.</p> <p>Lekce 1</p>"},{"location":"robot/#prehled-pinu","title":"P\u0159ehled pin\u016f","text":"<p>\u010c\u00edsla pin\u016f nemus\u00edte p\u0159episovat ru\u010dn\u011b, lze pou\u017e\u00edt definici z knihovny:</p> <pre><code>import * as gpio from \"gpio\";\n\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\ngpio.pinMode(robutek.Pins.StatusLED, gpio.PinMode.OUTPUT);\ngpio.write(robutek.Pins.StatusLED, 1)\n</code></pre> <p>Pro kompletnost je pinout k nahl\u00e9dnut\u00ed zde:</p> <pre><code>export enum Pins {\n    StatusLED = 46,\n\n    // Jedna na desce a z\u00e1rove\u0148 v\u00fdvod pro p\u00e1sek,\n    // po p\u0159ipojen\u00ed extern\u00edho p\u00e1sku se tedy jedn\u00e1\n    // o 8 + 1 = 9 diod celkem\n    SmartLeds = 48,\n\n    ButtonLeft =  2,\n    ButtonRight = 0,\n\n    Servo1 = 21,\n    Servo2 = 38,\n\n    Sens1 = 4,\n    Sens2 = 5,\n    Sens3 = 6,\n    Sens4 = 7,\n\n    SensSW = 8,\n    SensEN = 47,\n\n    Motor1A = 11,\n    Motor1B = 12,\n    Motor2A = 45,\n    Motor2B = 13,\n    Enc1A = 39,\n    Enc1B = 40,\n    Enc2A = 42,\n    Enc2B = 41,\n}\n</code></pre> <p> </p> <p>Pin pro p\u0159ep\u00edn\u00e1n\u00ed vnit\u0159n\u00edch a venkovn\u00edch \u010d\u00e1rov\u00fdch senzor\u016f je IO8.</p>"},{"location":"robot/docs/","title":"Docs - Rob\u016ftek","text":"<p>V t\u00e9to sekci najdete dokumentaci k programov\u00e1n\u00ed a ovl\u00e1d\u00e1ni Rob\u016ftka a jeho \u010d\u00e1st\u00ed.</p>"},{"location":"robot/docs/motors/","title":"Docs - Ovl\u00e1d\u00e1n\u00ed motor\u016f","text":"<p>Na Rob\u016ftkovi se nach\u00e1z\u00ed dva stejnosm\u011brn\u00e9 motory s enkod\u00e9rem (\u010didlo pro m\u011b\u0159en\u00ed pozice motoru). Motory jsou p\u0159ipojen\u00e9 k \u010dipu DRV8833, kter\u00fd zaji\u0161\u0165uje jejich \u0159\u00edzen\u00ed a kter\u00fd m\u016f\u017eeme ovl\u00e1dat z Jacula.</p> <p>Proto\u017ee chceme b\u00fdt schopni p\u0159esn\u011b \u0159\u00eddit rychlost, p\u0159\u00edpadn\u011b pozici motoru, p\u0159ipravili jsme do Jacula ovlada\u010d, kter\u00fd takov\u00e9 \u0159\u00edzen\u00ed umo\u017e\u0148uje. Nastaven\u00ed ovlada\u010de po\u0159\u00e1d ale nen\u00ed \u00fapln\u011b jednoduch\u00e9, tak\u017ee jsme nachystali knihovnu <code>robutek.js</code>, kter\u00e1 motory nastav\u00ed a dovol\u00ed n\u00e1m je ovl\u00e1dat pomoc\u00ed jednoduch\u00fdch funkc\u00ed.</p>"},{"location":"robot/docs/motors/#import-knihovny","title":"Import knihovny","text":"<p>Nejprve si mus\u00edme knihovnu importovat. To ud\u011bl\u00e1me pomoc\u00ed p\u0159\u00edkazu <code>import</code>:</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n</code></pre>"},{"location":"robot/docs/motors/#dostupne-rozhrani","title":"Dostupn\u00e9 rozhran\u00ed","text":"<p>Po naimportov\u00e1n\u00ed knihovny vznikne objekt <code>robutek</code>, skrze kter\u00fd m\u016f\u017eeme s Rob\u016ftkem interagovat. K \u0159\u00edzen\u00ed motor\u016f m\u00e1me k dispozici dva zp\u016fsoby:</p>"},{"location":"robot/docs/motors/#samostatne-rizeni-motoru","title":"Samostatn\u00e9 \u0159\u00edzen\u00ed motor\u016f","text":"<p>Pomoc\u00ed objekt\u016f <code>robutek.leftMotor</code> a <code>robutek.rightMotor</code> m\u016f\u017eeme ovl\u00e1dat motory odd\u011blen\u011b. Ka\u017ed\u00fd z t\u011bchto objekt\u016f m\u00e1 n\u011bkolik metod, kter\u00e9 jsou popsan\u00e9 ve slo\u017ece <code>@types/motor.d.ts</code>.</p> <p>Pro n\u00e1s jsou d\u016fle\u017eit\u00e9 tyto 4 metody:</p> <ul> <li><code>setSpeed(speed: number): void</code> - nastav\u00ed rychlost motoru. Rychlost zad\u00e1v\u00e1me v mm/s a m\u016f\u017ee b\u00fdt kladn\u00e1 i z\u00e1porn\u00e1. Kladn\u00e1 rychlost znamen\u00e1 j\u00edzdu vp\u0159ed, z\u00e1porn\u00e1 znamen\u00e1 j\u00edzdu vzad.</li> <li><code>async move({ time: number }): void</code> - motor se za\u010dne pohybovat zadanou rychlost\u00ed a po zadan\u00e9m \u010dase se zastav\u00ed. \u010cas zad\u00e1v\u00e1me v milisekund\u00e1ch.</li> <li><code>async move({ distance: number }): void</code> - motor se za\u010dne pohybovat zadanou rychlost\u00ed a po ujet\u00ed zadan\u00e9 vzd\u00e1lenosti se zastav\u00ed. Vzd\u00e1lenost zad\u00e1v\u00e1me v milimetrech.</li> <li><code>async stop(brake?: boolean): void</code> - zastav\u00ed motor. Pokud je <code>brake</code> nastaveno na <code>true</code>, motor se zastav\u00ed okam\u017eit\u011b. Pokud je <code>brake</code> nastaveno na <code>false</code>, motor se zastav\u00ed postupn\u011b.</li> <li><code>getPosition(): number</code> - vr\u00e1t\u00ed ujetou vzd\u00e1lenost v milimetrech.</li> </ul>"},{"location":"robot/docs/motors/#rizeni-obou-motoru-najednou","title":"\u0158\u00edzen\u00ed obou motor\u016f najednou","text":"<p>Pro jednodu\u0161\u0161\u00ed \u0159\u00edzen\u00ed pohybu Rob\u016ftka m\u00e1me nav\u00edc k dispozici n\u011bkolik funkc\u00ed, kter\u00e9 umo\u017e\u0148uj\u00ed ovl\u00e1dat oba motory najednou:</p> <ul> <li><code>robutek.setSpeed(speed: number): void</code> - nastav\u00ed rychlost obou motor\u016f.</li> <li><code>async robutek.move(curve: number, { time: number }): void</code> - Rob\u016ftek se za\u010dne pohybovat zadanou rychlost\u00ed zadan\u00fdm sm\u011brem a po zadan\u00e9m \u010dase se zastav\u00ed.</li> <li><code>async robutek.move(curve: number, { distance: number }): void</code> - Rob\u016ftek se za\u010dne pohybovat zadanou rychlost\u00ed zadan\u00fdm sm\u011brem a po ujet\u00ed zadan\u00e9 vzd\u00e1lenosti se zastav\u00ed.</li> <li><code>async robutek.stop(brake?: boolean): void</code> - zastav\u00ed oba motory.</li> </ul> <p>Parametr <code>curve</code> ur\u010duje, jak\u00fdm sm\u011brem se Rob\u016ftek bude pohybovat. Jde o \u010d\u00edslo v rozsahu od -1 do 1, kde 0 znamen\u00e1 j\u00edzdu rovn\u011b, z\u00e1porn\u00e9 \u010d\u00edslo znamen\u00e1 j\u00edzdu doleva a kladn\u00e9 \u010d\u00edslo znamen\u00e1 j\u00edzdu doprava. Kraje rozsahu (-1 a 1) znamenaj\u00ed j\u00edzdu doleva nebo doprava na m\u00edst\u011b.</p>"},{"location":"robot/docs/motors/#priklad-pouziti","title":"P\u0159\u00edklad pou\u017eit\u00ed","text":"<p>Nyn\u00ed si uk\u00e1\u017eeme, jak m\u016f\u017eeme ovl\u00e1dat motory Rob\u016ftka. Nejprve si mus\u00edme importovat knihovnu a pot\u00e9 m\u016f\u017eeme za\u010d\u00edt s ovl\u00e1d\u00e1n\u00edm motor\u016f.</p> <p>Na za\u010d\u00e1tku programu je rychlost nastaven\u00e1 na 0, tak\u017ee se motory nebudou pohybovat ani po zavol\u00e1n\u00ed funkce <code>move</code>. Je tedy pot\u0159eba prvn\u011b zavolat funkci <code>setSpeed</code> a a\u017e pot\u00e9 <code>move</code>.</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nrobutek.setSpeed(100);\nrobutek.move(0, { distance: 1000 });\n</code></pre> <p>Takto m\u016f\u017eeme pos\u00edlat jednotliv\u00e9 p\u0159\u00edkazy na pohyb Rob\u016ftka, neum\u00edme v\u0161ak popsat sekvenci na sebe navazuj\u00edc\u00edch pohyb\u016f.</p> <p>Funkce, kter\u00e9 u sebe maj\u00ed slov\u00ed\u010dko <code>async</code>, jsou asynchronn\u00ed. To znamen\u00e1, \u017ee nap\u0159\u00edklad zavol\u00e1n\u00edm funkce <code>move</code> se za\u010dne pohyb motoru, ale program se hned p\u0159esune na dal\u0161\u00ed p\u0159\u00edkaz. Pokud ale chceme prov\u00e9st n\u011bjakou posloupnost pohyb\u016f a chceme tedy po\u010dkat, a\u017e se motor zastav\u00ed, mus\u00edme pou\u017e\u00edt p\u0159\u00edkaz <code>await</code>. Ten ale nelze pou\u017e\u00edvat kdekoliv, bude tedy pot\u0159eba upravit program tak, aby n\u00e1m to dovolil.</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nasync function main() {\n    robutek.setSpeed(100);\n    await robutek.move(0, { distance: 200 });\n    await robutek.rotate(90);\n    await robutek.move(0, { distance: 200 });\n}\n\nmain().catch(console.error);\n</code></pre> <p>V tomto p\u0159\u00edkladu se Rob\u016ftek nejprve posune o 200 mm vp\u0159ed, pot\u00e9 se oto\u010d\u00ed o 90 stup\u0148\u016f a nakonec se posune o dal\u0161\u00edch 200 mm vp\u0159ed.</p>"},{"location":"robot/docs/sens/","title":"Docs - Ovl\u00e1d\u00e1n\u00ed senzor\u016f odrazu sv\u011btla","text":"<p>Na spodn\u00ed stran\u011b Rob\u016ftka se nach\u00e1z\u00ed 8 senzor\u016f odrazu sv\u011btla. Tyto senzory umo\u017e\u0148uj\u00ed rozpozn\u00e1vat, jak tmav\u00e1 nebo sv\u011btl\u00e1 je plocha pod Rob\u016ftkem. Senzory indikuj\u00ed odrazivost povrchu pomoc\u00ed nap\u011bt\u00ed, kter\u00e9 Rob\u016ftek m\u011b\u0159\u00ed a p\u0159ev\u00e1d\u00ed na \u010d\u00edslo. \u010c\u00edm vy\u0161\u0161\u00ed je pak nam\u011b\u0159en\u00e1 hodnota, t\u00edm sv\u011btlej\u0161\u00ed povrch je. Aby nam\u011b\u0159en\u00e1 hodnota byla co nejp\u0159esn\u011bj\u0161\u00ed, senzory si p\u0159isv\u011btluj\u00ed plochu pomoc\u00ed infra\u010derven\u00e9ho sv\u011btla.</p> <p>Senzory jsou uspo\u0159\u00e1d\u00e1ny do dvou sad po \u010dty\u0159ech senzorech (A1, A2, A3, A4 a B1, B2, B3, B4), mezi kter\u00fdmi se p\u0159ep\u00edn\u00e1 podle toho, kter\u00fd senzor v danou chv\u00edli chceme pou\u017e\u00edt. P\u0159ep\u00edn\u00e1n\u00ed mezi sadami je \u0159\u00edzeno pomoc\u00ed pinu <code>IO8</code> a logick\u00e1 hodnota 1 aktivuje sadu A, zat\u00edmco logick\u00e1 hodnota 0 aktivuje sadu B. P\u0159ep\u00edn\u00e1n\u00ed mezi sadami senzor\u016f trv\u00e1 kr\u00e1tk\u00fd okam\u017eit, b\u011bhem kter\u00e9ho mohou senzory m\u011b\u0159it \u0161patn\u00e9 hodnoty. Je tedy pot\u0159eba alespo\u0148 1 ms po\u010dkat, ne\u017e za\u010dneme \u010d\u00edst hodnoty senzor\u016f.</p> <p>P\u0159isv\u011btlen\u00ed senzor\u016f je pot\u0159eba zapnout samostatn\u011b pomoc\u00ed pinu <code>IO47</code>. Pokud je tento pin nastaven na logickou hodnotu 1, senzory si p\u0159isv\u011btluj\u00ed plochu, pokud je nastaven na logickou hodnotu 0, senzory si nep\u0159isv\u011btluj\u00ed plochu.</p> <p>Proto\u017ee je senzor\u016f hodn\u011b a je pot\u0159eba je nastavovat a p\u0159ep\u00ednat, v knihovn\u011b <code>robutek.js</code> jsme nachystali n\u011bkolik funkc\u00ed, kter\u00e9 pou\u017e\u00edv\u00e1n\u00ed senzor\u016f usnad\u0148uj\u00ed.</p>"},{"location":"robot/docs/sens/#import-knihovny","title":"Import knihovny","text":"<p>Nejprve si mus\u00edme knihovnu importovat. To ud\u011bl\u00e1me pomoc\u00ed p\u0159\u00edkazu <code>import</code>:</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n</code></pre>"},{"location":"robot/docs/sens/#dostupne-rozhrani","title":"Dostupn\u00e9 rozhran\u00ed","text":"<p>P\u0159i importu knihovny se senzory spr\u00e1vn\u011b nastav\u00ed a p\u0159iprav\u00ed k pou\u017eit\u00ed. K jejich n\u00e1sledn\u00e9mu ovl\u00e1d\u00e1n\u00ed n\u00e1m u\u017e sta\u010d\u00ed pouze dv\u011b funkce:</p> <ul> <li><code>readSensor(sensor: SensorType): number</code> - vr\u00e1t\u00ed nam\u011b\u0159enou hodnotu senzoru. Parametr <code>sensor</code> je typ senzoru, kter\u00fd chceme \u010d\u00edst. Dostupn\u00e9 senzory jsou pops\u00e1ny v n\u00e1pov\u011bd\u011b ve VSCode.</li> </ul>"},{"location":"robot/docs/sens/#priklad-pouziti","title":"P\u0159\u00edklad pou\u017eit\u00ed","text":"<p>Nyn\u00ed si uk\u00e1\u017eeme, jak m\u016f\u017eeme \u010d\u00edst hodnoty senzor\u016f. Nejprve si mus\u00edme importovat knihovnu a pot\u00e9 m\u016f\u017eeme za\u010d\u00edt s \u010dten\u00edm hodnot senzor\u016f.</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nlet sensorValue = robutek.readSensor(\"LineFL\");\nconsole.log(sensorValue);\n</code></pre>"},{"location":"robot/docs/sim/","title":"Docs - simul\u00e1tor","text":"<p>K dvoukol\u00e9mu rob\u016ftkovi je dostupn\u00fd Simul\u00e1tor,  ve kter\u00e9m si m\u016f\u017eete vyzkou\u0161et sv\u00e9 programy p\u0159edt\u00edm, ne\u017e si je nahrajete do sv\u00e9ho robota. M\u016f\u017eete si tak ov\u011b\u0159it, \u017ee se v\u00e1\u0161 program chov\u00e1 tak, jak m\u00e1, ani\u017e byste nap\u0159. spadli s robotem ze stolu, nebo pokreslili n\u011bco co nem\u00e1te.</p> <p>P\u0159i otev\u0159en\u00ed odkazu v\u00e1s uv\u00edt\u00e1 n\u00e1sleduj\u00edc\u00ed obrazovka:</p> <p></p> <p>Vid\u00edte zde hlavn\u00ed okno s \u017eelvi\u010dkou (kter\u00e1 reprezentuje na\u0161eho rob\u016ftka), programovac\u00ed okno, a textov\u00e9 okno na v\u00fdstup na\u0161ich program\u016f.</p>"},{"location":"robot/docs/sim/#simulacni-okno","title":"Simula\u010dn\u00ed okno","text":"<p>V hlavn\u00edm okn\u011b se vyskytuje (nejprve nehybn\u00e1) \u017eelvi\u010dka. Jakmile \u017eelvi\u010dce naprogramujeme n\u011bjak\u00e9 chov\u00e1n\u00ed, uvid\u00edme ho v tomto okn\u011b.</p> <p>Pod oknem se vyskytuj\u00ed tla\u010d\u00edtka, kter\u00e1 slou\u017e\u00ed k interakci se simula\u010dn\u00edm prost\u0159ed\u00edm. Prvn\u00ed tla\u010d\u00edtko <code>Grab turtle</code> n\u00e1m umo\u017en\u00ed \u017eelvi\u010dku chytat. Po jeho stiskut\u00ed m\u016f\u017eeme \u017eelvi\u010dku chytit (kliknut\u00ed), p\u0159en\u00e9st (podr\u017een\u00ed), a polo\u017eit na nov\u00e9 m\u00edsto (pu\u0161t\u011bn\u00ed). M\u016f\u017eeme si ji tak kdykoliv nastavit do po\u017eadovan\u00e9 polohy.</p> <p>Stiskut\u00ed dal\u0161\u00edch tla\u010d\u00edtek n\u00e1m umo\u017en\u00ed kreslit tvary. Kreslit za\u010dneme stisknut\u00edm, p\u0159i podr\u017een\u00ed m\u011bn\u00edme velikost, a jakmile my\u0161 pust\u00edme, tvar je dokon\u010den\u00fd. Simul\u00e1tor podporuje 3 z\u00e1kladn\u00ed tvary:</p> <ul> <li> <p><code>Draw line</code> nakresl\u00ed \u010d\u00e1ru</p> </li> <li> <p><code>Draw rectangle</code> nakresl\u00ed obd\u00e9ln\u00edk</p> </li> <li> <p><code>Draw circle</code> nakresl\u00ed kruh</p> </li> </ul> <p>\u017delvi\u010dka je vybavena \u010d\u00e1rov\u00fdmi senzory, pomoc\u00ed kter\u00fdch um\u00ed na nakreslen\u00e9 tvary reagovat.</p> <p>Podobn\u011b jako u skute\u010dn\u00e9ho robota simulace nen\u00ed \u00fapln\u011b na milimetr p\u0159esn\u00e1. M\u016f\u017ee se v\u00e1m tak nap\u0159. st\u00e1t, \u017ee opakujete stejn\u00fd pohyb, a robot se oto\u010d\u00ed o stupe\u0148 v\u00edce ne\u017e by m\u011bl.</p>"},{"location":"robot/docs/sim/#programovaci-okno","title":"Programovac\u00ed okno","text":"<p>Do programovac\u00edho okna p\u00ed\u0161eme k\u00f3d, kter\u00fd n\u00e1sledn\u011b m\u016f\u017eeme spustit pomoc\u00ed tla\u010d\u00edtka <code>Run code</code>. Je zde dostupn\u00e1 funkcionalita pro ovl\u00e1d\u00e1n\u00ed robota pod n\u00e1zvem <code>robutek</code>.  Chceme-li tedy, aby se \u017eelvi\u010dka za\u010dala to\u010dit, m\u016f\u017eeme napsat nap\u0159. <code>robutek.rotate()</code>. Zastavit ji m\u016f\u017eeme k\u00f3dem <code>robutek.stop()</code>.</p> <p>M\u00e1me zde k dispozici rozhran\u00ed na ovl\u00e1d\u00e1n\u00ed robota a servo motoru, jako bychom zavolali p\u0159\u00edkaz <code>import</code> na knihovn\u00e1ch <code>robutek</code> a <code>servo</code> (nazna\u010deno v koment\u00e1\u0159i). Samotn\u00e9 simula\u010dn\u00ed prost\u0159ed\u00ed v\u0161ak \u017eije v izolaci. Vlastn\u00ed soubory na str\u00e1nce neexistuj\u00ed, a tak n\u00e1m <code>import</code> na ostatn\u00edch souborech nebude fungovat. Dodan\u00e9 rozhran\u00ed je to, co pot\u0159ebujeme k tomu, abychom mohli ovl\u00e1dat pohyb a interagovat s nakreslen\u00fdmi tvary.</p> <p>V programovac\u00edm okn\u011b funguj\u00ed standardn\u00ed zkratky zn\u00e1m\u00e9 z <code>VS Code</code>, nap\u0159. <code>Ctrl+C</code>, <code>Ctrl+V</code> pro kop\u00edrov\u00e1n\u00ed a <code>Ctrl+Z</code> pro vracen\u00ed p\u0159edchoz\u00edch zm\u011bn. K\u00f3d se v\u00e1m v\u0161ak m\u016f\u017ee ztratit obnoven\u00edm str\u00e1nky! Proto je lep\u0161\u00ed ps\u00e1t k\u00f3d na vlastn\u00edm po\u010d\u00edta\u010di, kde si ho m\u016f\u017eete ulo\u017eit na budouc\u00ed pou\u017eit\u00ed, a do programovac\u00edho okna ho jen kop\u00edrovat.</p>"},{"location":"robot/docs/sim/#senzory","title":"Senzory","text":"<p>Senzory odrazivosti povrchu jsou na \u017eelvi\u010dce um\u00edst\u011bny stejn\u011b jako na Rob\u016ftkovi, a m\u016f\u017eeme je v simulaci pou\u017e\u00edvat. Pro \u010dernou vr\u00e1t\u00ed hodnotu 0, pro b\u00edlou t\u011bsn\u011b pod 150, a na okraji dan\u00e9 barvy n\u011bco mezi nimi.</p>"},{"location":"robot/docs/sim/#vystup","title":"V\u00fdstup","text":"<p>Pokud n\u00e1\u0161 program n\u011bco vypisuje pomoc\u00ed <code>console.log()</code>, jeho v\u00fdstup se zobraz\u00ed v okn\u011b ozna\u010den\u00e9m <code>Output</code>.</p>"},{"location":"robot/docs/socket/","title":"Docs - Bezdr\u00e1tov\u00e9 programov\u00e1n\u00ed","text":"<p>Rob\u016ftka m\u016f\u017eeme monitoroovat a programovat bezdr\u00e1tov\u011b.</p>"},{"location":"robot/docs/socket/#pripojeni-k-robutkovi","title":"P\u0159ipojen\u00ed k Rob\u016ftkovi","text":"<ol> <li> <p>Klikneme na tla\u010d\u00edtko vyb\u00edr\u00e1n\u00ed portu (n\u011bkdy z\u016fstane p\u0159edvypln\u011bn\u00fd z minula) </p> </li> <li> <p>Vybereme <code>Socket</code> (\u00fapln\u011b dole) </p> </li> <li> <p>Zad\u00e1me IP adresu (z\u00edsk\u00e1n\u00ed IP adresy)  </p> </li> <li> <p>Pot\u00e9 m\u016f\u017eeme bezdr\u00e1tov\u011b programovat jako kdyby byl Rob\u016ftek p\u0159ipojen\u00fd kabelem.</p> <p>N\u011bkdy b\u016f\u017ee nastat chyba. Pokud nastane, sta\u010d\u00ed zm\u00e1\u010dknout <code>Ctrl+C</code> a zkusit to znovu.</p> </li> </ol>"},{"location":"robot/docs/vl53/","title":"Docs - d\u00e1lkom\u011br VL53L0X","text":"<p>K rob\u016ftkovi lze p\u0159ipojit d\u00e1lkom\u011br VL53L0X, kter\u00fd umo\u017e\u0148uje opticky m\u011b\u0159it vzd\u00e1lenost. S d\u00e1lkom\u011brem se komunikuje skrze I2C sb\u011brnici. Proto\u017ee je protokol pro ovl\u00e1d\u00e1n\u00ed d\u00e1lkom\u011bru slo\u017eit\u00fd<sup>1</sup>, pou\u017eijeme ke komunikaci knihovnu <code>VL53L0X.ts</code><sup>2</sup>.</p>"},{"location":"robot/docs/vl53/#import-knihovny","title":"Import knihovny","text":"<p>Nejprve si mus\u00edme knihovnu importovat. Z\u00e1rove\u0148 budeme tak\u00e9 pot\u0159ebovat importovat modul <code>i2c</code> pro komunikaci p\u0159es I2C sb\u011brnici. To ud\u011bl\u00e1me pomoc\u00ed p\u0159\u00edkazu <code>import</code>:</p> <pre><code>import { I2C1 } from \"i2c\"\nimport { VL53L0X } from \"./libs/VL53L0X.js\"\n</code></pre>"},{"location":"robot/docs/vl53/#konfigurace-dalkomeru","title":"Konfigurace d\u00e1lkom\u011bru","text":"<p>Po naimportov\u00e1n\u00ed knihovny z\u00edsk\u00e1me konstruktor t\u0159\u00eddy <code>VL53L0X</code>, kter\u00fdm m\u016f\u017eeme vytvo\u0159it nov\u00fd objekt d\u00e1lkom\u011bru. Tak\u00e9 z\u00edsk\u00e1me objekt <code>I2C1</code>, kter\u00fd slou\u017e\u00ed k ovl\u00e1d\u00e1n\u00ed I2C sb\u011brnice. Sb\u011brnici mus\u00edme nejprve nakonfigurovat a n\u00e1sledn\u011b m\u016f\u017eeme vytvo\u0159it objekt d\u00e1lkom\u011bru.</p> <pre><code>// Konfigurace I2C sb\u011brnice na pinu 17 pro SDA a 9 pro SCL\nI2C1.setup({sda: 17, scl: 9, bitrate: 400000});\n\n// Vytvo\u0159en\u00ed objektu d\u00e1lkom\u011bru\nconst vl = new VL53L0X(I2C1);\n</code></pre>"},{"location":"robot/docs/vl53/#dostupne-rozhrani","title":"Dostupn\u00e9 rozhran\u00ed","text":"<p>Po vytvo\u0159en\u00ed objektu d\u00e1lkom\u011bru m\u016f\u017eeme za\u010d\u00edt s m\u011b\u0159en\u00edm vzd\u00e1lenosti. K dispozici m\u00e1me pouze jednu metodu:</p> <ul> <li><code>async read(): Promise&lt;Measurement&gt;</code> - zah\u00e1j\u00ed m\u011b\u0159en\u00ed vzd\u00e1lenosti a vr\u00e1t\u00ed nam\u011b\u0159enou hodnotu v milimetrech. M\u011b\u0159en\u00ed vzd\u00e1lenosti chv\u00edli trv\u00e1, funkce je tedy asynchronn\u00ed a je pot\u0159eba pou\u017e\u00edt <code>await</code>. Funkce na konci m\u011b\u0159en\u00ed vrac\u00ed objekt typu <code>Measurement</code>, kter\u00fd obsahuje nam\u011b\u0159enou hodnotu a informace o v\u00fdsledku m\u011b\u0159en\u00ed.</li> </ul>"},{"location":"robot/docs/vl53/#priklad-pouziti","title":"P\u0159\u00edklad pou\u017eit\u00ed","text":"<p>Nyn\u00ed si uk\u00e1\u017eeme, jak m\u016f\u017eeme m\u011b\u0159it vzd\u00e1lenost pomoc\u00ed d\u00e1lkom\u011bru VL53L0X. N\u00e1sleduj\u00edc\u00ed program bude ka\u017edou vte\u0159inu m\u011b\u0159it vzd\u00e1lenost a vypisovat informace o m\u011b\u0159en\u00ed do monitoru.</p> <pre><code>import { I2C1 } from \"i2c\";\nimport { VL53L0X } from \"./libs/VL53L0X.js\"\nimport { stdout } from \"stdio\";\n\nI2C1.setup({sda: 17, scl: 9, bitrate: 400000});\nconst vl = new VL53L0X(I2C1);\n\nasync function main() {\n    while (true) {\n        const m = await vl.read();\n        console.log(\"Distance: \" + m.distance + \" mm  \\tSignal: \" + m.signalRate + \"\\tAmb: \" + m.ambientRate + \"\\tSPAD: \" + m.effectiveSpadRtnCount);\n    }\n}\n\nmain().catch(console.error);\n</code></pre> <p>V\u00fdpis potom m\u016f\u017ee vypadat nap\u0159\u00edklad takto:</p> <pre><code>Distance: 203 mm        Signal: 10.671875       Amb: 1.265625   SPAD: 177\nDistance: 199 mm        Signal: 11.265625       Amb: 1.203125   SPAD: 177\nDistance: 203 mm        Signal: 10.9765625      Amb: 1.234375   SPAD: 177\n</code></pre> <ul> <li>prom\u011bnn\u00e1 <code>m.distance</code> obsahuje nam\u011b\u0159enou vzd\u00e1lenost v milimetrech,</li> <li>prom\u011bnn\u00e1 <code>m.signalRate</code> obsahuje informaci o kvalit\u011b sign\u00e1lu,</li> <li>prom\u011bnn\u00e1 <code>m.ambientRate</code> obsahuje informaci o okoln\u00edm \u0161umu,</li> <li>prom\u011bnn\u00e1 <code>m.effectiveSpadRtnCount</code> obsahuje informaci o po\u010dtu aktivn\u00edch pixel\u016f (z t\u011bch se skl\u00e1d\u00e1 senzor a zap\u00edn\u00e1 je podle toho, jakou vzd\u00e1lenost a v jak\u00e9m prost\u0159ed\u00ed m\u011b\u0159\u00ed).</li> </ul> <ol> <li> <p>Podle v\u00fdrobce dokonce tak slo\u017eit\u00fd, \u017ee k n\u011bmu nelze dob\u0159e sepsat specifikaci (ve skute\u010dnosti to bude nejsp\u00ed\u0161 pouze neschopnost v\u00fdrobce a\u0165 u\u017e kv\u016fli \u0161patn\u00e9mu n\u00e1vrhu protokolu, nebo neochot\u011b sepsat dokumentaci).\u00a0\u21a9</p> </li> <li> <p>Dod\u00e1van\u00e1 knihovna je upravenou verz\u00ed knihovny VL53L0X.js od Espruino tak, aby fungovala v Jaculu\u00a0\u21a9</p> </li> </ol>"},{"location":"robot/docs/wifi/","title":"Docs - WiFi","text":"<p>K Rob\u016ftkovi se m\u016f\u017eeme p\u0159ipojit i bezdr\u00e1tov\u011b pomoc\u00ed WiFi. K tomu ale pot\u0159ebujeme aby se Rob\u016ftek bu\u010f p\u0159ipojil k existuj\u00edc\u00ed s\u00edti nebo vytvo\u0159il novou s\u00ed\u0165.</p>"},{"location":"robot/docs/wifi/#pripojeni-k-existujici-siti","title":"P\u0159ipojen\u00ed k existuj\u00edc\u00ed s\u00edti","text":"<ol> <li> <p>Klikneme na tla\u010d\u00edtko <code>Config WiFi</code> na doln\u00ed li\u0161t\u011b. Zde budeme d\u011blat v\u0161echno nastaven\u00ed WiFi.  </p> </li> <li> <p>Vybereme mo\u017enost <code>Add WiFi network</code>.  </p> </li> <li> <p>A zad\u00e1me n\u00e1zev s\u00edt\u011b (SSID)  </p> <p>Co d\u011blat kdy\u017e n\u00e1zev s\u00edt\u011b m\u00e1 v sob\u011b mezeru</p> <ul> <li>Pokud n\u00e1zev s\u00edt\u011b m\u00e1 v sob\u011b mezeru, mus\u00edme ho vlo\u017eit do uvozovek, nap\u0159\u00edklad <code>\"Hele mezera\"</code>.</li> </ul> </li> <li> <p>Dole v termin\u00e1le se n\u00e1m zobraz\u00ed m\u00edsto na zad\u00e1n\u00ed hesla.  </p> </li> <li> <p>Po zad\u00e1n\u00ed hesla be se n\u00e1m zobraz\u00ed spr\u00e1va \u017ee v\u0161e prob\u011bhlo v po\u0159\u00e1dku.  </p> </li> <li> <p>Pot\u00e9 mus\u00edme znovu kliknout na tla\u010d\u00edtko <code>Config WiFi</code> a vybrat mo\u017enost <code>Set WiFI to Station mode (connect to WiFi)</code>.  </p> </li> </ol>"},{"location":"robot/docs/wifi/#vytvoreni-nove-site","title":"Vytvo\u0159en\u00ed nov\u00e9 s\u00edt\u011b","text":"<ol> <li> <p>Klikneme na tla\u010d\u00edtko <code>Config WiFi</code> na doln\u00ed li\u0161t\u011b. Zde budeme d\u011blat v\u0161echno nastaven\u00ed WiFi.  </p> </li> <li> <p>Vybereme mo\u017enost <code>Set WiFi to AP mode (create a hotspot)</code>.  </p> </li> <li> <p>A zad\u00e1me n\u00e1zev s\u00edt\u011b (SSID)  </p> <p>Co d\u011blat kdy\u017e n\u00e1zev s\u00edt\u011b m\u00e1 v sob\u011b mezeru</p> <ul> <li>Pokud n\u00e1zev s\u00edt\u011b m\u00e1 v sob\u011b mezeru, mus\u00edme ho vlo\u017eit do uvozovek, nap\u0159\u00edklad <code>\"Hele mezera\"</code>.</li> </ul> </li> <li> <p>Dole v termin\u00e1le se n\u00e1m zobraz\u00ed m\u00edsto na zad\u00e1n\u00ed hesla.  </p> </li> </ol>"},{"location":"robot/docs/wifi/#vypnuti-wifi","title":"Vypnut\u00ed WiFi","text":"<ol> <li> <p>Klikneme na tla\u010d\u00edtko <code>Config WiFi</code> na doln\u00ed li\u0161t\u011b.  </p> </li> <li> <p>Vybereme mo\u017enost <code>Disable WiFi</code>.  </p> </li> </ol>"},{"location":"robot/docs/wifi/#zjisteni-ip-adresy","title":"Zji\u0161ten\u00ed IP adresy","text":"<ol> <li> <p>Klikneme na tla\u010d\u00edtko <code>Config WiFi</code> na doln\u00ed li\u0161t\u011b.  </p> </li> <li> <p>Vybereme mo\u017enost <code>Display current WiFI config</code>. </p> </li> <li> <p>A v termin\u00e1le se zobraz\u00ed IP adresa (N\u011bjakou dobu trv\u00e1 ne\u017e se Rob\u016ftek p\u0159ipoj\u00ed k s\u00edt\u00ed, tak\u017ee je mo\u017en\u00e9 \u017ee to bude chv\u00edly trvat)  </p> </li> </ol> <p>Nebo v k\u00f3du m\u016f\u017eete z\u00edskat IP adresu pomoc\u00ed funkce <code>currentIp()</code>:</p> <pre><code>import * as wifi from \"wifi\";\n\nconsole.log(wifi.currentIp())\n</code></pre>"},{"location":"robot/docs/wifi/#pripojeni-k-siti","title":"P\u0159ipojen\u00ed k s\u00edti","text":"<p>1.</p>"},{"location":"robot/faq/","title":"\u010casto kladen\u00e9 dotazy","text":""},{"location":"robot/faq/#do-ktereho-usb-mam-pripojit-kabel","title":"Do kter\u00e9ho USB m\u00e1m p\u0159ipojit kabel?","text":"<ul> <li>Pou\u017e\u00edvej konektor <code>USB-C</code>, pokud ti nejde nahr\u00e1t k\u00f3d tak p\u0159es <code>micro-USB</code>.</li> <li> Pro\u010d ten prvn\u00ed nefunguje? <code>USB-C</code> je softwarov\u00e9 <code>USB</code> na ESP32 a pokud si nahraje\u0161 k\u00f3d, kter\u00fd rozbije ESP tak nebude fungovat.Naopak <code>micro-USB</code> je p\u0159ipojen\u00e9 p\u0159es p\u0159evodn\u00edk tak\u017ee to se pou\u017e\u00edv\u00e1 v p\u0159\u00edpad\u011b nefunk\u010dnosti <code>USB-C</code> (potenci\u00e1ln\u00ed chyby: chyba p\u0159i nahr\u00e1v\u00e1n\u00ed, nekone\u010dn\u00e1 smy\u010dka v k\u00f3du, atd.). </li> </ul>"},{"location":"robot/faq/#jak-komunikovat-se-zarizenim","title":"Jak komunikovat se za\u0159\u00edzen\u00edm?","text":"<ul> <li>V lev\u00e9m spodn\u00edm rohu vyberte COM port (<code>Select COM Port</code>).</li> <li>Pot\u00e9 je mo\u017en\u00e9 spustit monitor (<code>Monitor</code>) skrze ikonku v lev\u00e9m spodn\u00edm rohu.</li> <li>N\u00e1sledn\u011b se v\u00e1m otev\u0159e termin\u00e1l, ve kter\u00e9m vid\u00edte v\u00fdstup ze za\u0159\u00edzen\u00ed.</li> </ul>"},{"location":"robot/faq/#jak-se-odpojit-od-zarizeni","title":"Jak se odpojit od za\u0159\u00edzen\u00ed?","text":"<ul> <li>Pomoc\u00ed klaves Ctrl+C se odpoj\u00edte z monitoru.</li> </ul>"},{"location":"robot/faq/#jak-zjistit-verzi-firmwaru-v-jaculu","title":"Jak zjistit verzi firmwaru v Jaculu?","text":"<ul> <li>P\u0159ipojte Jacula k po\u010d\u00edta\u010di.</li> <li>Pomoc\u00ed Ctrl+Shift+P se v\u00e1m otev\u0159e okno pro zad\u00e1v\u00e1n\u00ed p\u0159\u00edkaz\u016f.</li> <li>Zadejte <code>Jaculus: Get firmware version</code>.</li> <li>V\u00fdsledek by se m\u011bl objevit v termin\u00e1lu.</li> </ul>"},{"location":"robot/lekce1/","title":"Lekce 1 - prvn\u00ed program","text":"<p>V t\u00e9to lekci si p\u0159edstav\u00edme Jaculus, nainstalujeme si programovac\u00ed prost\u0159ed\u00ed a spust\u00edme prvn\u00ed program.</p>"},{"location":"robot/lekce1/#instalace","title":"Instalace","text":"<p>Na na\u0161ich robotech pob\u011b\u017e\u00ed program, kter\u00fd se jmenuje Jaculus. Tento program n\u00e1m umo\u017en\u00ed jednodu\u0161e ps\u00e1t instrukce (programy), kter\u00e9 nahrajeme do robota. Tyto programy budou specifikovat, jak se robot m\u00e1 chovat, a umo\u017en\u00ed n\u00e1m s n\u00edm komunikovat. Aby n\u00e1m v\u0161echno spr\u00e1vn\u011b fungovalo, mus\u00edme ho nejprve nainstalovat a k n\u011bmu i n\u011bkolik dal\u0161\u00edch program\u016f.</p>"},{"location":"robot/lekce1/#jaculus","title":"Jaculus","text":""},{"location":"robot/lekce1/#linux","title":"Linux","text":"<p>Na linuxu je t\u0159eba p\u0159idat opr\u00e1vn\u011bn\u00ed udev, v\u00edce zde.</p>"},{"location":"robot/lekce1/#instalace-jacula","title":"Instalace Jacula","text":"<ol> <li> <p>Otev\u0159eme si Jaculus web installer v Chrome nebo Edge.</p> <p>Tento postup nefunguje ve Firefoxu a jinych prohl\u00ed\u017ee\u010d\u00edch, kter\u00e9 nepodporuj\u00ed rozhran\u00ed WebSerial.</p> </li> <li> <p>Zvol\u00edme desku <code>ESP32 S3 DevKitC</code></p> <p></p> </li> <li> <p>V p\u0159ep\u00edna\u010di <code>Select board version</code> vybereme nejnov\u011bj\u0161\u00ed dostupnou verzi (tzn. tu s nejvy\u0161\u0161\u00edm \u010d\u00edslem).</p> </li> <li> <p>P\u0159ep\u00edna\u010d <code>Erase Flash</code> slou\u017e\u00ed k vymaz\u00e1n\u00ed program\u016f co u\u017e jsou nahran\u00e9 na ESP. Ve v\u00fdchoz\u00edm stavu <code>No</code> nevyma\u017ee programy v ESP.</p> <p></p> </li> <li> <p>Zapneme Rob\u016ftka a podr\u017e\u00edme tla\u010d\u00edtko <code>IO0</code>. Sou\u010dasn\u011b s n\u00edm zm\u00e1\u010dkneme tla\u010d\u00edtko s popiskem <code>EN</code>, kter\u00e9 se nach\u00e1z\u00ed nalevo od n\u011bj. T\u00edmto p\u0159epneme rob\u016ftka do nahr\u00e1vac\u00edho re\u017eimu.</p> </li> <li> <p>Po p\u0159ipojen\u00ed Rob\u016ftka k po\u010d\u00edta\u010di stiskneme na webov\u00e9 str\u00e1nce tla\u010d\u00edtko <code>Connect</code>.</p> <p></p> </li> <li> <p>Ve vyskakovac\u00edm ok\u00e9nku zvol\u00edme port <code>COM</code> na Windows nebo <code>ttyACM</code> na unixov\u00fdch syst\u00e9mech a stiskneme <code>Connect</code>.</p> <p></p> </li> <li> <p>Po chvilce se n\u00e1m zobraz\u00ed tla\u010d\u00edtko <code>Flash</code>, kter\u00e9 zm\u00e1\u010dkneme.</p> <p></p> <p>kdy\u017e nahr\u00e1v\u00e1n\u00ed p\u0159es USB-C nefunguje zkuste Micro-USB</p> </li> <li> <p>Chv\u00edli po\u010dk\u00e1me a jakmile p\u0159estanou v konzoli p\u0159ib\u00fdvat nov\u00e9 \u0159\u00e1dky, m\u00e1me nainstalovan\u00e9ho Jacula v mikrokontrol\u00e9ru!</p> </li> </ol>"},{"location":"robot/lekce1/#nodejs","title":"Node.js","text":"<p>Node.js je program, kter\u00fd n\u00e1m umo\u017en\u00ed nahr\u00e1vat k\u00f3d do Jacula a komunikovat s n\u00edm.</p> <ol> <li>St\u00e1hneme si Node.js (nejnov\u011bj\u0161\u00ed stabiln\u00ed verzi - LTS) - Stahuj ZDE pro Windows</li> <li>Nainstalujeme jej dle v\u00fdchoz\u00edho nastaven\u00ed (nen\u00ed pot\u0159eba nic m\u011bnit).</li> </ol>"},{"location":"robot/lekce1/#visual-studio-code","title":"Visual Studio Code","text":"<p>Visual Studio Code je programovac\u00ed prost\u0159ed\u00ed, kter\u00e9 n\u00e1m umo\u017en\u00ed ps\u00e1t k\u00f3d a s roz\u0161\u00ed\u0159en\u00edm n\u00e1m dovol\u00ed nahr\u00e1vat k\u00f3d do za\u0159\u00edzen\u00ed.</p> <ol> <li>St\u00e1hneme si Visual Studio Code (nejnov\u011bj\u0161\u00ed stabiln\u00ed verzi)  - Stahuj ZDE pro Windows</li> <li>Nainstalujeme jej dle v\u00fdchoz\u00edho nastaven\u00ed (nen\u00ed pot\u0159eba nic m\u011bnit).</li> </ol>"},{"location":"robot/lekce1/#jaculus_1","title":"Jaculus","text":"<p>Nyn\u00ed u\u017e se m\u016f\u017eeme vrhnout na samotnou instalaci <code>Jacula</code>.</p> <ol> <li>Po instalaci <code>node.js</code> restartujeme aplikaci Visual Studio Code.</li> <li>V horn\u00edm menu VSCode vybereme z\u00e1lo\u017eku <code>Terminal</code> a zvol\u00edme <code>New Terminal</code>.</li> <li> <p>Do termin\u00e1lu zad\u00e1me p\u0159\u00edkaz vypsan\u00fd n\u00ed\u017ee. Na <code>Linuxu</code> bude nejsp\u00ed\u0161e pot\u0159eba <code>sudo</code> pr\u00e1va.</p> <pre><code>npm install -g jaculus-tools\n</code></pre> Dost\u00e1v\u00e1m chybu <p>Pro aplikov\u00e1n\u00ed v\u0161ech zm\u011bn je nutn\u00fd restart VSCode. Pokud se v\u00e1m neda\u0159\u00ed nainstalovat Jaculus, zkuste nejd\u0159\u00edve restartovat VSCode.</p> </li> <li> <p>Pro otestov\u00e1n\u00ed instalace zad\u00e1me do termin\u00e1lu p\u0159\u00edkaz:</p> <pre><code>npx jac\n</code></pre> <p>Program by m\u011bl vypsat n\u00e1pov\u011bdu.</p> Uk\u00e1zka n\u00e1pov\u011bdy <pre><code>Usage: jac &lt;command&gt;\n\nTools for controlling devices running Jaculus\n\nCommands:\nhelp            Print help for given command\nlist-ports      List available serial ports\nserial-socket   Tunnel a serial port over a TCP socket\ninstall         Install Jaculus to device\nbuild           Build TypeScript project\nflash           Flash code to device (replace contents of ./code)\npull            Download a file/directory from device\nls              List files in a directory\nread            Read a file from device\nwrite           Write a file to device\nrm              Delete a file on device\nmkdir           Create a directory on device\nrmdir           Delete a directory on device\nupload          Upload a file/directory to device\nformat          Format device storage\nresources-ls    List available resources\nresources-read  Read a resource from device\nget-examples    Get example project from device\nstart           Start a program\nstop            Stop a program\nstatus          Get status of device\nversion         Get version of device firmware\nmonitor         Monitor program output\nwifi-get        Display current WiFi config\nwifi-ap         Set WiFi to AP mode (create a hotspot)\nwifi-add        Add a WiFi network\nwifi-rm         Remove a WiFi network\nwifi-sta        Set WiFi to Station mode (connect to a wifi)\nwifi-disable    Disable WiFi\n\nGlobal options:\n--log-level   Set log level (default: info)\n--help        Print this help message\n--port        Serial port to use (default: first available)\n--baudrate    Baudrate to use (default: 921600)\n--socket      host:port to use\n</code></pre> </li> </ol>"},{"location":"robot/lekce1/#jaculus-vscode-rozsireni","title":"Jaculus VSCode Roz\u0161\u00ed\u0159en\u00ed","text":"<p>Roz\u0161\u00ed\u0159en\u00ed pro VSCode n\u00e1m umo\u017en\u00ed jednodu\u0161e nahr\u00e1vat k\u00f3d do Jacula pomoc\u00ed ikonek a kl\u00e1vesov\u00fdch zkratek.</p> <ol> <li>V lev\u00e9m menu VSCode vyberte z\u00e1lo\u017eku <code>Extensions</code> a vyhledejte <code>Jaculus</code>.     </li> <li>Zvolte <code>Install</code>.</li> <li>Po otev\u0159en\u00ed projektu by se v\u00e1m ve spodn\u00ed li\u0161t\u011b m\u011bly objevit oran\u017eov\u00e9 ikonky Jacula.     </li> </ol> Pou\u017e\u00edv\u00e1m Windows a nem\u016f\u017eu se p\u0159ipojit p\u0159es USB UART <p>Pokud se v\u00e1m neda\u0159\u00ed p\u0159ipojit na USB UART port, je nutn\u00e9 doinstalovat spr\u00e1vn\u00e9 drivery.</p> <ol> <li>St\u00e1hn\u011bte si driver pro v\u00e1\u0161 opera\u010dn\u00ed syst\u00e9m. Naleznete jej v z\u00e1lo\u017ece <code>Downloads -&gt; Software -&gt; CP210x Universal Windows Driver</code>.</li> <li>Rozbalte ZIP soubor a pot\u00e9 prav\u00fdm tla\u010d\u00edtkem klikn\u011bte na <code>silabser.inf</code> a vyberte <code>Install</code>.</li> <li>Vyzkou\u0161ejte, zda se v\u00e1m poda\u0159ilo p\u0159ipojit Jaculus. (mo\u017en\u00e1 budete muset restartovat po\u010d\u00edta\u010d).</li> </ol>"},{"location":"robot/lekce1/#prvni-projekt","title":"Prvn\u00ed projekt","text":"<p>Zde si vyzkou\u0161\u00edme vytvo\u0159it prvn\u00ed projekt a nahr\u00e1t jej do Rob\u016ftka.</p> <p>St\u00e1hnout ZIP s prvn\u00edm projektem</p> <ol> <li>V prvn\u00edm kroku si na po\u010d\u00edta\u010di nachyst\u00e1me slo\u017eku <code>RoboCamp-2024</code> do kter\u00e9 si budeme ukl\u00e1dat ve\u0161ker\u00e9 projekty.</li> <li>D\u00e1le si st\u00e1hneme zip soubor s prvn\u00edm projektem.</li> <li>Pot\u00e9 si jej rozbal\u00edme do vytvo\u0159en\u00e9 slo\u017eky k t\u00e1boru.</li> <li>Spust\u00edme VSCode a pomoc\u00ed z\u00e1lo\u017eky <code>File</code> -&gt; <code>Open Folder</code> vybereme slo\u017eku s projektem.</li> <li>P\u0159ipoj\u00edme Rob\u016ftka p\u0159es <code>USB-C</code>. <code>micro-USB</code> po\u017e\u00edvejte prim\u00e1rn\u011b pokud nefunguje nahr\u00e1v\u00e1n\u00ed p\u0159es <code>USB-C</code>.</li> <li> <p>V lev\u00e9m spodn\u00edm rohu vybereme <code>Select COM port</code> pro v\u00fdb\u011br portu, na kter\u00e9m je Rob\u016ftek p\u0159ipojen\u00fd. Pot\u00e9 se n\u00e1pis zm\u011bn\u00ed na vybran\u00fd port.</p> Vid\u00edm v\u00edce port\u016f <p>Pokud se v\u00e1m v nab\u00eddce zobraz\u00ed v\u00edce port\u016f, odpojte Rob\u016ftka a zjis\u0165ete, kter\u00fd port zmizel. Po p\u0159ipojen\u00ed Rob\u016ftka tento port vyberte.</p> <ol> <li>D\u00e1le zvol\u00edme <code>Monitor</code>, ten slou\u017e\u00ed pro komunikaci se za\u0159\u00edzen\u00edm.</li> </ol> </li> </ol>"},{"location":"robot/lekce1/#nahrani-programu","title":"Nahr\u00e1n\u00ed programu","text":"<p>Pokud n\u00e1m funguje p\u0159ipojen\u00ed na <code>Monitor</code> a b\u011b\u017e\u00ed n\u00e1m komunikace se za\u0159\u00edzen\u00edm, m\u016f\u017eeme do za\u0159\u00edzen\u00ed zkusit nahr\u00e1t n\u00e1\u0161 prvn\u00ed program.</p> <ol> <li>Ve VSCode m\u00e1me otev\u0159en\u00fd prvn\u00ed projekt. V lev\u00e9m <code>Exploreru</code> (<code>Pr\u016fzkumn\u00edku</code>) vybereme soubor ze  <code>src</code> -&gt; <code>index.ts</code>. V n\u011bm vid\u00edme n\u00e1\u0161 prvn\u00ed program.</li> <li>Pot\u00e9 zvol\u00edme <code>Build and Flash</code> pro nahr\u00e1n\u00ed programu do za\u0159\u00edzen\u00ed.     </li> <li>Stejn\u011b jako v p\u0159edchoz\u00ed \u010d\u00e1sti kliknem na tla\u010d\u00edtko <code>Monitor</code>. M\u011bli bychom vid\u011bt v\u00fdstup z programu.     <pre><code>$ jac monitor --port /dev/tty.usbmodem213101\nConnecting to serial at /dev/tty.usbmodem213101 at 921600 bauds... Connected.\n\nRobotick\u00fd t\u00e1bor 2024, zdrav\u00ed Jirka V\u00e1cha!\nRobotick\u00fd t\u00e1bor 2024, zdrav\u00ed Jirka V\u00e1cha!\n</code></pre></li> <li>Pro ukon\u010den\u00ed termin\u00e1lu, do n\u011bj klikneme a stiskneme Ctrl+C.</li> </ol>"},{"location":"robot/lekce1/#uprava-programu","title":"\u00daprava programu","text":"<p>Pokud n\u00e1m funguje nahr\u00e1v\u00e1n\u00ed k\u00f3du, m\u016f\u017eeme se na n\u011bj pod\u00edvat a zkusit jej upravit. Ve zdrojov\u00e9m k\u00f3du jsou koment\u00e1\u0159e (<code>// tohle je koment\u00e1\u0159</code>), kter\u00e9 n\u00e1m popisuj\u00ed, co kter\u00fd \u0159\u00e1dek d\u011bl\u00e1.</p> <ol> <li>Prostudujeme si zdrojov\u00fd k\u00f3d.</li> <li> <p>Uprav\u00edme pozdrav na sv\u00e9 jm\u00e9no.</p> \u0158e\u0161en\u00ed <pre><code>...\nconsole.log(\"Robotick\u00fd t\u00e1bor 2024, zdrav\u00ed Franta Flinta!\");  // tady jsem zm\u011bnil sv\u00e9 jm\u00e9no\n...\n</code></pre> </li> <li> <p>Pokus\u00edme se zm\u011bnit rychlost vypisov\u00e1n\u00ed.</p> \u0158e\u0161en\u00ed <pre><code>...\nsetInterval(() =&gt; { /* moj kod */ }, 500); // \u010das opakov\u00e1n\u00ed se ud\u00e1v\u00e1 v milisekund\u00e1ch (1000 ms je 1 sekunda)\n...\n</code></pre> </li> <li> <p>Uprav\u00edme barvu.</p> \u0158e\u0161en\u00ed <pre><code>...\nledStrip.set(0, colors.red); // nastav\u00ed barvu LED na Rob\u016ftkovi na \u010dervenou\n...\n</code></pre> <p>Barvy:</p> <ul> <li><code>red</code></li> <li><code>orange</code></li> <li><code>yellow</code></li> <li><code>green</code></li> <li><code>light_blue</code></li> <li><code>blue</code></li> <li><code>purple</code></li> <li><code>pink</code></li> <li><code>white</code></li> <li><code>off</code></li> </ul> </li> </ol>"},{"location":"robot/lekce1/gridui/","title":"Lekce 1.5 - D\u00e1lkov\u00e9 ovl\u00e1d\u00e1n\u00ed","text":"<p>Pokud u\u017e m\u00e1te zap\u00e1jen\u00e9 motory a slo\u017een\u00e9ho Rob\u016ftka, m\u016f\u017eete ho vyzkou\u0161et p\u0159es d\u00e1lkov\u00e9 ovl\u00e1d\u00e1n\u00ed</p> <p>St\u00e1hnout ZIP s gridui uk\u00e1zkou</p> <ol> <li> <p>St\u00e1hneme si p\u0159edp\u0159ipraven\u00fd projekt. Otev\u0159ete ho ve VSCode.</p> </li> <li> <p>V projektu v <code>src/index.ts</code> upravte prom\u011bnn\u00e9 <code>OWNER</code> a <code>DEVICE_NAME</code> v horn\u00ed \u010d\u00e1sti na va\u0161e jm\u00e9no.</p> <p></p> </li> <li> <p>Na doln\u00ed li\u0161t\u011b ve VSCode klikneme na <code>Config WiFi</code>.</p> </li> <li> <p>Vybereme mo\u017enost <code>Add a WiFi network</code>.</p> <p></p> </li> <li> <p>Do pole zad\u00e1me n\u00e1zev WiFi s\u00edt\u011b. Na t\u00e1bo\u0159e pou\u017eijte wifi pro roboty, <code>RoboRaj</code>, heslo je na projektoru.</p> <p></p> </li> <li> <p>Dole v termin\u00e1lu zad\u00e1me heslo WiFi s\u00edt\u011b.</p> <p></p> </li> <li> <p>Znovu klikneme na <code>Config WiFi</code> a vybereme <code>Set WiFI to Station mode (connect to wifi)</code>.</p> <p></p> </li> </ol>"},{"location":"robot/lekce1/gridui/#pripojeni-na-robutka","title":"P\u0159ipojen\u00ed na Rob\u016ftka","text":"<p>Rob\u016ftek je te\u010f p\u0159ipojen\u00fd na WiFi.</p>"},{"location":"robot/lekce1/gridui/#android","title":"Android","text":"<p>P\u0159ipojte v\u00e1\u0161 telefon na stejnou WiFi (<code>RoboRaj</code> na t\u00e1bo\u0159e), a st\u00e1hn\u011bte si aplikaci <code>RBController</code> pro Android.</p> <p>Aplikace RBController</p> <ol> <li>Po otev\u0159en\u00ed programu nastavte jm\u00e9no majitele na to stejn\u00e9, co jste napsali do <code>OWNER</code> prom\u011bnn\u00e9 v k\u00f3du. Jinak Rob\u016ftka neuvid\u00edte!</li> <li>Pokud je telefon na stejn\u00e9 WiFi jako Rob\u016ftek, aplikace ho najde a m\u016f\u017eete ho ovl\u00e1dat.</li> </ol>"},{"location":"robot/lekce1/gridui/#ios-a-pocitac","title":"iOS a po\u010d\u00edta\u010d","text":"<ol> <li> <p>Po nahr\u00e1n\u00ed programu vid\u00edte v termin\u00e1lu IP Rob\u016ftka, nebo jde zjistit p\u0159\u00edkazem <code>jac wifi-get</code>.</p> <p></p> </li> <li> <p>Zadejte tuto IP do prohl\u00ed\u017ee\u010de, nap\u0159. <code>http://192.168.4.1</code>. Na\u010dte se v\u00e1m str\u00e1nka s ovl\u00e1d\u00e1n\u00edm.</p> </li> </ol>"},{"location":"robot/lekce10/","title":"Lekce 6 - Servo (Kreslen\u00ed tu\u017ekou)","text":"<p>Na Rob\u016ftkovi jsou dv\u011b pozice na p\u0159ipojen\u00ed serva - piny 38 a 21.</p>"},{"location":"robot/lekce10/#zacatek","title":"Za\u010d\u00e1tek","text":"<p>Abychom mohli pou\u017e\u00edvat servo mus\u00edme ho z\u00edskat p\u0159\u00edkazem <code>const servo = new Servo(...)</code>, a do z\u00e1vorky nap\u00ed\u0161eme \u010d\u00edslo PINu, timer (nastavte ho na 1) a kan\u00e1l (nastavte ho na 4)</p> <pre><code>import { Servo } from \"./libs/servo.js\"\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nconst servo = new Servo(robutek.Pins.Servo2, 1, 4); // robutek.Pins.Servo2 je pin 38\n</code></pre> <p>Na nastaven\u00ed pozice serva pou\u017eijte funkci <code>servo.write()</code> a do z\u00e1vorek zadejte \u010d\u00edslo od 0 do 1023. <pre><code>servo.write(0);    // 0\u00b0\nservo.write(512);  // 90\u00b0\nservo.write(1023); // 180\u00b0\n</code></pre></p>"},{"location":"robot/lekce10/#kresleni-tuzkou","title":"Kreslen\u00ed tu\u017ekou","text":"<p>Na servo se d\u00e1 p\u0159ipojit tu\u017eka. Tu\u017eka se ovl\u00e1d\u00e1 stejn\u00fdm zp\u016fsobem jenom Rob\u016ftek m\u00e1 3 p\u0159eddefinovan\u00e9 konstaty pro ovl\u00e1d\u00e1n\u00ed <code>Up</code>, <code>Down</code> a <code>Unload</code>.</p> <pre><code>import { Servo } from \"./libs/servo.js\"\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4); // robutek.Pins.Servo2 je pin 38\n</code></pre> <p>Na nastaven\u00ed pozice tu\u017eky pou\u017eijeme funkci <code>pen.write()</code> a do z\u00e1vorek zadejte \u010d\u00edslo on 0 od 1023 nebo jednu z konstant <code>robutek.PenPos.Up</code>, <code>robutek.PenPos.Down</code> a <code>robutek.PenPos.Unload</code>.</p> <pre><code>pen.write(robutek.PenPos.Down);     // Za\u010dne kreslit\npen.write(robutek.PenPos.Up);       // P\u0159estane kreslit\npen.write(robutek.PenPos.Unload);   // Vyt\u00e1hne tu\u017eku\n</code></pre>"},{"location":"robot/lekce10/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Vytvo\u0159te program, kter\u00fd p\u0159i zm\u00e1\u010dknut\u00ed tla\u010d\u00edtka zasune pero a druh\u00e9 tla\u010d\u00edtko, kter\u00e9 ho vysune.</p> \u0158e\u0161en\u00ed <pre><code>import { Servo } from \"./libs/servo.js\"\nimport * as gpio from \"gpio\"\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nconst LBTN_PIN = 2;\nconst RBTN_PIN = 0;\n\ngpio.pinMode(LBTN_PIN, gpio.PinMode.INPUT);\ngpio.pinMode(RBTN_PIN, gpio.PinMode.INPUT);\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4);\n\ngpio.on(\"falling\", LBTN_PIN, () =&gt; {\n    pen.write(robutek.PenPos.Down);\n});\n\ngpio.on(\"falling\", RBTN_PIN, () =&gt; {\n    pen.write(robutek.PenPos.Up);\n});\n</code></pre>"},{"location":"robot/lekce10/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Zkombinuj poznatky z lekce 5 s motory s touto, a vytvo\u0159 program kter\u00fd nakresl\u00ed fixou na pap\u00edr \u010dtverec po stistku tla\u010d\u00edtka.</p> \u0158e\u0161en\u00ed <pre><code>import { Servo } from \"./libs/servo.js\"\nimport * as gpio from \"gpio\"\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nconst LBTN_PIN = 2;\nconst RBTN_PIN = 0;\n\ngpio.pinMode(LBTN_PIN, gpio.PinMode.INPUT);\ngpio.pinMode(RBTN_PIN, gpio.PinMode.INPUT);\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4);\n\ngpio.on(\"falling\", LBTN_PIN, async () =&gt; {\n    pen.write(robutek.PenPos.Down); // fixa dol\u016f\n\n    robutek.setSpeed(100) // Nastav rychlost na 100\n\n    await robutek.move(0, { distance: 300 }) // Uje\u010f 30 cm\n    await robutek.rotate(90)\n    await robutek.move(0, { distance: 300 })\n    await robutek.rotate(90)\n    await robutek.move(0, { distance: 300 })\n    await robutek.rotate(90)\n    await robutek.move(0, { distance: 300 })\n    await robutek.rotate(90)\n\n    pen.write(robutek.PenPos.Up); // fixa nahoru\n});\n</code></pre>"},{"location":"robot/lekce2/","title":"Lekce 2 - RGB LED + tla\u010d\u00edtko + ud\u00e1losti","text":"<p>V t\u00e9to lekci si nap\u00ed\u0161eme sv\u00e9 prvn\u00ed programy.</p> <p>Uk\u00e1\u017eeme si ovl\u00e1d\u00e1n\u00ed RGB LED um\u00edst\u011bn\u00e9 na ESP32 a pr\u00e1ci s ud\u00e1lostmi \u0159\u00edzen\u00fdmi tla\u010d\u00edtkem nebo \u010dasem.</p> <p>TypeScript (JavaScript) je imperativn\u00ed programovac\u00ed jazyk. Znamen\u00e1 to, \u017ee se vykon\u00e1 v\u0161e co do programu nap\u00ed\u0161eme, v takov\u00e9m po\u0159ad\u00ed jak jsme to zapsali. Programy maj\u00ed \u0159adu v\u011bc\u00ed co v nich um\u00edme zapsat, n\u00e1m zat\u00edm budou sta\u010dit nejz\u00e1kladn\u011bj\u0161\u00ed p\u0159\u00edkazy: i velice jednoduch\u00fd program u\u017e m\u016f\u017ee m\u00edt viditeln\u00fd v\u00fdsledek.</p> <p>St\u00e1hnout ZIP s pr\u00e1zdn\u00fdm projektem</p>"},{"location":"robot/lekce2/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Nejd\u0159\u00edve si zopakujeme p\u0159edchoz\u00ed lekci, a rozsv\u00edt\u00edme RGB LED na Rob\u016ftkovi (<code>GPIO 48</code>) jednou barvou (nap\u0159\u00edklad \u010dervenou).</p> <p>Na za\u010d\u00e1tku tohoto \u00fakolu si st\u00e1hneme nov\u00fd zip soubor obsahuj\u00edc\u00ed pr\u00e1zdn\u00fd projekt. Po sta\u017een\u00ed slo\u017eku rozbal\u00edme a otev\u0159eme ve Visual Studio Code. V souboru <code>index.ts</code> jsou p\u0159ipraveny <code>import</code> p\u0159\u00edkazy: ty n\u00e1m umo\u017en\u00ed vyu\u017e\u00edvat funkcionalitu z r\u016fzn\u00fdch soubor\u016f, nap\u0159. jednodu\u0161e ovl\u00e1dat LEDku, nebo vyu\u017e\u00edvat nadefinovan\u00e9 barvy.</p> <p>P\u00e1sek se inicializuje pomoc\u00ed <code>const ledStrip = new SmartLed(robutek.Pins.ILED, 1, LED_WS2812);</code>. Barvu LED nastav\u00edme pomoc\u00ed <code>ledStrip.set(0, colors.&lt;n\u011bjak\u00e1_barva&gt;)</code> a zobraz\u00edme pomoc\u00ed <code>ledStrip.show()</code>.</p> \u0158e\u0161en\u00ed <pre><code>import * as colors from \"./libs/colors.js\";\nimport { LED_WS2812, SmartLed } from \"smartled\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nconst ledStrip = new SmartLed(robutek.Pins.ILED, 1, LED_WS2812); // robutek.Pins.ILED je pin 48\n\nledStrip.set(0, colors.red); // nastav\u00ed barvu prvn\u00ed LED na \u010dervenou (RGB 255 0 0)\nledStrip.show(); // zobraz\u00ed nastaven\u00ed na LED\n</code></pre>"},{"location":"robot/lekce2/#co-je-to-udalost-v-programovani","title":"Co je to ud\u00e1lost v programov\u00e1n\u00ed?","text":"<p>Ud\u00e1lost, kter\u00e1 je programem rozpozn\u00e1v\u00e1na (nap\u0159\u00edklad stisknut\u00ed nebo pu\u0161t\u011bn\u00ed tla\u010d\u00edtka nebo uplynut\u00ed n\u011bjak\u00e9ho \u010dasu). Po zaznamen\u00e1n\u00ed ud\u00e1losti se vykon\u00e1 k\u00f3d, kter\u00fd je k n\u00ed p\u0159i\u0159azen.</p> <p>S ud\u00e1lost\u00ed \u0159\u00edzenou \u010dasem u\u017e jsme se setkali: pomoc\u00ed <code>setInterval</code> um\u00edme vyvolat n\u011bco, co se opakuje ka\u017ed\u00fdch <code>X</code> milisekund.</p> <p>Ud\u00e1losti \u0159\u00edzen\u00e9 stiskem tla\u010d\u00edtka m\u016f\u017eeme ovl\u00e1dat pomoc\u00ed p\u0159ilo\u017een\u00e9 knihovny <code>gpio</code>. <code>GPIO</code> je jednoduch\u00e1 elektronick\u00e1 konstrukce, kter\u00e1 n\u00e1m umo\u017e\u0148uje pos\u00edlat nebo p\u0159ij\u00edmat bit informace, a na z\u00e1klad\u011b toho m\u011bnit chov\u00e1n\u00ed na\u0161eho programu.</p> <p>Abychom mohli p\u0159ij\u00edmat sign\u00e1l ze stisknut\u00ed tla\u010d\u00edtka, nejd\u0159\u00edve mus\u00edme nastavit vybran\u00fd pin jako vstupn\u00ed. To ud\u011bl\u00e1me p\u0159\u00edkazem <code>gpio.pinMode(PIN, gpio.PinMode.INPUT)</code>, kde PIN je \u010d\u00edslo pinu (najdeme na str\u00e1nce Piny), a druh\u00fd argument je re\u017eim. Pokud bychom cht\u011bli nap\u0159. pou\u017e\u00edt LEDky p\u0159\u00edmo na desce, chceme dan\u00e9 piny pou\u017e\u00edt jako v\u00fdstupn\u00ed, tedy <code>gpio.PinMode.OUTPUT</code>.</p> <p>Jakmile m\u00e1me nastaven\u00e9 vstupn\u00ed tla\u010d\u00edtko, m\u016f\u017eeme na n\u011bm pozorovat ud\u00e1losti pomoc\u00ed <code>gpio.on()</code>. Reakci na stisknut\u00ed tla\u010d\u00edtka vyvol\u00e1me argumentem <code>\"falling\"</code>, reakci na pu\u0161t\u011bn\u00ed <code>\"rising\"</code>. K\u00f3d, kter\u00fd p\u0159i stisku tla\u010d\u00edtka n\u011bco vykon\u00e1, tedy m\u016f\u017ee vypadat takto:</p> <pre><code>const BTN_PIN = n\u011bjak\u00e9 \u010d\u00edslo;\ngpio.pinMode(BTN_PIN, gpio.PinMode.INPUT);\n\ngpio.on(\"falling\", BTN_PIN, () =&gt; {\n    // n\u011bco ud\u011blej\n});\n</code></pre>"},{"location":"robot/lekce2/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Pomoc\u00ed ud\u00e1lost\u00ed rozsv\u00edt\u00edme p\u0159i stisknut\u00ed tla\u010d\u00edtka (<code>GPIO 0</code>) RGB LED na ESP32 (<code>GPIO 48</code>) a p\u0159i pu\u0161t\u011bn\u00ed ho op\u011bt zhasneme.</p> \u0158e\u0161en\u00ed <pre><code>import * as colors from \"./libs/colors.js\";\nimport { LED_WS2812, SmartLed } from \"smartled\";\nimport * as gpio from \"gpio\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nconst ledStrip = new SmartLed(48, 1, LED_WS2812);\n\ngpio.pinMode(robutek.Pins.ButtonRight, gpio.PinMode.INPUT); // nastav\u00ed pin 0 jako vstup\n\ngpio.on(\"falling\", robutek.Pins.ButtonRight, () =&gt; { // ud\u00e1lost, kter\u00e1 prob\u011bhne p\u0159i stisknut\u00ed tla\u010d\u00edtka p\u0159ipojen\u00e9ho na pin 0\n    ledStrip.set(0, colors.red); // nastav\u00ed barvu prvn\u00ed LED na \u010dervenou (RGB 255 0 0)\n    ledStrip.show(); // zobraz\u00ed nastaven\u00ed na LED\n});\n\ngpio.on(\"rising\", robutek.Pins.ButtonRight, () =&gt; { // ud\u00e1lost, kter\u00e1 prob\u011bhne p\u0159i pu\u0161t\u011bn\u00ed tla\u010d\u00edtka p\u0159ipojen\u00e9ho na pin 0\n    ledStrip.set(0, colors.off); // nastav\u00ed prvn\u00ed LED na zhasnutou (RGB 0 0 0)\n    ledStrip.show(); // zobraz\u00ed nastaven\u00ed na LED\n});\n</code></pre>"},{"location":"robot/lekce2/#zadani-c","title":"Zad\u00e1n\u00ed C","text":"<p>Dvakr\u00e1t za sekundu vyp\u00ed\u0161eme stav zm\u00e1\u010dknut\u00ed tla\u010d\u00edtka (0 nebo 1). Stav dan\u00e9ho tla\u010d\u00edtka z\u00edsk\u00e1me pomoc\u00ed <code>gpio.read(\u010d\u00edslo pinu)</code>.</p> <p>Vzpome\u0148me si z prvn\u00edho programu, \u017ee opakov\u00e1n\u00ed dos\u00e1hneme pomoc\u00ed <code>setInterval()</code>, a informaci vyp\u00ed\u0161eme pomoc\u00ed <code>console.log()</code>.</p> \u0158e\u0161en\u00ed <pre><code>import * as gpio from \"gpio\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\ngpio.pinMode(robutek.Pins.ButtonRight, gpio.PinMode.INPUT); // nastav\u00ed pin 0 jako vstup\n\nsetInterval(() =&gt; { // pravideln\u011b vyvol\u00e1v\u00e1 ud\u00e1lost\n    console.log(gpio.read(robutek.Pins.ButtonRight)); // na\u010dte a vyp\u00ed\u0161e stav tla\u010d\u00edtka p\u0159ipojen\u00e9ho na pin 0\n}, 500); // \u010das opakov\u00e1n\u00ed se ud\u00e1v\u00e1 v milisekund\u00e1ch (500 ms je 0,5 sekundy)\n</code></pre>"},{"location":"robot/lekce2/#vystupni-ukol-v1-pozdrav","title":"V\u00fdstupn\u00ed \u00fakol V1 - Pozdrav","text":"<p>P\u0159i stisknut\u00ed tla\u010d\u00edtka (<code>robutek.Pins.ButtonRight</code>) vyp\u00ed\u0161eme pozdrav.</p>"},{"location":"robot/lekce2/#vystupni-ukol-v2-zmena-barvy","title":"V\u00fdstupn\u00ed \u00fakol V2 - Zm\u011bna barvy","text":"<p>P\u0159i stisknut\u00ed tla\u010d\u00edtka (<code>robutek.Pins.ButtonRight</code>) rozsv\u00edt\u00edme RGB LED na Rob\u016ftkovi (<code>robutek.Pins.ILED</code>) jednou barvou a p\u0159i pu\u0161t\u011bn\u00ed barvu zm\u011bn\u00edme na jinou.</p>"},{"location":"robot/lekce3/","title":"Lekce 3 - prom\u011bnn\u00e9 a podm\u00ednky","text":"<p>V imperativn\u00edm programov\u00e1n\u00ed si dr\u017e\u00edme stav pomoc\u00ed prom\u011bnn\u00fdch. Prom\u011bnn\u00e9 jsou pojmenovan\u00e9 hodnoty, kter\u00e9 m\u016f\u017eeme m\u011bnit, a opakovan\u011b pou\u017e\u00edvat v r\u016fzn\u00fdch \u010d\u00e1stech k\u00f3du.</p> <p>Prom\u011bnn\u00e1 m\u00e1 sv\u016fj typ, kter\u00fd ur\u010duje, jak\u00e9 hodnoty m\u016f\u017ee prom\u011bnn\u00e1 m\u00edt. Prom\u011bnnou vytvo\u0159\u00edme pomoc\u00ed kl\u00ed\u010dov\u00e9ho slova <code>let</code>. Ka\u017ed\u00fd jazyk m\u00e1 n\u011bkolik z\u00e1kladn\u00edch typ\u016f, zat\u00edm n\u00e1m budou sta\u010dit dva:</p> <ul> <li>number: z\u00e1kladn\u00ed \u010d\u00edseln\u00fd typ, m\u016f\u017ee nab\u00fdvat nap\u0159. hodnot: <code>1</code>, <code>2</code>, <code>10</code>, <code>-5</code>, <code>0.5</code></li> <li>boolean: z\u00e1kladn\u00ed pravdivostn\u00ed typ, kter\u00fd nab\u00fdv\u00e1 hodnot <code>true</code> a <code>false</code></li> </ul> <p>Hodnoty p\u0159i\u0159azujeme do prom\u011bnn\u00fdch pomoc\u00ed oper\u00e1toru <code>=</code>. P\u0159\u00edklad pou\u017eit\u00ed:</p> <pre><code>let first : number; // Vytvo\u0159\u00ed prom\u011bnnou se jm\u00e9nem first, a typem number\nfirst = 10; // P\u0159i\u0159ad\u00ed do prom\u011bnn\u00e9 hodnotu 10\nfirst = 15; // Zm\u011bn\u00ed hodnotu prom\u011bnn\u00e9 na 15\nlet second : number = 20; // Vytv\u00e1\u0159en\u00ed a p\u0159i\u0159azen\u00ed m\u016f\u017eeme zkombinovat\nlet truth : boolean = true; // Vytvo\u0159\u00ed prom\u011bnnou typu bool, kter\u00e1 reprezentuje pravdu\n</code></pre> <p>S prom\u011bnn\u00fdmi stejn\u011b jako s \u010d\u00edsly m\u016f\u017eeme prov\u00e1d\u011bt z\u00e1kladn\u00ed operace.</p> <pre><code>let a : number = 10;\nlet b : number = 5;\nlet c : number = a + b;\nlet d : number = b - a;\n</code></pre> <p>Abychom na z\u00e1klad\u011b hodnot prom\u011bnn\u00fdch mohli m\u011bnit chov\u00e1n\u00ed programu, pot\u0159ebujeme podm\u00ednky.</p> <p>Podm\u00ednka <code>if</code> na z\u00e1klad\u011b pravdivostn\u00ed hodnoty rozhodne, zda se vykon\u00e1 dan\u00fd kus k\u00f3du. Pokud prom\u011bnn\u00e1 <code>podm\u00ednka</code> je typu bool, potom po vykon\u00e1n\u00ed n\u00e1sleduj\u00edc\u00edho k\u00f3du: <pre><code>let result : number = 10;\nif (podm\u00ednka) {\n  result = 20;\n}\n</code></pre></p> <p>Pokud <code>podm\u00ednka</code> m\u00e1 hodnotu <code>true</code>, bude v <code>result</code> 20, pokud m\u00e1 <code>podm\u00ednka</code> hodnotu <code>false</code>, bude v <code>result</code> 10.</p> <p>Rovn\u011b\u017e se m\u016f\u017eeme v podm\u00ednce rozhodovat na z\u00e1klad\u011b porovn\u00e1v\u00e1n\u00ed \u010d\u00edseln\u00fdch hodnot.</p> <pre><code>let first : number;\nlet second : number;\n...\nif (first == second) {\n  ...\n}\n</code></pre> <p>To, zda jsou dv\u011b \u010d\u00edsla stejn\u00e1, zjist\u00edme pomoc\u00ed <code>==</code>, zda je jedno v\u011bt\u0161\u00ed ne\u017e druh\u00e9 zji\u0161\u0165ujeme pomoc\u00ed <code>&lt;</code> a <code>&gt;</code>, p\u0159\u00edpadn\u011b <code>&lt;=</code> a <code>&gt;=</code> pokud chceme p\u0159ipustit rovnost.</p> <p>Pokud se chceme zachovat dv\u011bma r\u016fzn\u00fdmi zp\u016fsoby, pou\u017eijeme konstrukci</p> <pre><code>if (podm\u00ednka) {\n  a\n} else {\n  b\n}\n</code></pre> <p>Pokud podm\u00ednka plat\u00ed, vykon\u00e1 se k\u00f3d <code>a</code>, pokud neplat\u00ed, vykon\u00e1 se k\u00f3d <code>b</code>.</p> <p>Za pou\u017eit\u00ed prom\u011bnn\u00fdch a podm\u00ednek rozsv\u00edt\u00edme sv\u011btlo na na\u0161\u00ed desce r\u016fzn\u00fdmi barvami.</p> <p>Barevn\u00e9 sv\u011btlo vytv\u00e1\u0159\u00edme ze t\u0159\u00ed z\u00e1kladn\u00edch barev: \u010derven\u00e1 (RED), zelen\u00e1 (GREEN), a modr\u00e1 (BLUE). Tyto barvy m\u00edch\u00e1me v r\u016fzn\u00fdch pom\u011brech od 0 do 255, a vytv\u00e1\u0159\u00edme tak r\u016fzn\u00e9 barvy:</p> <ul> <li>Prvn\u00ed hodnota (r) n\u00e1m d\u00e1v\u00e1 mno\u017estv\u00ed \u010derven\u00e9 (tedy nap\u0159. hodnoty 100, 0, 0) rozsv\u00edt\u00ed LEDku \u010derven\u011b</li> <li>Druh\u00e1 (g) d\u00e1v\u00e1 mno\u017estv\u00ed zelen\u00e9</li> <li>T\u0159et\u00ed (b) d\u00e1v\u00e1 mno\u017estv\u00ed modr\u00e9</li> </ul> <p>Ve v\u00fdchoz\u00edm stavu je LED vypnut\u00e1 (hodnoty <code>(0, 0, 0)</code>), a nejsiln\u011bj\u0161\u00ed b\u00edl\u00e9 sv\u011btlo z\u00edsk\u00e1me pou\u017eit\u00edm v\u0161ech barev na maximum (hodnoty <code>(255, 255, 255)</code>).</p> <p>Druhou variantou je pou\u017eit\u00ed p\u0159eddefinovan\u00fdch barev, kter\u00e9 jsou v souboru <code>colors.ts</code>. P\u0159\u00edklad pou\u017eit\u00ed obou variant:</p> <pre><code>ledStrip.set(0, colors.off); // Vypne LEDku pomoc\u00ed p\u0159eddefinovan\u00e9 barvy\nledStrip.set(0, {r: 0, g: 0, b: 0}); // Vypne LEDku pomoc\u00ed vlastn\u00ed barvy\n\nledStrip.set(0, colors.green); // Rozsv\u00edt\u00ed LEDku zelen\u011b pomoc\u00ed p\u0159eddefinovan\u00e9 barvy\nledStrip.set(0, {r: 0, g: 255, b: 0}); // Rozsv\u00edt\u00ed LEDku zelen\u011b pomoc\u00ed vlastn\u00ed barvy\n</code></pre> <p>Pro tuto lekci si st\u00e1hneme zip, nebo nav\u00e1\u017eeme na p\u0159edchoz\u00ed cvi\u010den\u00ed. Sv\u00e9 \u0159e\u0161en\u00ed budeme ps\u00e1t do souboru <code>index.ts</code>.</p>"},{"location":"robot/lekce3/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Pomoc\u00ed jedn\u00e9 prom\u011bnn\u00e9 se stavem a podm\u00ednky ka\u017edou sekundu bu\u010f rozsv\u00edt\u00edme, nebo zhasneme LED na desce.</p> \u0158e\u0161en\u00ed <pre><code>import { LED_WS2812, SmartLed } from \"smartled\"\nimport * as colors from \"./libs/colors.js\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nconst ledStrip = new SmartLed(robutek.Pins.ILED, 1, LED_WS2812);\n\nlet on: boolean = false; // LED je vypnut\u00e1\n\nsetInterval(() =&gt; {\n  if (on) { // Pokud je LED zapnut\u00e1\n    ledStrip.set(0, colors.off); // Vypneme LED\n    ledStrip.show(); // Zobraz\u00edme zm\u011bny\n    on = false;\n  } else {\n    ledStrip.set(0, colors.green); // Rozsv\u00edt\u00edme LED zelenou barvou\n    ledStrip.show(); // Zobraz\u00edme zm\u011bny\n    on = true\n  }\n}, 1000);\n</code></pre>"},{"location":"robot/lekce3/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Pomoc\u00ed funkce <code>colors.rainbow</code> budeme proch\u00e1zet duhu. Jde o funkci (o t\u011bch si pov\u00edme trochu v\u00edce pozd\u011bji), kter\u00e1 dostane \u010d\u00edslo od 0 do 360, a na z\u00e1klad\u011b toho vr\u00e1t\u00ed barvu na barevn\u00e9m spektru. V dan\u00e9m intervalu (nap\u0159. 100 ms) budeme postupn\u011b zvy\u0161ovat \u010d\u00edslo a nastavovat barvu LEDky na <code>colors.rainbow(cislo)</code>. Pokud na\u0161e \u010d\u00edslo p\u0159es\u00e1hne hodnotu <code>360</code>, mus\u00edme ho op\u011bt nastavit na <code>0</code>.</p> \u0158e\u0161en\u00ed <pre><code>import * as colors from \"./libs/colors.js\";\nimport { LED_WS2812, SmartLed } from \"smartled\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nconst ledStrip = new SmartLed(robutek.Pins.ILED, 1, LED_WS2812);\n\nlet shade = 0; // Dr\u017e\u00edme si stav s aktu\u00e1ln\u00edm odst\u00ednem\n\nsetInterval(() =&gt; {\n    ledStrip.set(0, colors.rainbow(shade)); // Nastav\u00edme LED na aktu\u00e1ln\u00ed odst\u00edn\n    ledStrip.show(); // Zobraz\u00edme vybranou barvu\n    shade = shade + 1; // Zvedneme odst\u00edn (lze i shade += 1)\n    if (shade &gt; 360) {\n        shade = 0;\n    }\n}, 100);\n</code></pre>"},{"location":"robot/lekce3/#zadani-c","title":"Zad\u00e1n\u00ed C","text":"<p>Tentokr\u00e1t budeme reagovat na stisk tla\u010d\u00edtka. Do desky si zapoj\u00edme p\u00e1sek 8 inteligentn\u00edch ledek, a vybranou barvou je budeme rozsv\u011bcet.</p> <p>Po stisku tla\u010d\u00edtka zhasneme aktu\u00e1ln\u00ed LEDku, a rozsv\u00edt\u00edme tu dal\u0161\u00ed. Pokud p\u0159i stisku tla\u010d\u00edtka sv\u00edt\u00ed posledn\u00ed LED, zhasneme ji, a rozsv\u00edt\u00edme op\u011bt prvn\u00ed LED.</p> <p>Led p\u00e1sek je p\u0159ipojen\u00fd za inteligentn\u00ed ledku na desce, tak\u017ee index p\u00e1sku za\u010d\u00edn\u00e1 na 1.</p> \u0158e\u0161en\u00ed <pre><code>import * as colors from \"./libs/colors.js\";\nimport { LED_WS2812, SmartLed } from \"smartled\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nimport * as gpio from \"gpio\";\n\nconst ledStrip = new SmartLed(robutek.Pins.ILED, 9, LED_WS2812);\n\ngpio.pinMode(robutek.Pins.ButtonRight, gpio.PinMode.INPUT); // Nastav\u00edme tla\u010d\u00edtko\n\nlet index : number = 1;\nlet color : Rgb = colors.light_blue; // Vybereme si barvu\nledStrip.set(0, color); // Nastav\u00edme LED na aktu\u00e1ln\u00ed odst\u00edn\nledStrip.show(); // Zobraz\u00edme zm\u011bny\n\ngpio.on(\"falling\", robutek.Pins.ButtonRight, () =&gt; {\n    ledStrip.set(index, colors.off); // Vypneme p\u0159edchoz\u00ed LED\n    index = index + 1; // Zvedneme index (lze i index += 1)\n    if(index &gt; 8){ // Pokud jsme mimo rozsah p\u00e1sku, vr\u00e1t\u00edme se na za\u010d\u00e1tek\n        index = 1;\n    }\n    ledStrip.set(index, color); // Nastav\u00edme aktu\u00e1ln\u00ed LED\n    ledStrip.show();  // Zobraz\u00edme zm\u011bny\n});\n</code></pre>"},{"location":"robot/lekce3/#vystupni-ukol-v1-knightrider","title":"V\u00fdstupn\u00ed \u00fakol V1 - Knightrider","text":"<p>Sv\u00edt\u00edc\u00ed LED \"b\u011bh\u00e1\" s danou rychlost\u00ed od za\u010d\u00e1tku do konce p\u00e1sky. Jakmile doraz\u00ed na konec, zm\u011bn\u00ed sm\u011br, a posouv\u00e1 se opa\u010dn\u00fdm sm\u011brem.</p> <p>V na\u0161em p\u0159\u00edpad\u011b bude sta\u010dit, kdy\u017e se bude pohybovat pouze jedna LEDka.</p> <p></p> <p>Pro dobrovoln\u00edky</p> <ul> <li> <p>Jezdec m\u016f\u017ee p\u0159i b\u011bhu m\u011bnit barvy (nap\u0159. pomoc\u00ed funkce <code>rainbow</code>)</p> </li> <li> <p>Jezdec m\u016f\u017ee zanech\u00e1vat stopu: barva nezmiz\u00ed hned, ale a\u017e s odstupem. Barva m\u016f\u017ee \"mizet\" postupn\u011b: intenzita stopy se \u010dasem sni\u017euje.</p> </li> </ul>"},{"location":"robot/lekce4/motors/","title":"Lekce 4 - Motory","text":"<p>V t\u00e9to lekci zkus\u00edme to\u010dit motory a pohybovat robotem.</p> <p>Polo\u017e si Rob\u016ftka na n\u011bco tak, aby se kola nedot\u00fdkala zem\u011b a mohla se voln\u011b to\u010dit - tak m\u016f\u017ee\u0161 k\u00f3d otestovat bez toho, aby Rob\u016ftek sjel ze stolu.</p> <p>Za\u010dneme op\u011bt s pr\u00e1zdn\u00fdm projektem, st\u00e1hni/nakop\u00edruj si ho do nov\u00e9 slo\u017eky pro tuto lekci: St\u00e1hnout ZIP s pr\u00e1zdn\u00fdm projektem</p> <p>Otev\u0159i ve Visual Studiu Code a najdi <code>src/index.ts</code>, m\u011blo by tam b\u00fdt n\u011bco jako:</p> <pre><code>import * as colors from \"./libs/colors.js\";\nimport * as gpio from \"gpio\";\nimport { SmartLed, LED_WS2812 } from \"smartled\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n</code></pre> <p>To je dobr\u00fd za\u010d\u00e1tek - pokra\u010dovat budeme na konci souboru.</p>"},{"location":"robot/lekce4/motors/#async-main-funkce","title":"Async main funkce","text":"<p>Motory jsou tzv. asynchron\u00ed, to znamen\u00e1, se ovl\u00e1daj\u00ed p\u0159\u00edkazem, kter\u00fd m\u016f\u017ee trvat del\u0161\u00ed dobu, ne\u017e se vykon\u00e1 (nap\u0159\u00edklad \"uje\u010f 50cm\" bude trvat n\u011bkolik vte\u0159in).</p> <p>Abychom mohli motori pou\u017e\u00edvat, je t\u0159eba p\u0159idat tuto \"kostru\" s <code>async function()</code>. Klidn\u011b ji nakop\u00edruj, pat\u0159\u00ed na konec souboru <code>src/index.ts</code>.</p> <pre><code>async function main() {\n    // Tady bude k\u00f3d na ovl\u00e1d\u00e1n\u00ed motor\u016f\n\n}\n\nmain().catch(console.error);\n</code></pre>"},{"location":"robot/lekce4/motors/#jezdeni-na-vzdalenost","title":"Je\u017ed\u011bn\u00ed na vzd\u00e1lenost","text":"<p>Je\u017ed\u011bn\u00ed m\u00e1 t\u0159i \u010d\u00e1sti - nastaven\u00ed rychlosti, rampy, a samotn\u00fd pohyb:</p> <ul> <li><code>robutek.setSpeed(RYCHLOST)</code> - RYCHLOST je \u010d\u00edslo milimetrech za vte\u0159inu, na Rob\u016ftkovi prakticky od 0 do 800 (z\u00e1porn\u00e9 p\u0159i zna\u010d\u00ed couv\u00e1n\u00ed p\u0159i                                  nekone\u010dn\u00e9 j\u00edzd\u011b nebo j\u00edzd\u011b na \u010das)</li> <li><code>robutek.setRamp(RAMPA)</code> - RAMPA je \u010d\u00edslo ud\u00e1vaj\u00edc\u00ed zrychlen\u00ed Rob\u016ftka v mm/s^2. V p\u0159\u00edpad\u011b, \u017ee je rovna nule, je zrychlen\u00ed okam\u017eit\u00e9.</li> <li><code>await robutek.move(SM\u011aR, { distance: VZD\u00c1LENOST_V_MM })</code><ul> <li>SM\u011aR je desetinn\u00e9 \u010d\u00edslo od -1 do 1, kdy<ul> <li>-1 je znamen\u00e1 \u00fapln\u011b doleva,</li> <li>0 je rovn\u011b a</li> <li>1 je \u00fapln\u011b doprava.</li> </ul> </li> <li>VZD\u00c1LENOST_V_MM zna\u010d\u00ed, jak daleko m\u00e1 robot jet</li> </ul> </li> </ul> <p>Zad\u00e1v\u00e1n\u00ed parametr\u016f rychlosti a rampy nen\u00ed pot\u0159eba opakovat p\u0159i ka\u017ed\u00e9m pohybu - knihovna si hodnotu pamatuje a p\u0159i dal\u0161\u00edm vol\u00e1n\u00ed funkce <code>move</code> ji pou\u017eije.</p>"},{"location":"robot/lekce4/motors/#priklad","title":"P\u0159\u00edklad","text":"<p>Pat\u0159\u00ed dovnit\u0159 <code>async function main()</code>, pod koment\u00e1\u0159 v p\u0159echoz\u00edm kusu k\u00f3du:</p> <pre><code>    robutek.setSpeed(100);  // Nastav rychlost na 100 mm/s\n    robutek.setRamp(2000);  // Nastav zrychlen\u00ed na 2000 mm/s^2\n    await robutek.move(0, { distance: 100 });  // Uje\u010f 100 mm == 10 cm\n</code></pre> <p>\u00dakol: Zkus p\u0159idat k\u00f3d, aby Rob\u016ftek dojel zase zp\u00e1tky na stejn\u00e9 m\u00edsto</p> \u0158e\u0161en\u00ed <pre><code>await robutek.move(0, { distance: -100 }) // Uje\u010f -100 mm == -10 cm\n</code></pre>"},{"location":"robot/lekce4/motors/#otaceni","title":"Ot\u00e1\u010den\u00ed","text":"<p>Na ot\u00e1\u010den\u00ed m\u00e1 Rob\u016ftek p\u0159ipravenou funkci:</p> <ul> <li><code>await robutek.rotate(\u00daHEL)</code> - Oto\u010d\u00ed Rob\u016ftka o \u00daHEL stup\u0148\u016f rychlost\u00ed nastavenou p\u0159es <code>robutek.setSpeed</code>. M\u016f\u017ee b\u00fdt z\u00e1porn\u00e9 \u010d\u00edslo.</li> </ul>"},{"location":"robot/lekce4/motors/#ukol","title":"\u00dakol","text":"<p>Napi\u0161 program tak, aby Rob\u016ftek popojel 10cm dop\u0159edu, oto\u010dil se \u010delem vzad (180 stup\u0148\u016f), a popojel zp\u00e1tky na p\u016fvodn\u00ed m\u00edsto.</p> \u0158e\u0161en\u00ed <pre><code>import * as colors from \"./libs/colors.js\";\nimport * as gpio from \"gpio\";\nimport { SmartLed, LED_WS2812 } from \"smartled\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\n\nasync function main() {\n    // Tady bude k\u00f3d na ovl\u00e1d\u00e1n\u00ed motor\u016f\n\n    robutek.setSpeed(100);  // Nastav rychlost na 100 mm/s\n    robutek.setRamp(2000);  // Nastav zrychlen\u00ed na 2000 mm/s^2\n\n    await robutek.move(0, { distance: 100 });  // Uje\u010f 10 cm\n\n    await robutek.rotate(180);  // Oto\u010d se o 180 stup\u0148\u016f\n\n    await robutek.move(0, { distance: 100 });  // Uje\u010f 10 cm\n}\n\nmain().catch(console.error);\n</code></pre>"},{"location":"robot/lekce4/motors/#tvary","title":"Tvary","text":"<p>Kombinov\u00e1n\u00edm <code>robutek.move</code> a <code>robutek.rotate</code> m\u016f\u017ee\u0161 s Rob\u016ftkem \"vyjezdit\" r\u016fzn\u00e9 tvary.</p> <p>\u00dakol: ud\u011bl\u011bj program tak, aby Rob\u016ftek objel \u010dtverec a skon\u010dil zp\u00e1tky na stejn\u00e9m m\u00edst\u011b.</p> \u0158e\u0161en\u00ed <pre><code>import * as colors from \"./libs/colors.js\";\nimport * as gpio from \"gpio\";\nimport { SmartLed, LED_WS2812 } from \"smartled\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nasync function main() {\n    // Tady bude k\u00f3d na ovl\u00e1d\u00e1n\u00ed motor\u016f\n\n    robutek.setSpeed(100);  // Nastav rychlost na 100 mm/s\n\n    await robutek.move(0, { distance: 300 });  // Uje\u010f 30 cm\n    await robutek.rotate(90);\n    await robutek.move(0, { distance: 300 });\n    await robutek.rotate(90);\n    await robutek.move(0, { distance: 300 });\n    await robutek.rotate(90);\n    await robutek.move(0, { distance: 300 });\n    await robutek.rotate(90);\n}\n\nmain().catch(console.error);\n</code></pre>"},{"location":"robot/lekce5/","title":"Lekce 5 - funkce","text":""},{"location":"robot/lekce5/#funkce-co-to-je","title":"Funkce - Co to je?","text":"<p>Funkce je \u010d\u00e1st programu, kterou m\u016f\u017eeme volat (spou\u0161t\u011bt) jin\u00fdmi \u010d\u00e1stmi programu. Rozd\u011blen\u00ed programu na funkce ho v\u00fdrazn\u011b zp\u0159ehled\u0148uje a umo\u017e\u0148uje n\u00e1m opakovan\u011b pou\u017e\u00edvat jeden kus k\u00f3du.</p>"},{"location":"robot/lekce5/#vytvoreni-a-zavolani-funkce","title":"Vytvo\u0159en\u00ed a zavol\u00e1n\u00ed funkce","text":"<pre><code>function sayHello(): void {\n    console.log(\"Ahoj\");\n    console.log(\"z funkce\");\n}\n</code></pre> <p>Funkci zavol\u00e1me n\u00e1sleduj\u00edc\u00edm zp\u016fsobem: <pre><code>sayHello();\n</code></pre></p> K\u00f3d n\u00e1m vyp\u00ed\u0161e: <pre><code>info:    Device: Starting machine\nAhoj\nz funkce\n</code></pre>"},{"location":"robot/lekce5/#predavani-argumentu","title":"P\u0159ed\u00e1v\u00e1n\u00ed argument\u016f","text":"<p>Funkc\u00edm m\u016f\u017eeme p\u0159i vol\u00e1n\u00ed p\u0159ed\u00e1vat argumenty. Argumenty funkce p\u00ed\u0161eme p\u0159i vytv\u00e1\u0159en\u00ed funkce do z\u00e1vorky. Pokud je argument\u016f v\u00edce, odd\u011blujeme je \u010d\u00e1rkou. Parametry je taky pot\u0159eba vhodn\u011b otypovat. <pre><code>function getSquare(num: number): void {\n    let square: number = num * num;\n    console.log(\"Druh\u00e1 mocnina zadan\u00e9ho \u010d\u00edsla je:\");\n    console.log(square);\n}\n</code></pre></p> <p>Funckci zavol\u00e1me n\u00e1sleduj\u00edc\u00edm zp\u016fsobem: <pre><code>getSquare(5);\n</code></pre></p> To by n\u00e1m m\u011blo vypsat: <pre><code>info:    Device: Starting machine\nDruh\u00e1 mocnina zadan\u00e9ho \u010d\u00edsla je:\n25\n</code></pre>"},{"location":"robot/lekce5/#vraceni-hodnot","title":"Vracen\u00ed hodnot","text":"<p>Z funkce je mo\u017en\u00e9 vr\u00e1tit hodnotu. M\u016f\u017eeme tak jednoduch\u00fdm zp\u016fsobem pojmenovat slo\u017eit\u011bj\u0161\u00ed v\u00fdpo\u010dty a prov\u00e1d\u011bt je opakovan\u011b. Hodnoty vrac\u00edme pomoc\u00ed kl\u00ed\u010dov\u00e9ho slova <code>return</code>. Podobn\u011b jako v p\u0159\u00edpad\u011b parametr\u016f mus\u00edme specifikovat typ vracen\u00e9 hodnoty. Pokud funkce \u017e\u00e1dnou hodnotu nevrac\u00ed, n\u00e1vratov\u00fd typ je <code>void</code>, tedy \"pr\u00e1zdn\u00e1 hodnota\".</p> <pre><code>function getAverage(num1: number, num2: number): number {\n    let sum: number = num1 + num2; // Sou\u010det dvou \u010d\u00edsel\n    return sum / 2; // Vr\u00e1t\u00edme pr\u016fm\u011br dvou \u010d\u00edsel jako n\u00e1vratovou hodnotu\n}\n</code></pre> <p>Funkci pou\u017eijeme n\u00e1sleduj\u00edc\u00edm zp\u016fsobem: <pre><code>let average: number = getAverage(5, 10);\n\nconsole.log(\"Pr\u016fm\u011br je:\");\nconsole.log(average);\n</code></pre></p> V\u00fdstup programu <pre><code>info:    Device: Starting machine\nPr\u016fm\u011br je:\n7.5\n</code></pre> Nedosa\u017eiteln\u00fd k\u00f3d <p>Pou\u017eit\u00edm kl\u00ed\u010dov\u00e9ho slova <code>return</code> ukon\u010d\u00edme vykon\u00e1v\u00e1n\u00ed sou\u010dasn\u00e9 funkce a vr\u00e1t\u00edme se zp\u00e1tky do funkce kter\u00e1 ji zavolala. Z toho vypl\u00fdv\u00e1, \u017ee to co nap\u00ed\u0161eme za <code>return</code> se ji\u017e nikdy nevykon\u00e1. <pre><code>function getSquare(num: number): number { // Druh\u00e1 mocnina\n    return num * num;\n    console.log(\"Toto se nikdy nevyp\u00ed\u0161e\");\n}\n</code></pre></p> <p>Samoz\u0159ejm\u011b m\u016f\u017eeme funkce kombinovat, vz\u00e1jemn\u011b volat z jin\u00fdch funkc\u00ed, a v\u00fdsledky ukl\u00e1dat do prom\u011bnn\u00fdch.  M\u016f\u017eeme tak kombinovat funkcionalitu d\u0159\u00edve napsan\u00fdch funkc\u00ed a zp\u0159ehlednit celkov\u00fd k\u00f3d.</p> <pre><code>function getSquare(num: number): number { // Druh\u00e1 mocnina\n    return num * num;\n}\n\nfunction sumSquares(first: number, second: number) { // Se\u010dti druh\u00e9 mocniny\n    let result = getSquare(first) + getSquare(second);\n    return result;\n}\n</code></pre>"},{"location":"robot/lekce5/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Pod\u00edv\u00e1me se op\u011bt na p\u0159\u00edklady z p\u0159edchoz\u00edch lekc\u00ed, a zobecn\u00edme \u010d\u00e1sti k\u00f3du tak, aby \u0161ly jednodu\u0161e m\u011bnit. V prvn\u00edm p\u0159\u00edkladu vytvo\u0159\u00edme funkci <code>count</code>, kter\u00e1 jako argumenty vezme dv\u011b \u010d\u00edsla, a postupn\u011b vyp\u00ed\u0161e \u010d\u00edsla od prvn\u00edho argumentu, po druh\u00fd. tedy zavol\u00e1n\u00ed funkce <code>count(1, 5)</code> vyp\u00ed\u0161e</p> <pre><code>1\n2\n3\n4\n5\n</code></pre> \u0158e\u0161en\u00ed <pre><code>function count(lower: number, upper: number): void {\n    for (let counter = lower; counter &lt;= upper; counter++) {\n        console.log(counter);\n    }\n}\n</code></pre>"},{"location":"robot/lekce5/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>M\u00edsto vypisov\u00e1n\u00ed \u010dtvere\u010dku si chceme napsat funkci, kter\u00e1 na v\u00fdstup nakresl\u00ed obd\u00e9ln\u00edk libovoln\u00e9 velikosti. Nap\u00ed\u0161eme tedy funkci <code>drawRectangle</code> (nakresli obd\u00e9ln\u00edk), kter\u00e1 vezme argument \u0161\u00ed\u0159ky a d\u00e9lky, a pot\u00e9 vyp\u00ed\u0161e obd\u00e9ln\u00edk dan\u00e9 velikosti.</p> \u0158e\u0161en\u00ed <pre><code>import { stdout } from \"stdio\";\n\nfunction drawRectangle(cols: number, rows: number): void { // funkce, kter\u00e1 vykresl\u00ed obd\u00e9ln\u00edk (po\u010det sloupc\u016f, po\u010det \u0159\u00e1dk\u016f)\n    for (let row: number = 0; row &lt; rows; row++) { // projdeme v\u0161echny \u0159\u00e1dky\n        for (let col: number = 0; col &lt; cols; col++) { // projdeme v\u0161echny sloupce\n            stdout.write(\"*\"); // vyp\u00ed\u0161eme hv\u011bzdi\u010dku\n        }\n        stdout.write(\"\\n\"); // p\u0159esuneme se na dal\u0161\u00ed \u0159\u00e1dek\n    }\n}\n\ndrawRectangle(5, 2); // vyp\u00ed\u0161e obd\u00e9ln\u00edk o velikosti \u0161\u00ed\u0159ky 5 a d\u00e9lky 2\n</code></pre>"},{"location":"robot/lekce5/#zadani-c","title":"Zad\u00e1n\u00ed C","text":"<p>Nakonec se vr\u00e1t\u00edme k LED p\u00e1sk\u016fm, kter\u00e9 te\u010f m\u016f\u017eeme rozsv\u00edtit jednou funkc\u00ed vybran\u00fdm zp\u016fsobem. Nap\u00ed\u0161eme funkci, kter\u00e1 na vstupu vezme barvu a \u010d\u00edslo LED, kterou chceme rozsv\u00edtit.</p> \u0158e\u0161en\u00ed <pre><code>import { SmartLed, LED_WS2812 } from \"smartled\";\nimport * as colors from \"./libs/colors.js\"\n\nconst LED_PIN = 21;\nconst LED_COUNT = 8;\n\nconst ledStrip = new SmartLed(LED_PIN, LED_COUNT, LED_WS2812);  // p\u0159ipoj\u00ed p\u00e1sek na pin 21, s 8 ledkami a typem WS2812\n\nfunction setLed(color: colors.Rgb, index: number){\n    ledStrip.set(index, color); // Nastav\u00edme LED na aktu\u00e1ln\u00ed odst\u00edn\n    ledStrip.show(); // Zobraz\u00edme vybranou barvu\n}\n</code></pre>"},{"location":"robot/lekce5/#zadani-vystupniho-ukolu-v1","title":"Zad\u00e1n\u00ed v\u00fdstupn\u00edho \u00fakolu V1","text":"<p>Zkombinujeme to, co jsme se zat\u00edm nau\u010dili: vytvo\u0159\u00edme funkci, kter\u00e1 na vstupu dostane barvu, \u010d\u00edslo po\u010d\u00e1te\u010dn\u00ed a koncov\u00e9 LED, a zabarv\u00ed v\u0161echny LED v tomto rozsahu. Ostatn\u00ed LED zhasne.</p> <p>Pro dobrovoln\u00edky</p> <ul> <li> <p>M\u016f\u017eeme vybran\u00e9 LEDky rozsv\u00edtit r\u016fzn\u00fdmi barvami: nap\u0159. funkc\u00ed <code>colors.rainbow()</code> proch\u00e1zet definovan\u00fd rozsah barev</p> </li> <li> <p>M\u00edsto jedn\u00e9 barvy m\u016f\u017eeme zadat po\u010d\u00e1te\u010dn\u00ed a koncovou barvu, p\u0159i\u010dem\u017e LED mezi nimi budou mezi t\u011bmito dv\u011bma barvami postupn\u011b p\u0159ech\u00e1zet.</p> </li> </ul>"},{"location":"robot/lekce5/pen/","title":"Lekce 5 - Servo (Kreslen\u00ed tu\u017ekou)","text":"<p>Na Rob\u016ftkovi jsou dv\u011b pozice na p\u0159ipojen\u00ed serva - piny 38 a 21. Pokud jste si podle n\u00e1vodu ke slo\u017een\u00ed robota p\u0159ipevnili servo a tu\u017eku, jste p\u0159ipraveni na to kreslit.</p>"},{"location":"robot/lekce5/pen/#zacatek","title":"Za\u010d\u00e1tek","text":"<p>Abychom mohli pou\u017e\u00edvat servo, mus\u00edme ho z\u00edskat p\u0159\u00edkazem <code>const servo = new Servo(...)</code>, kde do z\u00e1vorky nap\u00ed\u0161eme \u010d\u00edslo PINu, timer (zde ho nastav\u00edme na 1) a kan\u00e1l (zde ho nastav\u00edme na 4)</p> <pre><code>import { Servo } from \"./libs/servo.js\"\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nconst servo = new Servo(robutek.Pins.Servo2, 1, 4); // robutek.Pins.Servo2 je pin 38\n</code></pre> <p>Na nastaven\u00ed pozice serva pou\u017eijeme funkci <code>servo.write()</code> a do z\u00e1vorek zad\u00e1me \u010d\u00edslo od 0 do 1023, kter\u00e9 ur\u010d\u00ed \u00fahel oto\u010den\u00ed. <pre><code>servo.write(0);    // 0\u00b0\nservo.write(512);  // 90\u00b0\nservo.write(1023); // 180\u00b0\n</code></pre></p>"},{"location":"robot/lekce5/pen/#kresleni-tuzkou","title":"Kreslen\u00ed tu\u017ekou","text":"<p>T\u00edm, \u017ee zved\u00e1me nebo pokl\u00e1d\u00e1me servo, m\u016f\u017eeme ovl\u00e1dat p\u0159ipevn\u011bnou tu\u017eku.  Abychom si nemuseli pamatovat konkr\u00e9tn\u00ed hodnoty pro zved\u00e1n\u00ed tu\u017eky, Rob\u016ftek m\u00e1 3 p\u0159eddefinovan\u00e9 konstaty pro ovl\u00e1d\u00e1n\u00ed: <code>Up</code>, <code>Down</code> a <code>Unload</code>. Pokud bychom do n\u011bj d\u00e1vali r\u016fzn\u00e9 druhy tu\u017eek, m\u016f\u017eeme si samoz\u0159ejm\u011b nadefinovat vlastn\u00ed.</p> <pre><code>import { Servo } from \"./libs/servo.js\"\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4); // robutek.Pins.Servo2 je pin 38\n</code></pre> <p>Na nastaven\u00ed pozice tu\u017eky pou\u017eijeme funkci <code>pen.write()</code> a do z\u00e1vorek zadejte \u010d\u00edslo on 0 od 1023 nebo jednu z konstant <code>robutek.PenPos.Up</code>, <code>robutek.PenPos.Down</code> a <code>robutek.PenPos.Unload</code>.</p> <pre><code>pen.write(robutek.PenPos.Down);     // Za\u010dne kreslit\npen.write(robutek.PenPos.Up);       // P\u0159estane kreslit\npen.write(robutek.PenPos.Unload);   // Vyt\u00e1hne tu\u017eku\n</code></pre>"},{"location":"robot/lekce5/pen/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Vytvo\u0159te program, kter\u00fd p\u0159i zm\u00e1\u010dknut\u00ed tla\u010d\u00edtka zasune pero a druh\u00e9 tla\u010d\u00edtko, kter\u00e9 ho vysune.</p> \u0158e\u0161en\u00ed <pre><code>import { Servo } from \"./libs/servo.js\"\nimport * as gpio from \"gpio\"\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nconst LBTN_PIN = 2;\nconst RBTN_PIN = 0;\n\ngpio.pinMode(LBTN_PIN, gpio.PinMode.INPUT);\ngpio.pinMode(RBTN_PIN, gpio.PinMode.INPUT);\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4);\n\ngpio.on(\"falling\", LBTN_PIN, () =&gt; {\n    pen.write(robutek.PenPos.Down);\n});\n\ngpio.on(\"falling\", RBTN_PIN, () =&gt; {\n    pen.write(robutek.PenPos.Up);\n});\n</code></pre>"},{"location":"robot/lekce5/pen/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Zkombinuj poznatky z lekce 5 s motory s touto, a vytvo\u0159 program kter\u00fd nakresl\u00ed fixou na pap\u00edr \u010dtverec po stistku tla\u010d\u00edtka.</p> \u0158e\u0161en\u00ed <pre><code>import { Servo } from \"./libs/servo.js\"\nimport * as gpio from \"gpio\"\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nconst LBTN_PIN = 2;\nconst RBTN_PIN = 0;\n\ngpio.pinMode(LBTN_PIN, gpio.PinMode.INPUT);\ngpio.pinMode(RBTN_PIN, gpio.PinMode.INPUT);\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4);\n\ngpio.on(\"falling\", LBTN_PIN, async () =&gt; {\n    pen.write(robutek.PenPos.Down); // fixa dol\u016f\n\n    robutek.setSpeed(100) // Nastav rychlost na 100\n\n    await robutek.move(0, { distance: 300 }) // Uje\u010f 30 cm\n    await robutek.rotate(90)\n    await robutek.move(0, { distance: 300 })\n    await robutek.rotate(90)\n    await robutek.move(0, { distance: 300 })\n    await robutek.rotate(90)\n    await robutek.move(0, { distance: 300 })\n    await robutek.rotate(90)\n\n    pen.write(robutek.PenPos.Up); // fixa nahoru\n});\n</code></pre>"},{"location":"robot/lekce6/","title":"Lekce 6 - ADC - senzory \u010d\u00e1ry, senzory kolem kol","text":"<p>V t\u00e9to lekci se nau\u010d\u00edme pracovat s ADC p\u0159evodn\u00edkem a zpracov\u00e1vat data, kter\u00e9 pomoc\u00ed n\u011bj z\u00edsk\u00e1me.</p> <p>ADC pou\u017e\u00edv\u00e1me pro m\u011b\u0159en\u00ed nap\u011bt\u00ed, kter\u00e9 je v\u00fdstupem z n\u011bkter\u00fdch senzor\u016f. P\u0159ev\u00e1d\u00ed nap\u011bt\u00ed na hodnotu v rozsahu <code>0-1023</code>, kterou pak m\u016f\u017eeme d\u00e1le zpracov\u00e1vat.</p> <p>To vyu\u017eijeme pro \u010dten\u00ed dat ze senzor\u016f \u010d\u00e1ry a senzor\u016f kolem kol. Sv\u00e9 \u0159e\u0161en\u00ed op\u011bt m\u016f\u017eeme ps\u00e1t do soubor\u016f z p\u0159edchoz\u00edch cvi\u010den\u00ed, nebo st\u00e1hnout novou kostru.</p> <p>Nejprve se nau\u010d\u00edme, jak \u010d\u00edst data z jednoho senzoru ze senzor\u016f kolem kol a vypisovat je na monitoru:</p> <pre><code>import * as gpio from \"gpio\";\nimport * as adc from \"adc\";\n\nconst SENSOR_PIN: number  = 4; // pin lev\u00e9ho p\u0159edn\u00edho senzoru u kola z pohledu zvrchu\nconst LIGHTN_PIN: number  = 47; // pin na zapnut\u00ed podsv\u00edcen\u00ed pro senzory\n\nadc.configure(SENSOR_PIN); // nakonfigurujeme pin senzoru\n\ngpio.pinMode(LIGHTN_PIN, gpio.PinMode.OUTPUT); // nastav\u00edme m\u00f3d pinu podsv\u00edcen\u00ed na output\ngpio.write(LIGHTN_PIN, 1); // zapneme podsv\u00edcen\u00ed rob\u016ftka\n\nsetInterval(() =&gt; { // ka\u017ed\u00fdch 100 ms vy\u010dteme data a vyp\u00ed\u0161eme je do konzole\n    const value = adc.read(SENSOR_PIN); // pomoc\u00ed funkce read \u010dteme data z SENZOR_PIN\n    console.log(value); //vypisujeme hodnotu do konzole\n}, 100);\n</code></pre>"},{"location":"robot/lekce6/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Data u\u017e jsme vy\u010detli, ale v\u011bt\u0161inou je budeme muset je\u0161t\u011b upravit. Ve v\u011bt\u0161in\u011b vyu\u017eit\u00ed toti\u017e nem\u016f\u017eeme pou\u017e\u00edt \u010d\u00edslo od <code>0-1023</code>. Proto mus\u00edme data takzvan\u011b p\u0159emapovat na jin\u00fd \u010d\u00edseln\u00fd rozsah, k \u010demu\u017e si nap\u00ed\u0161eme funkci.</p> \u0158e\u0161en\u00ed <pre><code>import * as gpio from \"gpio\";\nimport * as adc from \"adc\";\n\n// na\u0161e nov\u00e1 funkce, jako parametry m\u00e1 velikost nov\u00e9ho rozsahu a \u010d\u00edslo, kter\u00e9 chceme p\u0159ev\u00e9st\nfunction mapADC(targetRange: number, num: number): number {\n    let result: number = (num / (1023 / targetRange)); // vypo\u010d\u00edtame p\u0159evod na nov\u00fd rozsah\n    return Math.round(result); // v\u00fdsledek n\u00e1m \u010dasto vyjde jako desetinn\u00e9 \u010d\u00edslo, proto ho zaokrouhl\u00edme\n}\n\nconst SENSOR_PIN: number  = 4; // pin lev\u00e9ho p\u0159edn\u00edho senzoru u kola z pohledu zvrchu\nconst LIGHTN_PIN: number  = 47; // pin na zapnut\u00ed podsv\u00edcen\u00ed pro senzory\n\nadc.configure(SENSOR_PIN); // nakonfigurujeme pin senzoru\n\ngpio.pinMode(LIGHTN_PIN, gpio.PinMode.OUTPUT); // nastav\u00edme m\u00f3d pinu podsv\u00edcen\u00ed na output\ngpio.write(LIGHTN_PIN, 1); // zapneme podsv\u00edcen\u00ed rob\u016ftka\n\nsetInterval(() =&gt; {\n    const value: number  = mapADC(255, adc.read(SENSOR_PIN)); // pomoc\u00ed na\u0161\u00ed funkce si namapujeme data na rozsah 0-255\n    console.log(value);\n}, 100);\n</code></pre>"},{"location":"robot/lekce6/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Nap\u00ed\u0161eme program, kter\u00fd bude pomoc\u00ed dat z senzoru kolem kol m\u011bnit jas RGB LED p\u00e1sek.</p> \u0158e\u0161en\u00ed <pre><code>import * as adc from \"adc\";\nimport * as gpio from \"gpio\";\nimport { SmartLed, LED_WS2812 } from \"smartled\";\n\nconst SENSOR_PIN: number  = 4; // pin lev\u00e9ho p\u0159edn\u00edho senzoru\nconst LIGHTN_PIN: number  = 47; // pin na zapnut\u00ed podsv\u00edcen\u00ed pro senzory\n\nconst LED_PIN: number  = 48;\nconst LED_COUNT: number  = 1+8; // LED sv\u011btlo na desce rob\u016ftka plus led sv\u011btla na RGB p\u00e1sku\n\nfunction mapADC(targetRange: number, num: number): number{\n    let result: number = (num / (1023/targetRange));\n    return Math.round(result);\n}\n\nconst ledStrip: SmartLed  = new SmartLed(LED_PIN, LED_COUNT, LED_WS2812);  // p\u0159ipoj\u00ed p\u00e1sek na pin LED_PIN, s LED_COUT ledkami a typem WS2812\nadc.configure(SENSOR_PIN); // nakonfigurujeme pin senzoru\n\ngpio.pinMode(LIGHTN_PIN, gpio.PinMode.OUTPUT); // nastav\u00edme m\u00f3d pinu podsv\u00edcen\u00ed na output\ngpio.write(LIGHTN_PIN, 1); // zapneme podsv\u00edcen\u00ed rob\u016ftka\n\nsetInterval(() =&gt; {\n    const value: number  = mapADC(255, adc.read(SENSOR_PIN));\n\n    for(let i = 0; i&lt;LED_COUNT; i++) {\n        ledStrip.set(i, {r: value, g: (255 - value*8), b: 0}) // nastav\u00edme intenzitu \u010derven\u00e9 barvy na hodnotu z Senzoru \u010d\u00e1ry (0-255) a z\u00e1rove\u0148 \u010d\u00edm v\u00edce se povrch pod rob\u016ftkem bude bl\u00ed\u017eit b\u00edl\u00e9 t\u00edm v\u00edce bude barva fialov\u00e1\n    }\n\n    ledStrip.show();\n}, 10);\n</code></pre>"},{"location":"robot/lekce6/#zadani-c","title":"Zad\u00e1n\u00ed C","text":"<p>Senzor\u016f \u010d\u00e1ry a senzor\u016f kolem kol je dohromady 8, ale pro zmen\u0161en\u00ed po\u010dtu vyu\u017eit\u00fdch pin\u016f na ESP jsou namapovan\u00e9 jen na 4 piny a jeden p\u0159ep\u00ednac\u00ed. Nastaven\u00edm tohoto pinu zm\u011bn\u00edme, zda m\u011b\u0159\u00edme na p\u0159edn\u00ed stran\u011b robota, nebo senzory kolem kol. Te\u010f si nap\u00ed\u0161eme program, kter\u00fd m\u00edsto prav\u00e9ho p\u0159edn\u00edho senzoru u kola p\u0159e\u010dte prav\u00fd p\u0159edn\u00ed senzor \u010d\u00e1ry.</p> <p></p> \u0158e\u0161en\u00ed <pre><code>import * as adc from \"adc\";\nimport * as gpio from \"gpio\";\n\nconst SENSOR_PIN: number  = 4; // pin lev\u00e9ho p\u0159edn\u00edho senzoru\nconst LIGHTN_PIN: number  = 47; // pin na zapnut\u00ed podsv\u00edcen\u00ed pro senzory\nconst SENSOR_SWITCH_PIN: number  = 8; // pin na p\u0159epnut\u00ed mezi senzory u kola a senzory \u010d\u00e1ry\n\nadc.configure(SENSOR_PIN); // nakonfigurujeme pin senzoru\n\ngpio.pinMode(LIGHTN_PIN, gpio.PinMode.OUTPUT); // nastav\u00edme m\u00f3d pinu podsv\u00edcen\u00ed na output\ngpio.pinMode(SENSOR_SWITCH_PIN, gpio.PinMode.OUTPUT);\n\ngpio.write(LIGHTN_PIN, 1); // zapneme podsv\u00edcen\u00ed rob\u016ftka\ngpio.write(SENSOR_SWITCH_PIN, 1); // p\u0159epneme na senzory \u010d\u00e1ry\n\nsetInterval(() =&gt; { // ka\u017ed\u00fdch 100 ms vy\u010dteme data a vyp\u00ed\u0161eme je do konzole\n    console.log(adc.read(SENSOR_PIN));\n}, 100);\n</code></pre>"},{"location":"robot/lekce6/#vystupni-ukol-v1","title":"V\u00fdstupn\u00ed \u00fakol V1","text":"<p>Napi\u0161te program, kter\u00fd vyp\u00ed\u0161e hodnotu v rozsahu -1 a\u017e 1 na z\u00e1klad\u011b toho, zda je robot napravo nebo nalevo od \u010d\u00e1ry. Tzn. program, kter\u00fd vyp\u00ed\u0161e do konzole 1, kdy\u017e \u010dernou \u010d\u00e1ru vid\u00ed jenom prav\u00e9 senzory, a -1, kdy\u017e \u010d\u00e1ru vid\u00ed jenom lev\u00e9 senzory. Pokud \u010dernou vid\u00ed jen \u010d\u00e1st senzor\u016f na dan\u00e9 stran\u011b, vr\u00e1t\u00ed hodnotu mezi 0 a 1 (-1). Pokud \u010dernou nevid\u00ed v\u016fbec, vyp\u00ed\u0161e 0.</p>"},{"location":"robot/lekce6/for/","title":"Lekce 6 - cykly","text":"<p>V t\u00e9to lekci si p\u0159edstav\u00edme cykly, co\u017e je n\u00e1stroj kter\u00fd n\u00e1m umo\u017e\u0148uje opakovat k\u00f3d podle n\u011bjak\u00e9ho pravidla. Zat\u00edm je vyu\u017eijeme pro komunikaci s robotem, v n\u00e1sleduj\u00edc\u00ed lekci si uk\u00e1\u017eeme jejich pou\u017eit\u00ed p\u0159i \u0159\u00edzen\u00ed robota.</p> <p>M\u00e1me prim\u00e1rn\u011b dva typy cykl\u016f:</p> <ul> <li><code>for</code> pro p\u0159\u00edpad kdy v\u00edme kolikr\u00e1t se cyklus m\u00e1 opakovat</li> <li><code>while</code> pro p\u0159\u00edpad kdy nezn\u00e1me po\u010det opakov\u00e1n\u00ed</li> </ul>"},{"location":"robot/lekce6/for/#cyklus-for","title":"Cyklus for","text":"<p>Cyklus <code>for</code>  m\u016f\u017eeme napsat takto: <pre><code>for(let i: number = 0; i &lt; 3; i++) {\n  // opakovan\u00fd k\u00f3d\n}\n</code></pre> Do kulat\u00fdch z\u00e1vorek p\u00ed\u0161eme t\u0159i v\u011bci:</p> <ul> <li>\u0159\u00edd\u00edc\u00ed prom\u011bnnou s jej\u00ed v\u00fdchoz\u00ed hodnotou</li> <li>v\u00fdraz kter\u00fd ur\u010duje po\u010det opakov\u00e1n\u00ed</li> <li>nakonec jednoduchou operaci kter\u00e1 se provede p\u0159i ka\u017ed\u00e9m pr\u016fchodu cyklem jako posledn\u00ed operace</li> </ul> <p>Tedy vytv\u00e1\u0159\u00edme prom\u011bnnou <code>i</code> s v\u00fdchoz\u00ed hodnotou <code>0</code>, kter\u00e1 bude existovat po dobu toho, co se vykon\u00e1v\u00e1 cyklus. A\u010dkoliv v b\u011b\u017en\u00e9m \u017eivot\u011b po\u010d\u00edt\u00e1me v\u011bci od <code>1</code>, v informatice \u010dast\u011bji za\u010d\u00edn\u00e1me <code>0</code>. M\u016f\u017ee zde v\u0161ak b\u00fdt cokoliv.</p> <p>N\u00e1sledn\u011b definujeme v\u00fdraz <code>i &lt; 3</code>, kter\u00fd zna\u010d\u00ed, kdy se cyklus m\u00e1 zastavit. Na konci cyklu zv\u00fd\u0161\u00edme <code>i</code> o jedna. P\u0159i prvn\u00edm pr\u016fchodu bude tedy <code>i = 0</code> p\u0159i druh\u00e9m <code>i = 1</code> a p\u0159i t\u0159et\u00edm <code>i = 2</code> p\u0159i dal\u0161\u00edm zvy\u0161ov\u00e1n\u00ed by platilo <code>i = 3</code> tam ale u\u017e nebude pravdiv\u00fd v\u00fdraz <code>i &lt; 3</code> a cyklus se tedy ukon\u010d\u00ed. Do slo\u017een\u00fdch z\u00e1vorek p\u00ed\u0161eme vykon\u00e1van\u00fd k\u00f3d, kter\u00fd se v tomto p\u0159\u00edpad\u011b vykon\u00e1 3-kr\u00e1t.</p>"},{"location":"robot/lekce6/for/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Ve spojen\u00ed se znalostmi z minul\u00fdch lekc\u00ed napi\u0161te program, kter\u00fd po stisku tla\u010d\u00edtka vyp\u00ed\u0161e \u010d\u00edsla 0 a\u017e 9 (pomoc\u00ed <code>console.log(cislo)</code>), v\u017edy na samostatn\u00fd \u0159\u00e1dek. Kod napi\u0161te tak aby bylo jednoduch\u00e9 ho upravit na v\u00fdpis jak\u00e9hokoli jin\u00e9ho intervalu, nap\u0159. 0 a\u017e 99 nebo 10 a\u017e 19.</p> \u0158e\u0161en\u00ed <pre><code>import * as gpio from \"gpio\";\n\nconst BTN_PIN = 0;\n\ngpio.pinMode(BTN_PIN, gpio.PinMode.INPUT); // nastav\u00ed pin 0 jako vstup\n\ngpio.on(\"falling\", BTN_PIN, () =&gt; { // ud\u00e1lost, kter\u00e1 prob\u011bhne p\u0159i stisknut\u00ed tla\u010d\u00edtka p\u0159ipojen\u00e9ho na pin 0\n    console.log(\"Stisknuto, za\u010d\u00edn\u00e1me po\u010d\u00edtat\");\n    for (let i: number = 0; i &lt; 9; i++) { // vyp\u00ed\u0161eme \u010d\u00edsla od 0 do 8\n        console.log(i);\n    }\n    console.log(\"\"); // odd\u011bl\u00edme jednotliv\u00e9 stisky\n});\n</code></pre>"},{"location":"robot/lekce6/for/#cyklus-while","title":"Cyklus while","text":"<p>Pokud nev\u00edme, kolikr\u00e1t se m\u00e1 cyklus opakovat, pou\u017eijeme m\u00edsto cyklu <code>for</code> cyklus <code>while</code>.</p> <p>Do kulat\u00fdch z\u00e1vorek te\u010f p\u00ed\u0161eme jen v\u00fdraz kter\u00fd ur\u010duje jestli se cyklus vykon\u00e1 znovu nebo ne. K\u00f3d, kter\u00fd se m\u00e1 vykon\u00e1vat, dokud plat\u00ed podm\u00ednka, vypad\u00e1 takto: <pre><code>while (podm\u00ednka) {\n    // n\u00e1\u0161 k\u00f3d\n}\n</code></pre></p>"},{"location":"robot/lekce6/for/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Nyn\u00ed napi\u0161te k\u00f3d kter\u00fd do konzole vyp\u00ed\u0161e \u010dtverec slo\u017een\u00fd z hv\u011bzdi\u010dek (znaku <code>*</code>), nap\u0159. takto: <pre><code>***\n***\n***\n</code></pre> Velikost tohoto \u010dtverce ur\u010dete pomoc\u00ed konstanty jej\u00ed\u017e hodnota ud\u00e1v\u00e1 po\u010det \u0159\u00e1dku a sloupc\u016f.</p> <p>Pokud nechceme za vypsan\u00fdmi znaky nov\u00fd \u0159\u00e1dek, m\u00edsto zn\u00e1m\u00e9ho <code>console.log()</code> pou\u017eijeme <code>stdout.write</code></p> \u0158e\u0161en\u00ed <pre><code>import { stdout } from \"stdio\";\n\nconst SQUARE_SIZE: number = 3; // velikost \u010dtverce\n\nconsole.log(\"Vykresl\u00edme \u010dtverec o velikosti \" + SQUARE_SIZE + \"x\" + SQUARE_SIZE);\n\nfor(let row: number = 0; row &lt; SQUARE_SIZE; row++){ // projdeme v\u0161echny \u0159\u00e1dky\n    for(let col: number = 0; col &lt; SQUARE_SIZE; col++){ // projdeme v\u0161echny sloupce\n        stdout.write(\"*\"); // vyp\u00ed\u0161eme hv\u011bzdi\u010dku\n    }\n    stdout.write(\"\\n\"); // p\u0159esuneme se na dal\u0161\u00ed \u0159\u00e1dek\n}\n</code></pre>"},{"location":"robot/lekce6/for/#zadani-vystupniho-ukolu-v1","title":"Zad\u00e1n\u00ed v\u00fdstupn\u00edho \u00fakolu V1","text":"<p>Napi\u0161te kod kter\u00fd kter\u00fd vyp\u00ed\u0161e \u010d\u00edsla od 9 do 0. Zad\u00e1n\u00ed je velmi podobn\u00e9 jako zad\u00e1n\u00ed A, jen jdou \u010d\u00edsla sestupn\u011b nam\u00edsto vzestupn\u011b. Nekop\u00edrujte jen dodan\u00fd k\u00f3d, ale zkuste si jej napsat sami.</p>"},{"location":"robot/lekce6/for/#zadani-vystupniho-ukolu-v2","title":"Zad\u00e1n\u00ed v\u00fdstupn\u00edho \u00fakolu V2","text":"<p>Stejn\u011b jako v zad\u00e1n\u00ed B budeme do konzole vykreslovat geometrick\u00fd obrazec, akor\u00e1t tentokr\u00e1t to bude troj\u00faheln\u00edk jako tenhle:</p> <pre><code>*\n**\n***\n****\n*****\n</code></pre>"},{"location":"robot/lekce6/turtle/","title":"Lekce 6.5 - Cykly znovu a l\u00e9pe","text":"<p>Tato lekce ukazuje praktick\u00e9 vyu\u017eit\u00ed cykl\u016f za \u00fa\u010delem kreslen\u00ed obrazc\u016f. V p\u0159edchoz\u00edch lekc\u00edch jsme si uk\u00e1zali jednoduchou j\u00edzdu s robotem a zved\u00e1n\u00ed tu\u017eky, a nav\u00e1\u017eeme na to d\u00e1le.</p>"},{"location":"robot/lekce6/turtle/#zelvicka","title":"\u017delvi\u010dka","text":"<p>Tato lekce je ur\u010dena prim\u00e1rn\u011b na pr\u00e1ci v Simul\u00e1toru. Program obsahuje zjednodu\u0161enou verzi reality, ve kter\u00e9 n\u00e1m bude jezdit \u017eelvi\u010dka a p\u0159ij\u00edmat p\u0159\u00edkazy na z\u00e1klad\u011b vn\u011bj\u0161\u00edch podn\u011bt\u016f.</p> <p>Programy n\u00e1m budou fungovat i na skute\u010dn\u00e9m robotovi. Je v\u0161ak je d\u016fle\u017eit\u00e9 nejd\u0159\u00edve si v simulaci ov\u011b\u0159it funk\u010dnost, aby se n\u00e1m skute\u010dn\u00fd robot neza\u010dal chovat neo\u010dek\u00e1van\u00fdm zp\u016fsobem a nezp\u016fsobil sob\u011b nebo n\u00e1m \u0161kody.</p> <p>Program m\u00e1 textov\u00e9 okno, kam m\u016f\u017eeme ps\u00e1t p\u0159\u00edkazy. N\u00e1m ji\u017e zn\u00e1m\u00e9 p\u0159\u00edkazy jsou:</p> <p><code>robutek.rotate(deg)</code> - \u017eelvi\u010dka se oto\u010d\u00ed o <code>deg</code> stup\u0148\u016f po sm\u011bru hodinov\u00fdch ru\u010di\u010dek <code>robutek.move(direction, options)</code> - \u017eelvi\u010dka jede n\u011bkter\u00fdm sm\u011brem na z\u00e1klad\u011b zadan\u00fdch parametr\u016f</p>"},{"location":"robot/lekce6/turtle/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>V jedn\u00e9 z p\u0159edchoz\u00edch lekc\u00ed jsme pou\u017eili znalosti o ovl\u00e1d\u00e1n\u00ed motor\u016f a fixy na nakreslen\u00ed \u010dtverce. Museli jsme v\u0161ak n\u011bkolikr\u00e1t pod sebou kop\u00edrovat k\u00f3d na pohyb dop\u0159edu a oto\u010den\u00ed, a\u010dkoliv jsme vykon\u00e1vali \u010dty\u0159ikr\u00e1t to stejn\u00e9. Tentokr\u00e1t pomoc\u00ed for cyklu napi\u0161te k\u00f3d, d\u00edky kter\u00e9mu robot nakresl\u00ed \u010dtverec a vr\u00e1t\u00ed se do v\u00fdchoz\u00ed polohy.</p> <p></p> \u0158e\u0161en\u00ed <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\npen.write(robutek.PenPos.Down); // d\u00e1me dol\u016f tu\u017eku\n\nrobutek.setSpeed(100) // nastav\u00edme rychlost na 100 mm/s\n\nfor (let i: number = 0; i &lt; 4; i++) { // chov\u00e1n\u00ed opakujeme 4x, pro ka\u017edou st\u011bnu \u010dtverce\n    await robutek.move(0, { distance: 200 }); // posun dop\u0159edu o 20 cm\n    await robutek.rotate(90); // rotace doprava o 90 stup\u0148\u016f\n}\n</code></pre>"},{"location":"robot/lekce6/turtle/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Napi\u0161te k\u00f3d, pomoc\u00ed kter\u00e9ho nakresl\u00edte n\u011bkolik na sebe navazuj\u00edc\u00edch kruh\u016f. D\u00e1 se na to vyu\u017e\u00edt zat\u00e1\u010den\u00ed pomoc\u00ed <code>motors.move(1)</code>. Vzd\u00e1lenost, kterou je pot\u0159eba ujet si dopo\u010d\u00edt\u00e1me na z\u00e1klad\u011b toho, \u017ee kola jsou od sebe <code>82mm</code> daleko.  Po nakreslen\u00ed ka\u017ed\u00e9ho kola se m\u016f\u017eeme oto\u010dit, ale pro plynul\u00fd pohyb chceme kreslit ka\u017ed\u00e9 kolo z jin\u00e9ho sm\u011bru. K tomu m\u016f\u017ee pomoct nap\u0159\u00edklad stavov\u00e1 prom\u011bnn\u00e1, kter\u00e1 n\u00e1m \u0159ekne, jestli tentokr\u00e1t pojedeme doprava, nebo doleva.</p> <p></p> \u0158e\u0161en\u00ed <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\npen.write(robutek.PenPos.Down); // d\u00e1me dol\u016f tu\u017eku\n\nrobutek.setSpeed(100) // nastav\u00edme rychlost na 100 mm/s\n\nlet direction: number = 1; // sm\u011br ot\u00e1\u010den\u00ed\nlet circumference: number = 2 * 3.14 * 82; // obvod jednoho kruhu, kter\u00fd robot objede\nfor (let i: number = 0; i &lt; 4; i++) { // chov\u00e1n\u00ed opakujeme 4x\n    await robutek.move(direction, { distance: circumference * 1.5 }); // chceme projet obvod 1,5x\n    if( direction == 1 ){\n        direction = -1;\n    } else {\n        direction = 1;\n    }\n}\n</code></pre>"},{"location":"robot/lekce6/turtle/#vystupni-ukol-v1-trojuhelnik","title":"V\u00fdstupn\u00ed \u00fakol V1 - Troj\u00faheln\u00edk","text":"<p>Napi\u0161te k\u00f3d, kter\u00fd zp\u016fsob\u00ed, \u017ee \u017eelvi\u010dka nakresl\u00ed m\u00edsto \u010dtverce troj\u00faheln\u00edk. Rozm\u011bry troj\u00faheln\u00edku jsou na v\u00e1s, jen mus\u00ed skute\u010dn\u011b j\u00edt o troj\u00faheln\u00edk.</p> <p>Jak na Troj\u00faheln\u00edky\"</p> <p>Tvar s d\u00e9lkami <code>a</code>, <code>b</code> a <code>c</code> naz\u00fdv\u00e1me troj\u00faheln\u00edkem, pokud spl\u0148uje troj\u00faheln\u00edkovou nerovnost: <pre><code>a + b &gt; c\na + c &gt; b\nb + c &gt; a\n</code></pre></p> <p>Nejjednodu\u0161\u0161\u00ed troj\u00faheln\u00edk je rovnostrann\u00fd, kter\u00fd bude m\u00edt v\u0161echny strany stejn\u011b dlouh\u00e9 a 60\u00b0 vnit\u0159n\u00ed \u00fahel na ka\u017ed\u00e9m rohu.</p> <p>Hned po n\u011bm n\u00e1sleduje rovnoramenn\u00fd, kter\u00fd v nejjednodu\u0161\u0161\u00edm p\u0159\u00edpad\u011b bude m\u00edt 90\u00b0 \u00fahel mezi krat\u0161\u00edmi stranami, a 45\u00b0 mezi kr\u00e1tkou a dlouhou.</p> <p>Pokud chceme n\u011bjak\u00fd m\u00e9n\u011b pravideln\u00fd troj\u00faheln\u00edk, m\u016f\u017eeme na v\u00fdpo\u010det \u00fahlu a d\u00e9lek pou\u017e\u00edt kos\u00ednovu v\u011btu.</p>"},{"location":"robot/lekce6/turtle/#vystupni-ukol-v2-domecek","title":"V\u00fdstupn\u00ed \u00fakol V2 - Dome\u010dek","text":"<p>Propojte dosavadn\u00ed znalosti do jednoho k\u00f3du. Napi\u0161te program, kter\u00fd zp\u016fsob\u00ed \u017ee si \u017eelvi\u010dka nakresl\u00ed dome\u010dek z \u010dtverce a troj\u00faheln\u00edkov\u00e9 st\u0159echy.</p> <p>N\u00e1sledn\u011b \u017eelvi\u010dka p\u0159estane kreslit, a vjede doprost\u0159ed dome\u010dku, kde zastav\u00ed.</p>"},{"location":"robot/lekce6/turtle/#dobrovolny-ukol-spusteni-na-vlastnim-robotovi","title":"Dobrovoln\u00fd \u00fakol - Spu\u0161t\u011bn\u00ed na vlastn\u00edm robotovi","text":"<p>Pokud v\u00e1m program funguje v simul\u00e1toru, zkuste si ho nahr\u00e1t do skute\u010dn\u00e9ho robota. Funguje v\u00e1m? Pozorujete n\u011bjak\u00e9 rozd\u00edly v jeho chov\u00e1n\u00ed oproti zjednodu\u0161en\u00e9mu prost\u0159ed\u00ed?</p>"},{"location":"robot/lekce7/","title":"Lekce 7 - pole","text":"<p>Pole neboli <code>array</code> slou\u017e\u00ed k ulo\u017een\u00ed v\u00edce hodnot stejn\u00e9ho typu. Hodnoty jsou ulo\u017eeny za sebou, m\u016f\u017eeme je do pole p\u0159id\u00e1vat, odeb\u00edrat, a p\u0159istupovat podle indexu.</p> <ul> <li>Pole vytvo\u0159\u00edme pomoc\u00ed hranat\u00fdch z\u00e1vorek     <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\n</code></pre></li> <li>K jednotliv\u00fdm prvk\u016fm se dostaneme pomoc\u00ed indexu (po\u0159ad\u00ed v poli) v hranat\u00fdch z\u00e1vork\u00e1ch<ul> <li>Indexov\u00e1n\u00ed za\u010d\u00edn\u00e1 od 0: prvn\u00ed prvek je na indexu 0     <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\nlet num : number = arr[0];  // do prom\u011bnn\u00e9 num ulo\u017e\u00edme hodnotu na indexu 0 (tedy 1.)\n</code></pre></li> <li>M\u016f\u017eeme p\u0159istupovat na libovoln\u00e9 m\u00edsto v poli:     <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\nlet num : number = arr[2];  // do prom\u011bnn\u00e9 num ulo\u017e\u00edme hodnotu na indexu 2 (tedy 3.)\n</code></pre></li> <li>Index m\u016f\u017eeme pou\u017e\u00edt i pro zm\u011bnu hodnoty     <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\narr[2] = 10;  // zm\u011bn\u00ed hodnotu na indexu 2 z 3 na 10: v\u00fdsledn\u00e9 pole bude [1, 2, 10, 4, 5]\n</code></pre></li> </ul> </li> <li>D\u00e9lku pole zjist\u00edme pomoc\u00ed funkce     <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\nlet length : number = arr.length; // hodnota length bude 5\n</code></pre></li> <li> <p>Hodnotu na konec pole p\u0159id\u00e1me pomoc\u00ed funkce <code>push</code> <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\narr.push(6);  // p\u0159id\u00e1 hodnotu na konec: v\u00fdsledn\u00e9 pole bude [1, 2, 3, 4, 5, 6]\n</code></pre></p> </li> <li> <p>Hodnotu z konce pole odebereme pomoc\u00ed funce <code>pop</code> <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\nlet num : number = arr.pop();  // odebere hodnotu z konce: v\u00fdsledn\u00e9 pole bude [1, 2, 3, 4]\n</code></pre></p> </li> </ul> <p>K \u0159e\u0161en\u00ed budeme pot\u0159ebovat stejn\u00e9 n\u00e1stroje jako v p\u0159edchoz\u00ed lekci. Slo\u017eku si m\u016f\u017eete rozbalit jako project7.</p>"},{"location":"robot/lekce7/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Op\u011bt nav\u00e1\u017eeme na p\u0159edchoz\u00ed lekce, a budeme do pole ukl\u00e1dat hodnoty ze sensoru. Vytvo\u0159\u00edme si pole, kter\u00e9 p\u0159i stisku vybran\u00e9ho tla\u010d\u00edtka p\u0159id\u00e1 aktu\u00e1ln\u00ed hodnotu z ADC p\u0159evodn\u00edku. Druh\u00e9 tla\u010d\u00edtko z tohoto pole posledn\u00ed hodnotu sma\u017ee. Stav pole si m\u016f\u017eeme po ka\u017ed\u00e9 zm\u011bn\u011b vypsat pomoc\u00ed <code>console.log(pole)</code>.</p> \u0158e\u0161en\u00ed <pre><code>import * as adc from \"adc\";\nimport * as gpio from \"gpio\";\n\nconst SENSOR_PIN: number  = 4; // pin lev\u00e9ho p\u0159edn\u00edho senzoru u kola z pohledu zvrchu\nconst LIGHTN_PIN: number  = 47; // pin na zapnut\u00ed podsv\u00edcen\u00ed pro senzory\n\nconst LBTN_PIN : number = 2; // pin lev\u00e9ho tla\u010d\u00edtka\nconst RBTN_PIN : number = 0; // pin prav\u00e9ho tla\u010d\u00edtka\n\ngpio.pinMode(LBTN_PIN, gpio.PinMode.INPUT); // nastav\u00edme lev\u00e9 tla\u010d\u00edtko\ngpio.pinMode(RBTN_PIN, gpio.PinMode.INPUT); // nastav\u00edme prav\u00e9 tla\u010d\u00edtko\n\nadc.configure(SENSOR_PIN); // nakonfigurujeme pin senzoru\n\ngpio.pinMode(LIGHTN_PIN, gpio.PinMode.OUTPUT); // nastav\u00edme m\u00f3d pinu podsv\u00edcen\u00ed na output\ngpio.write(LIGHTN_PIN, 1); // zapneme podsv\u00edcen\u00ed rob\u016ftka\n\nlet arr : number[] = [];\n\ngpio.on(\"falling\", LBTN_PIN, () =&gt; { // P\u0159i stisknut\u00ed lev\u00e9ho tla\u010d\u00edtka\n    arr.push(adc.read(SENSOR_PIN)); // P\u0159id\u00e1me do pole nam\u011b\u0159enou hodnotu\n    console.log(arr); // Vyp\u00ed\u0161eme nov\u00fd stav\n});\ngpio.on(\"falling\", RBTN_PIN, () =&gt; { // P\u0159i stisknut\u00ed prav\u00e9ho tla\u010d\u00edtka\n    arr.pop(); // Odebereme z pole posledn\u00ed hodnotu\n    console.log(arr); // Vyp\u00ed\u0161eme nov\u00fd stav\n});\n</code></pre>"},{"location":"robot/lekce7/#vychozi-ukol-v1","title":"V\u00fdchoz\u00ed \u00fakol V1","text":"<p>Tentokr\u00e1t si vytvo\u0159\u00edme o n\u011bco rozs\u00e1hlej\u0161\u00ed program, kter\u00fd nav\u00e1\u017ee na p\u0159edchoz\u00ed \u00fakol. Vytvo\u0159\u00edme si pole \u010d\u00edsel, do kter\u00e9ho pomoc\u00ed prvn\u00edho tla\u010d\u00edtka na\u010dteme nam\u011b\u0159en\u00e9 hodnoty z ADC p\u0159evodn\u00edku. P\u0159i stisku prvn\u00edho tla\u010d\u00edtka kontrolujeme, jestli u\u017e pole m\u00e1 d\u00e9lku 8. Pokud u\u017e je d\u00e9lka 8, dal\u0161\u00ed hodnoty nep\u0159id\u00e1v\u00e1me a stisk tla\u010d\u00edtka pole nezm\u011bn\u00ed.</p> <p>Druh\u00e9 tla\u010d\u00edtko sma\u017ee posledn\u00ed prvek -- zde kontrolujeme, jestli tam n\u011bjak\u00fd prvek je.</p> <p>P\u0159i ka\u017ed\u00e9 zm\u011bn\u011b hodnot v poli se rozsv\u00edt\u00ed LED p\u00e1sek podle nam\u011b\u0159en\u00fdch hodnot. V\u0161echny hodnoty v poli p\u0159evedeme na rozsah <code>colors.rainbow</code> (tedy 0-360) a rozsv\u00edt\u00edme LED na odpov\u00eddaj\u00edc\u00edm indexu nam\u011b\u0159enou hodnotou.</p>"},{"location":"robot/lekce7/turtle/","title":"Lekce 7 - funkce","text":"<p>Z minul\u00e9 lekce u\u017e um\u00edme kreslit jednoduch\u00e9 tvary. Co kdy\u017e jich v\u0161ak chceme nakreslit v\u00edce?</p> <p>Pokud chceme nakreslit 2 \u010dtverce vedle sebe, m\u016f\u017eeme zkop\u00edrovat k\u00f3d a mezit\u00edm se posunout:</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\npen.write(robutek.PenPos.Down); // d\u00e1me dol\u016f tu\u017eku\n\nfor (let i: number = 0; i &lt; 4; i++) { // chov\u00e1n\u00ed opakujeme 4x, pro ka\u017edou st\u011bnu \u010dtverce\n    await robutek.move(0, { distance: 100 }); // posun dop\u0159edu o 10 cm\n    await robutek.rotate(90); // rotace doprava o 90 stup\u0148\u016f\n}\npen.write(robutek.PenPos.Up); // d\u00e1me nahoru\n\nawait robutek.move(150);\n\npen.write(robutek.PenPos.Down);\nfor (let i: number = 0; i &lt; 4; i++) {\n    await robutek.move(0, { distance: 100 });\n    await robutek.rotate(90);\n}\npen.write(robutek.PenPos.Up);\n</code></pre> <p>To se je\u0161t\u011b d\u00e1 zvl\u00e1dnout, ale pokud bychom to ud\u011blali je\u0161t\u011b p\u00e1rkr\u00e1t, k\u00f3d by se st\u00e1val h\u016f\u0159e \u010diteln\u00fdm. Pokud bychom se pak rozhodli zm\u011bnit nap\u0159. velikost nakreslen\u00fdch \u010dtverc\u016f, museli bychom to m\u011bnit v ka\u017ed\u00e9 kopii tohoto k\u00f3du, co\u017e zabere \u010das, a je v tom jednoduch\u00e9 ud\u011blat chybu.</p> <p>M\u016f\u017eeme si pomoct t\u00edm, co u\u017e zn\u00e1me: vno\u0159en\u00fdm <code>for</code> cyklem. Pokud chceme nakreslit nap\u0159. 4 \u010dtverce za sebou, m\u016f\u017eeme to napsat takto:</p> <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\nfor (let square: number = 0; square &lt; 4; square++) {\n    pen.write(robutek.PenPos.Down);\n    for (let i: number = 0; i &lt; 4; i++) {\n        await robutek.move(0, { distance: 100 });\n        await robutek.rotate(90);\n    }\n\n    pen.write(robutek.PenPos.Up);\n    await robutek.move(0, { distance: 100 });\n}\n</code></pre> <p>Co kdy\u017e se v\u0161ak chceme pohybovat mezi \u010dtverci r\u016fzn\u011b daleko, nebo m\u00edt ka\u017ed\u00fd jinak velk\u00fd? Odpov\u011bd\u00ed na tuto ot\u00e1zku jsou funkce.</p>"},{"location":"robot/lekce7/turtle/#funkce","title":"Funkce","text":"<p>Funkce je pojmenovan\u00fd kus k\u00f3du. Tento kus k\u00f3du jednou nap\u00ed\u0161eme, a pot\u00e9 ho ze zbytku programu m\u016f\u017eeme libovoln\u011b volat (spou\u0161t\u011bt). Celkov\u011b tak zp\u0159ehled\u0148uje programy, a d\u011bl\u00e1 je roz\u0161\u00ed\u0159iteln\u011bj\u0161\u00ed.</p> <p>V programu rozli\u0161ujeme mezi definic\u00ed funkce a jej\u00edm vol\u00e1n\u00edm. Definice vypad\u00e1 n\u00e1sledovn\u011b:</p> <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\nasync function draw_square(): void {\n    pen.write(robutek.PenPos.Down);\n    for (let i: number = 0; i &lt; 4; i++) {\n        await robutek.move(0, { distance: 100 });\n        await robutek.rotate(90);\n    }\n    pen.write(robutek.PenPos.Up);\n}\n</code></pre> <p>Definice funkce se skl\u00e1d\u00e1 z: - kl\u00ed\u010dov\u00e9ho slova function - jm\u00e9na funkce - seznamu argument\u016f (v z\u00e1vork\u00e1ch) - n\u00e1vratov\u00e9ho typu - t\u011bla funkce (ve \u0161pi\u010dat\u00fdch z\u00e1vork\u00e1ch)</p> <p>Proto\u017ee v t\u011ble funkce pou\u017e\u00edv\u00e1me kl\u00ed\u010dov\u00e9 slovo <code>await</code>, je pot\u0159eba aby funkce byla ozna\u010dena jako <code>async</code>. Znamen\u00e1 to, \u017ee je tzv. asynchronn\u00ed a b\u011bhem \u010dek\u00e1n\u00ed na jej\u00ed vykon\u00e1n\u00ed se m\u016f\u017eou plnit dal\u0161\u00ed \u00fakoly.</p> <p>K argument\u016fm a n\u00e1vratov\u00fdm hodnot\u00e1m se dostaneme pozd\u011bji, zat\u00edm je pro n\u00e1s zaj\u00edmav\u00e9 jednodu\u0161e to, \u017ee jsme si n\u011bjak pojmenovali kus k\u00f3du.</p> <p>Kdy\u017e spust\u00edme tento k\u00f3d, nic se nestane. Chyb\u00ed n\u00e1m toti\u017e funkci zavolat. Vol\u00e1n\u00ed funkce provedeme jej\u00edm jm\u00e9nem, n\u00e1sledovan\u00fdm z\u00e1vorkami. Pokud je funkce asynchronn\u00ed a my chceme \u010dekat na jej\u00ed vykon\u00e1n\u00ed ne\u017e za\u010dneme prov\u00e1d\u011bt dal\u0161\u00ed \u00fakol, p\u0159ed jej\u00ed vol\u00e1n\u00ed d\u00e1me kl\u00ed\u010dov\u00e9 slovo <code>await</code>. Nakreslen\u00ed dvou \u010dtverc\u016f m\u016f\u017ee tedy vypadat takto:</p> <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\nasync function draw_square(): void {\n    pen.write(robutek.PenPos.Down);\n    for (let i: number = 0; i &lt; 4; i++) {\n        await robutek.move(0, { distance: 100 });\n        await robutek.rotate(90);\n    }\n    pen.write(robutek.PenPos.Up);\n}\n\nawait draw_square();\nawait robutek.move(0, {distance: 150 });\nawait draw_square();\n</code></pre> <p>Program n\u00e1m nakresl\u00ed 2 \u010dtverce, a p\u0159inesli jsme si t\u00edm n\u00e1sleduj\u00edc\u00ed v\u00fdhody: - ze sekvence \"nakresli \u010dtverec\" \"pohni se\" \"nakresli \u010dtverec\" je na prvn\u00ed pohled zjevn\u00e9 co se bude d\u00edt, a \u010dten\u00e1\u0159 programu nemus\u00ed analyzovat detaily toho, jak p\u0159esn\u011b kreslen\u00ed ka\u017ed\u00e9ho \u010dtverce prob\u00edh\u00e1 - kdy\u017e se rozhodneme, \u017ee \u010dtverce maj\u00ed m\u00edt jinou velikost, sta\u010d\u00ed ud\u011blat zm\u011bnu na jednom m\u00edst\u011b</p> <p>Nezapom\u00ednejte p\u0159i vol\u00e1n\u00ed funkc\u00ed kter\u00e9 obsahuj\u00ed pohyb na <code>async</code></p> <p>Pokud bychom v p\u0159edchoz\u00edm p\u0159\u00edkladu funkce volali bez <code>async</code>, p\u0159\u00edkazy by se n\u00e1m bily a  robot by ud\u011blal ve v\u00fdsledku nesmysln\u00fd pohyb.</p> <p>Na tak mal\u00e9m p\u0159\u00edkladu to mo\u017en\u00e1 nen\u00ed zjevn\u00e9, ale i <code>motors.move()</code>, kter\u00e9 jsme pou\u017e\u00edvali dote\u010f, nen\u00ed nic jin\u00e9ho ne\u017e funkce, kter\u00e1 v sob\u011b skr\u00fdv\u00e1 n\u011bjak\u00fd slo\u017eit\u011bj\u0161\u00ed v\u00fdpo\u010det. Funkce tedy m\u016f\u017eeme propojovat r\u016fzn\u00fdmi zp\u016fsoby, a tvo\u0159it tak programy, kter\u00e9 toho d\u011blaj\u00ed \u010d\u00edm d\u00e1l v\u00edce.</p> <p>Program v\u0161ak ne\u0159e\u0161\u00ed p\u0159\u00edpad, kdy chceme aby ka\u017ed\u00fd \u010dtverec m\u011bl jinou velikost. V tu chv\u00edli n\u00e1m pom\u016f\u017eou argumenty, kter\u00e9 do funkce um\u00edme p\u0159edat. Jde o prom\u011bnn\u00e9, kter\u00e9 existuj\u00ed v dan\u00e9 funkci, a my jim p\u0159i vol\u00e1n\u00ed funkce p\u0159i\u0159ad\u00edme konkr\u00e9tn\u00ed hodnotu.</p> <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\nasync function draw_square(size: number): void {\n    pen.write(robutek.PenPos.Down);\n    for (let i: number = 0; i &lt; 4; i++) {\n        await robutek.move(0, { distance: size });\n        await robutek.rotate(90);\n    }\n    pen.write(robutek.PenPos.Up);\n}\n\nawait draw_square(100);\nawait robutek.move(0, {distance: 150 });\nawait draw_square(150);\n</code></pre> <p>Ve funkci pou\u017e\u00edv\u00e1me prom\u011bnn\u00fd argument <code>size</code> zna\u010d\u00edc\u00ed velikost \u010dtverce, kter\u00fd m\u016f\u017eeme p\u0159i vol\u00e1n\u00ed nastavit na jakoukoliv hodnotu, a m\u00e1me vy\u0159e\u0161eno.</p>"},{"location":"robot/lekce7/turtle/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Vytvo\u0159te funkci, kter\u00e1 bere 2 argumenty, a nakresl\u00ed obd\u00e9ln\u00edk dan\u00fdch rozm\u011br\u016f. Zkuste ji zavolat s r\u00fazn\u00fdmi argumenty.</p> \u0158e\u0161en\u00ed <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\nasync function draw_rectangle(sizeA: number, sizeB: number): void {\n    pen.write(robutek.PenPos.Down);\n    for (let i: number = 0; i &lt; 4; i++) {\n        if(i % 2 == 0){ // zbytek po d\u011blen\u00ed 2, tedy ka\u017ed\u00e1 druh\u00e1 strana\n            await robutek.move(0, { distance: sizeA });\n        } else {\n            await robutek.move(0, { distance: sizeB });\n        }\n        await robutek.rotate(90);\n    }\n    pen.write(robutek.PenPos.Up);\n}\n\nawait draw_rectangle(100, 150);\nawait draw_rectangle(150, 50);\n</code></pre>"},{"location":"robot/lekce7/turtle/#vraceni-hodnot","title":"Vracen\u00ed hodnot","text":"<p>Krom\u011b toho, \u017ee funkce m\u016f\u017eou br\u00e1t argumenty, je tak\u00e9 m\u016f\u017eou vracet. To je u\u017eite\u010dn\u00e9 v p\u0159\u00edpad\u011b, \u017ee si chceme do funkce d\u00e1t n\u011bjak\u00fd v\u00fdpo\u010det, a zaj\u00edm\u00e1 n\u00e1s jeho v\u00fdsledek. Hodnotu z funkce vrac\u00edme pomoc\u00ed kl\u00ed\u010dov\u00e9ho slova <code>return</code>.</p> <p>Funkce  <pre><code>function add(a: number, b: number): number {\n    return a + b;\n}\n</code></pre> tedy bere 2 \u010d\u00edsla a vrac\u00ed v\u00fdsledek v\u00fdpo\u010dtu nad nimi (zde jen s\u010d\u00edt\u00e1n\u00ed).</p> <p>P\u0159\u00edklad pou\u017eit\u00ed: chceme-li nakreslit pravideln\u00fd n-\u00faheln\u00edk, vzorec pro vnit\u0159n\u00ed \u00fahly je podle wikipedie</p> \\[(1 - \\frac{2}{n}) * 180\\] <p>kde, <code>n</code> je po\u010det stran.</p> <p>Tento v\u00fdpo\u010det nechceme ps\u00e1t n\u011bkolikr\u00e1t, je proto vhodn\u00e9 jej vy\u010dlenit do funkce, kter\u00e1 vrac\u00ed napo\u010d\u00edtanou hodnotu.</p>"},{"location":"robot/lekce7/turtle/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Napi\u0161te funkci <code>draw_polygon()</code>, kter\u00e1 vezme 2 argumenty: po\u010det stran a d\u00e9lku ka\u017ed\u00e9 strany. Na v\u00fdpo\u010det \u00fahlu pou\u017eijte pomocnou funkci, kter\u00e1 spo\u010d\u00edt\u00e1 jak moc je pot\u0159eba zato\u010dit.</p> \u0158e\u0161en\u00ed <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\nfunction turn_angle(sides: number): number {\n    return 180 - (1 - 2 / sides) * 180;\n}\n\nasync function draw_polygon(sides: number, size: number): void {\n    pen.write(robutek.PenPos.Down);\n    for (let side: number = 0; side &lt; sides; side++) {\n        await robutek.move(0, { distance: size });\n        await robutek.rotate(turn_angle(sides));\n    }\n    pen.write(robutek.PenPos.Up);\n}\n\nawait draw_polygon(5, 100);\nawait robutek.move(0, { distance: 250 });\nawait draw_polygon(8, 100);\n</code></pre>"},{"location":"robot/lekce7/turtle/#vystupni-ukol-v1-domovni-vybaveni","title":"V\u00fdstupn\u00ed \u00fakol V1 - Domovn\u00ed vybaven\u00ed","text":"<p>Op\u011bt si nakreslete dome\u010dek, tentokr\u00e1t ale bude zaj\u00edmav\u011bj\u0161\u00ed. Vytvo\u0159te si funkci <code>draw_window(size)</code>, kter\u00e1 nakresl\u00ed 4 mal\u011b \u010dtverce, a kolem nich p\u00e1t\u00fd. Znovu nakreslete dome\u010dek, ale tentokr\u00e1t mu dejte pomoc\u00ed <code>draw_window()</code> n\u011bkolik oken. Kolem domu m\u016f\u017eete z n-\u00faheln\u00edk\u016f nebo kole\u010dek nakreslit ozdobn\u00e9 stromy. Tak\u00e9 mu m\u016f\u017eete d\u00e1t dve\u0159e a kom\u00edn.</p> <p>Pokud se v\u00e1m neda\u0159\u00ed kreslit dobr\u00e9 tvary kv\u016fli nep\u0159esnostem motor\u016f nebo simul\u00e1toru, zkuste sn\u00ed\u017eit rychlost, se kterou se robot pohybuje.</p> <p>Nakonec m\u016f\u017eete cel\u00fd k\u00f3d na kreslen\u00ed dome\u010dku d\u00e1t do vlastn\u00ed funkce. Vytvo\u0159te vesnici tak, \u017ee vedle sebe nakresl\u00edte n\u011bkolik domk\u016f.</p>"},{"location":"robot/lekce8/","title":"Bonus - \u0158et\u011bzce","text":"<p>Zat\u00edm jsme se za\u0159\u00edzen\u00edm po nahr\u00e1n\u00ed programu komunikovali jednostrann\u011b: pomoc\u00ed <code>console.log()</code> jsme vypisovali r\u016fzn\u00e9 v\u011bci na v\u00fdstup, a ten jsme sledovali pomoc\u00ed p\u0159\u00edkazu <code>Monitor</code>.</p> <p>Na to, abychom za b\u011bhu mohli pos\u00edlat informace do za\u0159\u00edzen\u00ed, pot\u0159ebujeme nov\u00fd datov\u00fd typ: \u0159et\u011bzce.</p> <p>\u0158et\u011bzce jsou sekvence znak\u016f, a umo\u017e\u0148uj\u00ed n\u00e1m p\u0159ed\u00e1vat informace. Datov\u00fd typ, kter\u00fd dr\u017e\u00ed \u0159et\u011bzec, se jmenuje <code>string</code>.</p> <ul> <li>\u0158et\u011bzec je v\u017edy uzav\u0159en\u00fd do uvozovek <code>\"\"</code>, <code>''</code> nebo <code>``</code> <pre><code>let str : string = \"ahoj\";  // vytvo\u0159\u00ed \u0159et\u011bzec\n</code></pre></li> <li>\u0158et\u011bzce m\u016f\u017eeme spojovat pomoc\u00ed <code>+</code> <pre><code>let str : string = \"ahoj\" + \" \" + \"jak se m\u00e1\u0161?\";  // vytvo\u0159\u00ed \u0159et\u011bzec \"ahoj jak se m\u00e1\u0161?\"\n\nlet answer : string = \"dob\u0159e\";\n\nlet str2 : string = \"ahoj \" + answer;  // ahoj dob\u0159e\n</code></pre></li> <li>Speci\u00e1ln\u00edm p\u0159\u00edpadem jsou form\u00e1tovac\u00ed \u0159et\u011bzce, kam se dosad\u00ed hodnota prom\u011bnn\u00e9     <pre><code>//! pozor jin\u00e9 uvozovky\nlet str3 : string = `ahoj ${answer}`;  // ahoj dob\u0159e\n</code></pre></li> <li>Kdy\u017e spoj\u00edme \u0159et\u011bzec s \u010d\u00edslem, \u010d\u00edslo se automaticky p\u0159evede na \u0159et\u011bzec a spoj\u00ed se stejn\u00fdm zp\u016fsobem     <pre><code>let str4 : string = answer + \" \" + 5;  // dob\u0159e 5\n\nlet num : number = 5;\nlet str5 : string = \"Je mi \" + number + \" let\";\n</code></pre></li> </ul> Automatick\u00fd p\u0159evod na \u0159et\u011bzec <p>S\u010d\u00edt\u00e1n\u00ed \u0159et\u011bzc\u016f a \u010d\u00edsel nefunguje ve v\u0161ech jazyc\u00edch, jde o chov\u00e1n\u00ed specifick\u00e9 pro TypeScript(JavaScript) a p\u00e1r podobn\u00fdch jazyk\u016f. Nenechte se zasko\u010dit t\u00edm, jak se to chov\u00e1: <pre><code>let result : string = \"5 + 1 je: \" + 5 + 1;\n</code></pre> V <code>result</code> bude <code>\"5 + 1 je: 51\"</code>!</p> <p>5 se p\u0159id\u00e1 do \u0159et\u011bzce, a pot\u00e9 se tam p\u0159id\u00e1 1, nese\u010dtou se p\u0159edem.</p> <p>Stejn\u011b jako ostatn\u00ed typy je m\u016f\u017eeme p\u0159ed\u00e1vat do funkc\u00ed a vracet: <pre><code>function greetName(name: string) : void {\n    console.log(\"Ahoj \" + name);\n}\n</code></pre></p> <p>Na dne\u0161n\u00ed cvi\u010den\u00ed si op\u011bt m\u016f\u017eeme st\u00e1hnout zip.</p>"},{"location":"robot/lekce8/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Nejd\u0159\u00edve se vr\u00e1t\u00edme k funkci <code>console.log()</code>, d\u00edky kter\u00e9 jsme vypisovali r\u016fzn\u00e9 hodnoty. Tato funkce bere jako argument \u0159et\u011bzec; pokud argument nen\u00ed \u0159et\u011bzec, p\u0159edem definovan\u00fdm zp\u016fsobem se na \u0159et\u011bzec automaticky p\u0159evede.</p> <p>Jako prvn\u00ed \u00fakol si vyzkou\u0161\u00edme spojit \u0159et\u011bzec a \u010d\u00edslo s t\u00edm, co u\u017e zn\u00e1me:</p> <p>Nap\u00ed\u0161eme program, kter\u00fd p\u0159i stisku tla\u010d\u00edtka vyp\u00ed\u0161e na v\u00fdstup <code>\"Senzor nam\u011b\u0159il X.\"</code>, kde X je aktu\u00e1ln\u00ed hodnota nam\u011b\u0159en\u00e1 z ADC p\u0159evodn\u00edku.</p> \u0158e\u0161en\u00ed <pre><code>import * as gpio from \"gpio\";\nimport * as adc from \"adc\";\n\nconst BTN_LEFT = 2;\n\nconst SENSOR_PIN: number  = 4;\nconst LIGHTN_PIN: number  = 47;\n\ngpio.pinMode(BTN_LEFT, gpio.PinMode.INPUT);\n\nadc.configure(SENSOR_PIN);\n\ngpio.pinMode(LIGHTN_PIN, gpio.PinMode.OUTPUT);\ngpio.write(LIGHTN_PIN, 1);\n\ngpio.on(\"falling\", BTN_LEFT, () =&gt; {\n    console.log(\"Senzor nam\u011b\u0159il \" + adc.read(SENSOR_PIN) + \".\");\n});\n</code></pre>"},{"location":"robot/lekce8/#cteni-ze-vstupu","title":"\u010cten\u00ed ze vstupu","text":"<p>Aby komunikace se za\u0159\u00edzen\u00edm nebyla pouze jednostrann\u00e1, a my mohli z po\u010d\u00edta\u010de pos\u00edlat nov\u00e9 p\u0159\u00edkazy za b\u011bhu, pou\u017eijeme p\u0159ilo\u017een\u00fd program <code>readline</code>. Podobn\u011b jako v p\u0159\u00edpadu LED p\u00e1sku mus\u00edme vytvo\u0159it hodnotu typu readline pomoc\u00ed <code>const reader = new readline(false)</code>.</p> <p>Jakmile m\u00e1me vytvo\u0159en\u00fd objekt typu readline, pomoc\u00ed <code>await reader.read()</code> po\u010dk\u00e1me na vstup. Jeliko\u017e jde o speci\u00e1ln\u00ed funkci, m\u016f\u017eeme ji volat pouze z nov\u00e9 funkce, kter\u00e1 je ozna\u010dena jako <code>async function</code>.</p> Uk\u00e1zka pr\u00e1ce s \u0159et\u011bzcem s readline <pre><code>import { stdout } from \"stdio\";\nimport { readline } from \"./libs/readline.js\";\n\n//* \u0159et\u011bzce\nasync function echo() {\n    stdout.write(\"Napi\u0161 n\u011bjak\u00fd text a stiskni enter.\\n\");\n    const reader = new readline(false);  // vytvo\u0159\u00ed novou instanci t\u0159\u00eddy readline\n    while (true) {  // opakuje se donekone\u010dna\n        const line = await reader.read();  // p\u0159e\u010dte \u0159\u00e1dek z konzole\n        stdout.write(\"Zadal jsi: \" + line + \"\\n\");  // vyp\u00ed\u0161e \u0159\u00e1dek na konzoli\n        stdout.write(`Druh\u00e1 mo\u017enost v\u00fdpisu: Zadal jsi: ${line}\\n`);  // vyp\u00ed\u0161e \u0159\u00e1dek na konzoli\n\n        if (line == \"konec\") {  // pokud je \u0159\u00e1dek roven \"konec\"\n            stdout.write(\"Ukon\u010duji.\\n\");  // vyp\u00ed\u0161e text na konzoli\n            break;  // ukon\u010d\u00ed cyklus\n        }\n    }\n    reader.close();  // ukon\u010d\u00ed \u010dten\u00ed z konzole\n}\n\necho();  // zavol\u00e1 funkci echo\n</code></pre> Pro z\u00e1jemce: Async a await <p>Funkce, kter\u00e9 zn\u00e1me dote\u010f, vykon\u00e1valy v\u0161echny p\u0159\u00edkazy hned, v po\u0159ad\u00ed tak, jak jsou po sob\u011b napsan\u00e9. Funkce, kter\u00e9 \u010dekaj\u00ed na n\u011bjak\u00fd vstup od u\u017eivatele, ozna\u010dujeme jako asynchronn\u00ed (async). Funkce <code>reader.read()</code> po spu\u0161t\u011bn\u00ed \u010dek\u00e1 na textov\u00fd vstup od u\u017eivatele, a mezit\u00edm se m\u016f\u017eou vykon\u00e1vat ostatn\u00ed ud\u00e1losti. Kdy\u017e p\u0159ed funkci d\u00e1me <code>await</code>, zna\u010d\u00edme tak, \u017ee \u010dek\u00e1me na v\u00fdsledek, a dal\u0161\u00ed \u0159\u00e1dek k\u00f3du se vykon\u00e1 a\u017e kdy\u017e na vstup p\u0159ijde \u0159et\u011bzec zakon\u010den\u00fd nov\u00fdm \u0159\u00e1dkem.</p>"},{"location":"robot/lekce8/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Nap\u00ed\u0161eme program, kter\u00fd se zept\u00e1, jak se jmenujeme, a po\u010dk\u00e1 na odpov\u011b\u010f. A\u017e program dostane odpov\u011b\u010f, vyp\u00ed\u0161e na konzoli <code>Jmenuje\u0161 se \"</code> a jm\u00e9no, kter\u00e9 jsme mu zadali.</p> \u0158e\u0161en\u00ed <pre><code>import { readline } from \"./libs/readline.js\"\n\nasync function askName(){\n    console.log(\"Jak se jmenuje\u0161?\");\n    const reader = new readline(false);\n    let name : string = await reader.read();\n    console.log(\"Jmenuje\u0161 se \" + name);\n}\n\naskName();\n</code></pre>"},{"location":"robot/lekce8/#standardni-funkce","title":"Standardn\u00ed funkce","text":"<p>Ka\u017ed\u00fd jazyk nab\u00edz\u00ed \u0159adu funkc\u00ed na pr\u00e1ci se \u0159et\u011bzci. M\u016f\u017eeme je nap\u0159\u00edklad p\u0159ev\u00e1d\u011bt na \u010d\u00edsla, obracet, m\u011bnit znaky, a podobn\u011b. Pro n\u00e1s je zaj\u00edmav\u00e9 um\u011bt na\u010d\u00edst ze vstupu \u010d\u00edslo: to m\u016f\u017eeme ud\u011blat tak, \u017ee pomoc\u00ed funkce <code>read()</code> dostaneme \u0159et\u011bzec ze vstupu, a pot\u00e9 na n\u011bm zavol\u00e1me funkci <code>parseInt()</code>, kter\u00e1 n\u00e1m ho p\u0159evede na celo\u010d\u00edselnou hodnotu.</p> <pre><code>let str : string = \"20\"; // \u0158et\u011bzec se znaky pro 20\nlet num : number = parseInt(str); // P\u0159evedeme \u0159et\u011bzec na \u010d\u00edslo, a m\u016f\u017eeme s n\u00edm po\u010d\u00edtat\nlet doubled : number = num * 2; // doubled bude m\u00edt hodnotu 40\n</code></pre>"},{"location":"robot/lekce8/#vychozi-uloha-v1","title":"V\u00fdchoz\u00ed \u00faloha V1","text":"<p>Napi\u0161te (asynchronn\u00ed) funkci, kter\u00e1 po\u010dk\u00e1 na vstup od u\u017eivatele, p\u0159evede ho na \u010d\u00edslo, a pot\u00e9 rozsv\u00edt\u00ed LEDku na desce pomoc\u00ed <code>colors.rainbow()</code> s hodnotou na\u010dten\u00e9ho \u010d\u00edsla.</p> <p>Pro dobrovoln\u00edky</p> <p>U\u017eivatel velice jednodu\u0161e narozd\u00edl od po\u010d\u00edta\u010de m\u016f\u017ee ud\u011blat chybu, a napsat \u010d\u00edslo, kter\u00e9 nepat\u0159\u00ed do rozsahu pro tuto funkci. Pomoc\u00ed while cyklu m\u016f\u017eeme opakovat dotaz na vstup, dokud u\u017eivatel nezad\u00e1 spr\u00e1vnou hodnotu, tedy takovou, kter\u00e1 je v\u011bt\u0161\u00ed ne\u017e <code>0</code> a men\u0161\u00ed ne\u017e <code>360</code>.</p>"},{"location":"robot/lekce9/","title":"Bonus - Radio","text":"<p>Na Rob\u016ftkovi je k dispozici jednoduch\u00e1 bezdr\u00e1tov\u00e1 komunikace na vzd\u00e1lenost jednotek metr\u016f.</p> <ul> <li>A\u017e 16 \"skupin\", v\u0161echny desky ve stejn\u00e9 skupin\u011b p\u0159ijmaj\u00ed zpr\u00e1vy od v\u0161ech ostatn\u00edch z\u00e1rove\u0148</li> <li> <p>Podporuje t\u0159i datov\u00e9 typy:</p> <ul> <li>\u0158et\u011bzce do d\u00e9lky 30 znak\u016f</li> <li>\u010c\u00edsla</li> <li>Kl\u00ed\u010d - hodnota, kdy kl\u00ed\u010d je \u0159et\u011bzec do 22 znak\u016f a hodnota je \u010d\u00edslo</li> </ul> </li> </ul>"},{"location":"robot/lekce9/#spusteni","title":"Spu\u0161t\u011bn\u00ed","text":"<p>Pokud chcete pou\u017e\u00edvat radio, je t\u0159eba importovat jeho knihovnu a pot\u00e9 zavolat <code>begin(&lt;\u010d\u00edslo skupiny&gt;);</code></p> <pre><code>import * as radio from \"simpleradio\";\n\n// zapnut\u00ed radia, 4 je \u010d\u00edslo skupiny. M\u016f\u017ee b\u00fdt od 0 do 15 v\u010detn\u011b.\nradio.begin(4);\n\n// vypnut\u00ed radia\nradio.end();\n</code></pre>"},{"location":"robot/lekce9/#odesilani-dat","title":"Odes\u00edl\u00e1n\u00ed dat","text":"<p>K odes\u00edl\u00e1n\u00ed slou\u017e\u00ed 3 <code>send</code> funkce:</p> <pre><code>// Odesl\u00e1n\u00ed \u0159etezce\nradio.sendString(\"Ahoj!\");\n\nlet hodnota = 22;\nradio.sendString(`Hodnota: ${hodnota}`); // s form\u00e1tov\u00e1n\u00edm\n</code></pre> <pre><code>// Odesl\u00e1n\u00ed \u010d\u00edsla\nradio.sendNumber(42);\nradio.sendNumber(-2.42);\n</code></pre> <pre><code>// Odesl\u00e1n\u00ed kl\u00ed\u010d - hodnota\nradio.sendKeyValue(\"rychlost\", 10);\n</code></pre>"},{"location":"robot/lekce9/#rychle-odesilani","title":"Rychl\u00e9 odes\u00edl\u00e1n\u00ed","text":"<p>Pokud se rychle za sebou pokus\u00edte odeslat dv\u011b r\u016fzn\u00e9 hodnoty, je mo\u017en\u00e9, \u017ee doraz\u00ed pouze jedna - je t\u0159eba po\u010dkat p\u0159ed odesl\u00e1n\u00edm dal\u0161\u00ed hodnoty:</p> <pre><code>async function main() {\n  while (true) {\n    radio.sendKeyValue(\"x\", 10);\n    await sleep(50); // \u010dek\u00e1n\u00ed, aby se hodnota X stihla odeslat\n    radio.sendKeyValue(\"y\", 20);\n\n    await sleep(1000);\n  }\n}\nmain();\n</code></pre>"},{"location":"robot/lekce9/#prijmani-dat","title":"P\u0159ijm\u00e1n\u00ed dat","text":"<p>Pro p\u0159ijm\u00e1n\u00ed dat slou\u017e\u00ed funkce <code>on</code>. Prvn\u00ed parametr callbacku je v\u017edy p\u0159ijat\u00e1 hodnota, druh\u00e1 je objekt s informacemi o p\u0159ijmu - od koho (<code>address</code>) a s jaku s\u00edlou sign\u00e1lu (<code>rssi</code>) data p\u0159i\u0161la.</p> <pre><code>// \u0159et\u011bzce\nradio.on(\"string\", (retezec, info) =&gt; {\n  console.log(\n    `P\u0159ijal jsem \u0159et\u011bzec '${retezec}'.\n    Od: ${info.address},\n    s\u00edla sign\u00e1lu: ${info.rssi})\n`\n  );\n});\n</code></pre> <pre><code>// \u010d\u00edslo\nradio.on(\"number\", (cislo, info) =&gt; {\n  console.log(\n    `P\u0159ijal jsem \u010d\u00edslo ${cislo}.\n    Od: ${info.address},\n    s\u00edla sign\u00e1lu: ${info.rssi})\n`\n  );\n});\n</code></pre> <pre><code>// kl\u00ed\u010d - hodnota\nradio.on(\"keyvalue\", (klic, hodnota, info) =&gt; {\n  console.log(\n    `P\u0159ijal jsem ${klic} = ${hodnota}.\n    Od: ${info.address},\n    s\u00edla sign\u00e1lu: ${info.rssi})\n`\n  );\n});\n</code></pre> <p>Ka\u017edou kategorii p\u0159ijmac\u00edho callbacku lze i zru\u0161it:</p> <pre><code>radio.off(\"string\");\nradio.off(\"number\");\nradio.off(\"keyvalue\");\n</code></pre>"},{"location":"robot/lekce9/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Vytvo\u0159te program, kter\u00fd pomoc\u00ed kl\u00ed\u010d-hodnota bude p\u0159es r\u00e1dio odes\u00edlat stav dvou tla\u010d\u00edtek na desce (stisknuto == <code>1</code>, nestisknuto == <code>0</code>). Z\u00e1rove\u0148 bude reagovat na p\u0159\u00edchoz\u00ed hodnoty a rosvicovat prvn\u00ed 2 LED na LED p\u00e1sku podle p\u0159\u00edchoz\u00edho stavu.</p> <p>Jako kl\u00ed\u010de pou\u017eijte <code>IO0</code> a <code>IO2</code>. V\u017edy, kdy\u017e p\u0159ijde kl\u00ed\u010d <code>IO0</code> s hodnotou 1, rozsv\u00edt\u00edte LED na indexu 1, a kdy\u017e 0, tak ji zhasnete, a stejn\u011b tak pro dal\u0161\u00ed tla\u010d\u00edtko a LED.</p> <p>Najd\u011bte kamar\u00e1da, abyste si mohli navz\u00e1jem zkusit, zda program funguje (jeden vys\u00edl\u00e1, druh\u00fd p\u0159ijm\u00e1).</p> \u0158e\u0161en\u00ed <pre><code>import * as radio from \"simpleradio\";\nimport * as gpio from \"gpio\";\nimport { SmartLed, LED_WS2812 } from \"smartled\";\nimport * as colors from \"./libs/colors.js\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V1\");\n\nradio.begin(5); // skupina 5\n\nconst LED_COUNT = 3;\n\n// Nastav\u00edme tla\u010d\u00edtka jako vstupy\ngpio.pinMode(robutek.Pins.ButtonLeft, gpio.PinMode.INPUT);\ngpio.pinMode(robutek.Pins.ButtonRight, gpio.PinMode.INPUT);\n\ngpio.on(\"falling\", PIN_BTN_LEFT, () =&gt; {\n    // P\u0159i stisknut\u00ed tla\u010d\u00edtka 0\n    radio.sendKeyValue(\"IO2\", 1); // ode\u0161leme hodnotu 1 s kl\u00ed\u010dem IO2\n});\ngpio.on(\"rising\", PIN_BTN_LEFT, () =&gt; {\n    // P\u0159i uvoln\u011bn\u00ed tla\u010d\u00edtka 0\n    radio.sendKeyValue(\"IO2\", 0); // ode\u0161leme hodnotu 0 s kl\u00ed\u010dem IO2\n});\n\ngpio.on(\"falling\", PIN_BTN_RIGHT, () =&gt; {\n    radio.sendKeyValue(\"IO0\", 1); // ode\u0161leme hodnotu 1 s kl\u00ed\u010dem IO0\n});\ngpio.on(\"rising\", PIN_BTN_RIGHT, () =&gt; {\n    radio.sendKeyValue(\"IO0\", 0); // ode\u0161leme hodnotu 0 s kl\u00ed\u010dem IO0\n});\n\n// Nastav\u00edme LED piny jako v\u00fdstupy\nconst strip = new SmartLed(robutek.Pins.ILED, LED_COUNT);\n\n// Zpracov\u00e1n\u00ed p\u0159\u00edchoz\u00edch spr\u00e1v\nradio.on(\"keyvalue\", (klic, hodnota, info) =&gt; {\n    if (klic === \"IO0\") {\n        strip.set(1, colors.rainbow(0, hodnota * 10))\n    } else if (klic === \"IO2\") {\n        strip.set(2, colors.rainbow(150, hodnota * 10))\n    }\n\n    strip.show();\n});\n</code></pre>"},{"location":"robot/lekce9/#vychozi-ukol-v1","title":"V\u00fdchoz\u00ed \u00fakol V1","text":"<p>Zm\u011b\u0148t\u011b program ze zad\u00e1n\u00ed A tak, aby m\u00edsto tla\u010d\u00edtek vy\u010d\u00edtal ADC p\u0159evodn\u00edk. Na LED p\u00e1sku se bude zobrazovat hondota z ADC.</p>"},{"location":"robot/project_line/","title":"Projekt - J\u00edzda po \u010d\u00e1\u0159e","text":"<p>Po tom co jste si vyzkou\u0161eli z\u00e1kladn\u00ed pr\u00e1ci se senzory odrazu sv\u011btla na v\u00e1s \u010dek\u00e1 slo\u017eit\u011bj\u0161\u00ed probl\u00e9m. Na\u0161\u00edm c\u00edlem bude vytvo\u0159it robota, kter\u00fd bude n\u00e1sledovat \u010dernou \u010d\u00e1ru nakreslenou na b\u00edl\u00e9m podkladu.</p> <p>K vy\u0159e\u0161en\u00ed tohoto \u00fakolu budeme pou\u017e\u00edvat senzory odrazu sv\u011btla, kter\u00e9 jsou um\u00edst\u011bn\u00e9 na spodn\u00ed stran\u011b Rob\u016ftka. Tyto senzory dok\u00e1\u017e\u00ed rozpoznat, zda se pod nimi nach\u00e1z\u00ed b\u00edl\u00e1 nebo \u010dern\u00e1 plocha, p\u0159\u00edpadn\u011b jakou \u010d\u00e1st pozorovan\u00e9 plochy tvo\u0159\u00ed \u010d\u00e1ra.</p>"},{"location":"robot/project_maze/","title":"Projekt - Hled\u00e1n\u00ed cesty v bludi\u0161ti","text":"<p>Dal\u0161\u00ed na \u0159ad\u011b je na pohled o n\u011bco slo\u017eit\u011bj\u0161\u00ed projekt, ve kter\u00e9m si vyzkou\u0161\u00edme orientaci a pohyb v bludi\u0161ti. C\u00edlem bude naj\u00edt cestu z po\u010d\u00e1te\u010dn\u00edho bodu do c\u00edle.</p> <p>K tomu, abychom se dok\u00e1zali v bludi\u0161ti pohybovat, mus\u00edme m\u00edt zp\u016fsob, jak detekovat p\u0159ek\u00e1\u017eky a podle nich se rozhodovat, jak\u00fdm sm\u011brem se vydat. N\u00e1m k tomuto \u00fa\u010delu bude slou\u017eit dvojice senzor\u016f - tla\u010d\u00edtko na p\u0159edn\u00ed stran\u011b a laserov\u00fd d\u00e1lkom\u011br sm\u011b\u0159uj\u00edc\u00ed do strany.</p>"},{"location":"robot/project_sumo/","title":"Projekt - Sumo","text":"<p>Po sezn\u00e1men\u00ed s Rob\u016ftkem a programovac\u00edm prost\u0159ed\u00ed se m\u016f\u017eeme pustit do prvn\u00edho projektu. Na\u0161\u00edm c\u00edlem bude vytvo\u0159it robota, kter\u00fd nespadne z hrac\u00edho pole. Hrac\u00ed pople je pokryt\u00e9 \u010dernou barvou a jeho okraj oblepen\u00fd b\u00edlou p\u00e1skou. Kdy\u017e Rob\u016ftkovi senzorz detekuj\u00ed b\u00edlou p\u00e1sku tak se oto\u010d\u00ed a vyraz\u00ed n\u00e1hodn\u011b zp\u011bt do hrac\u00edho pole.</p> <p>K \u0159e\u0161en\u00ed budeme pou\u017e\u00edvat senzory odrazu sv\u011btla, kter\u00e9 jsou um\u00edst\u011bn\u00e9 na spodn\u00ed stran\u011b Rob\u016ftka. Tyto senzory dok\u00e1\u017e\u00ed rozpoznat, zda se pod nimi nach\u00e1z\u00ed b\u00edl\u00e1 nebo \u010dern\u00e1 plocha. Ne\u017e se pust\u00edte do \u0159e\u0161en\u00ed projd\u011bte si dokumentaci k senzor\u016fm odrazu sv\u011btla</p>"},{"location":"robot/project_sumo/#kompetetivni-zadani","title":"Kompetetivn\u00ed zad\u00e1n\u00ed","text":"<p>Dva Rob\u016ftci budou postaveni do hrac\u00edho pole. \u00dakolem va\u0161eho Rob\u016ftka bude zhodit protivn\u00edka z hrac\u00edho pole a s\u00e1m z n\u011bj nespadnout.</p> <p>Uk\u00e1zka jednoduch\u00e9ho programu:</p> <p></p>"},{"location":"robotAccessories/button/","title":"Tla\u010d\u00edtko","text":"<p>P\u0159\u00edslu\u0161enst\u00ed si m\u016f\u017eete d\u00e1t kamkoliv na Rob\u016ftka, ale v n\u00e1vodech jsou doporu\u010den\u00e9 pozice.</p> <ol> <li> <p>U\u0159izneme si 3 cm dlouh\u00fd kus d\u0159ev\u00ed\u010dka jako dr\u017e\u00e1k tla\u010d\u00edtka.</p> <p></p> </li> <li> <p>U\u0159\u00edznut\u00fd kousek si obrous\u00edme aby byl kr\u00e1sn\u011b hladk\u00fd.</p> <p></p> </li> <li> <p>P\u0159ilep\u00edme dr\u017e\u00e1k k tla\u010d\u00edtku pomoc\u00ed tavn\u00e9 pistole.</p> <p> </p> </li> <li> <p>Tla\u010d\u00edtko s dr\u017e\u00e1\u010dkem m\u016f\u017eeme p\u0159ilepit k Rob\u016ftkovi.</p> <p> </p> </li> <li> <p>Nakonec si p\u0159ipoj\u00edme tla\u010d\u00edtko k Rob\u016ftkovi pomoc\u00ed 3x10cm kabelu (jin\u00fd ne\u017e co je v pytl\u00ed\u010dku).</p> <p> </p> </li> </ol> Tla\u010d\u00edtko Rob\u016ftek OUTPUT \u2192 IO1 GND \u2192 GND VCC \u2192 VCC"},{"location":"robotAccessories/ledStrip/","title":"RGB p\u00e1sek","text":"<p>P\u0159\u00edslu\u0161enst\u00ed si m\u016f\u017eete d\u00e1t kamkoliv na Rob\u016ftka, ale v n\u00e1vodech jsou doporu\u010den\u00e9 pozice.</p> <ol> <li> <p>K p\u00e1sku p\u0159ip\u00e1j\u00edme kabel pro p\u0159ipojen\u00ed do rob\u016ftka.</p> <p>Dejte si pozor a\u0165 kabel nep\u0159ip\u00e1j\u00edte k DOUT pinu m\u00edsto DIN pinu.</p> <p></p> </li> <li> <p>P\u00e1sek p\u0159ipoj\u00edme k Rob\u016ftkovi.</p> <p>\u017dlut\u00fd dr\u00e1t pat\u0159\u00ed doprava.</p> <p></p> </li> <li> <p>P\u00e1sek p\u0159ilep\u00edme tavnou pistol\u00ed k Rob\u016ftkovi.</p> <p></p> </li> </ol>"},{"location":"robotAccessories/tof/","title":"Senzor vzd\u00e1lenosti","text":"<ol> <li> <p>U\u0159izneme si dva 2 cm dlouh\u00e9 kusy d\u0159ev\u00ed\u010dka pro dr\u017e\u00e1k Lidaru.</p> <p></p> </li> <li> <p>U\u0159\u00edznut\u00e9 kousky si obrous\u00edme aby byly kr\u00e1sn\u011b hladk\u00e9.</p> <p></p> </li> <li> <p>Herkules d\u00e1me na del\u0161\u00ed stranu jednoho z d\u00edl\u016f a pot\u00e9 je slep\u00edme do prav\u00e9ho \u00fahlu.</p> <p> </p> </li> <li> <p>Kdy\u017e n\u00e1m Herkules zaschne, m\u016f\u017eeme p\u0159ilepit dr\u017e\u00e1k k Rob\u016ftkovi pomoc\u00ed tavn\u00e9 pistole.</p> <p></p> </li> <li> <p>K d\u00e1lkom\u011bru si p\u0159ipoj\u00edme 4x10cm kabel.</p> <p></p> </li> <li> <p>P\u0159ipoj\u00edme d\u00e1lkom\u011br k Rob\u016ftkovi.</p> <p> </p> </li> </ol> Lidar Rob\u016ftek VIN \u2192 VCC GND \u2192 GND SCL \u2192 IO9 SDA \u2192 IO17 <ol> <li>Na troj-pin <code>PMOD-VCC</code> vedle pin\u016f je t\u0159eba p\u0159ipojit jumper pro zvolen\u00ed nap\u011bt\u00ed 3V3, tedy propojit dva piny bl\u00ed\u017ee okraji robota.</li> </ol> <p>!!! warning \"Opatrn\u011b! \u0160patn\u00fdm nastaven\u00edm <code>PMOD-VCC</code> lze zni\u010dit d\u00e1lkom\u011br!\"</p> <ol> <li> <p>Pot\u00e9 p\u0159ilep\u00edme d\u00e1lkom\u011br k dr\u017e\u00e1ku pomoc\u00ed tavn\u00e9 pistole.</p> <p></p> </li> </ol>"},{"location":"robotAssembly/","title":"Slo\u017een\u00ed robota","text":"<p>Prvn\u00ed krok</p>"},{"location":"robotAssembly/stage1/","title":"Stage 1 - Z\u00e1klad","text":"<p>V t\u00e9to kapitole si postav\u00edme samotn\u00e9ho Rob\u016ftka.</p>"},{"location":"robotAssembly/stage1/#seznam-potrebnych-soucastek","title":"Seznam pot\u0159ebn\u00fdch sou\u010d\u00e1stek","text":"<ul> <li>4 \u0161roubky M3x30</li> <li>2 motorky</li> <li>2 kabely</li> <li>2 kola</li> <li>2 podlo\u017eky kol</li> <li>Dome\u010dek pro motory</li> <li>Mal\u00fd kart\u00e1\u010dek</li> <li>V\u011bt\u0161\u00ed kart\u00e1\u010dek</li> <li>D\u0159ev\u011bn\u00e1 z\u00e1kladna</li> <li>Z\u00e1kladn\u00ed deska</li> <li>Baterie 14500</li> <li>Zar\u00e1\u017eka fixy</li> </ul>"},{"location":"robotAssembly/stage1/#navod-na-slozeni","title":"N\u00e1vod na slo\u017een\u00ed","text":"<ol> <li> <p>Ulom\u00edme okraje desky (n\u011bkter\u00e9 u\u017e jsou odl\u00e1man\u00e9).</p> <p> </p> </li> <li> <p>Ust\u0159ihneme si oba kabely p\u0159esn\u011b na 5cm (d\u00e9lka m\u011b\u0159en\u00e1 bez konektoru). Konce dr\u00e1tk\u016f zbav\u00edme izolace pomoc\u00ed odizolov\u00e1vac\u00edch kle\u0161t\u00ed.</p> <p> </p> </li> <li> <p>Odizolovan\u00e9 konce dr\u00e1tk\u016f poc\u00ednujeme a p\u0159ip\u00e1j\u00edme na desku Rob\u016ftka ve stejn\u00e9m po\u0159ad\u00ed jako na obr\u00e1zku - s b\u00edl\u00fdm dr\u00e1tkem v d\u00ed\u0159e ve tvaru \u010dtverce.</p> <p> </p> </li> <li> <p>Obrous\u00edme rohy dome\u010dku pro motory.</p> <p> </p> </li> <li> <p>Vsad\u00edme oba motory do dome\u010dku a dotla\u010d\u00edme je o hranu stolu.</p> <p>Ze spodu dome\u010dku je uprost\u0159ed v\u00fdstupek, dejte si pozor, abyste ho nezlomili.</p> <p> </p> </li> <li> <p>Dome\u010dek s motory posad\u00edme na desku.</p> <p></p> </li> <li> <p>Ze spodu upevn\u00edme dome\u010dek na motorky zar\u00e1\u017ekou fixy.</p> <p></p> </li> <li> <p>Na osy motor\u016f nasad\u00edme podlo\u017eky kol (zelenou stranou k motoru).</p> <p></p> </li> <li> <p>Nasad\u00edme kola tak aby byla prodlou\u017een\u00e1 \u010d\u00e1st kola oto\u010den\u00e1 ven z Rob\u016ftka.</p> <p> </p> </li> <li> <p>P\u0159ipoj\u00edme kabely k motor\u016fm.</p> <p></p> </li> <li> <p>Rob\u016ftka si oto\u010d\u00edme na druhou stranu, ucvakneme zbytky zap\u00e1jen\u00fdch dr\u00e1tk\u016f od motoru a vy\u010dist\u00edme desku.</p> <p></p> </li> <li> <p>Nasad\u00edme d\u0159ev\u011bnou z\u00e1kladnu.</p> <p>Z\u00e1kladna sedne p\u0159esn\u011b, jestli si nejste jist\u00ed, nepou\u017e\u00edvejte s\u00edlu, zkuste oto\u010dit d\u0159ev\u011bnou z\u00e1kladnu, p\u0159\u00edpadn\u011b se ptejte.</p> <p></p> </li> <li> <p>P\u0159i\u0161roubujte d\u0159ev\u011bnou z\u00e1kladnu a z\u00e1kladn\u00ed desku s krytem motor\u016f k sob\u011b \u010dty\u0159mi \u0161roubky zespodu.</p> <p></p> </li> <li> <p>Vlo\u017e\u00edme mal\u00fd kart\u00e1\u010dek do mal\u00e9 d\u00edrky a v\u011bt\u0161\u00ed kart\u00e1\u010dek do v\u011bt\u0161\u00ed d\u00edrky (viz obr\u00e1zek).</p> <p></p> </li> <li> <p>Vlo\u017e\u00edme baterii.</p> <p>Dejte si pozor na orientaci baterie - ov\u011b\u0159te si, \u017ee d\u00e1v\u00e1te plus baterie na plus dr\u017e\u00e1ku.</p> <p> </p> </li> <li> <p>M\u00e1me hotovo!!!</p> <p></p> </li> </ol>"},{"location":"robotAssembly/stage2/","title":"Stage 2 - Servo, fixa","text":""},{"location":"robotAssembly/stage2/#seznam-potrebnych-veci","title":"Seznam pot\u0159ebn\u00fdch v\u011bc\u00ed","text":"<ul> <li>Hotov\u00e1 stage 1</li> <li>Vrchn\u00ed d\u0159ev\u011bn\u00e1 deska</li> <li>Servo</li> <li>Stahovac\u00ed zip p\u00e1sek</li> <li>Fixa</li> <li>\u0160roubek</li> <li>5 matek</li> <li>Dr\u017e\u00e1k na fixu</li> <li>4 distan\u010dn\u00ed sloupky</li> </ul>"},{"location":"robotAssembly/stage2/#navod-na-slozeni","title":"N\u00e1vod na slo\u017een\u00ed","text":"<ol> <li> <p>P\u0159iprav\u00edme si fixu, dr\u017e\u00e1k na fixu, \u0161roubek, matku a p\u0159\u00edpravek.</p> <p></p> </li> <li> <p>Nasuneme dr\u017e\u00e1k na fixu</p> <p></p> </li> <li> <p>Nasuneme na fixu p\u0159\u00edpravek. Zatla\u010d\u00edme a\u017e na doraz.</p> <p></p> </li> <li> <p>Dr\u017e\u00e1k p\u0159itiskneme k p\u0159\u00edpravku.</p> <p>P\u0159\u00edpravek je ud\u011bl\u00e1n tak, aby dr\u017e\u00e1k sed\u011bl na fixe p\u0159esn\u011b.</p> <p></p> </li> <li> <p>Nasad\u00edme na dr\u017e\u00e1k \u0161roubek a matku.</p> <p></p> </li> <li> <p>Se\u0161roubujeme.</p> <p></p> </li> <li> <p>P\u0159iprav\u00edme si Rob\u016ftka stage 1 a na \u0161rouby zvrchu d\u00e1me distan\u010dn\u00ed sloupky.</p> <p></p> </li> <li> <p>Prot\u00e1hneme kabel od serva vrchn\u00ed d\u0159ev\u011bnou deskou.</p> <p></p> </li> <li> <p>Posad\u00edme servo na vrchn\u00ed d\u0159ev\u011bnou desku.</p> <p></p> </li> <li> <p>Prot\u00e1hneme stahovac\u00ed p\u00e1sek kolem serva jako na obr\u00e1zku.</p> <p></p> </li> <li> <p>Ut\u00e1hneme sthovac\u00ed p\u00e1sek kolem serva.</p> <p> </p> </li> <li> <p>P\u0159ipoj\u00edme konektor kabelu serva ke t\u0159\u00ed pinov\u00e9mu konektoru na z\u00e1kladn\u00ed desce Rob\u016ftka, tak jako na obr\u00e1zku.</p> <p>\u0160ipka na konektoru pat\u0159\u00ed na datov\u00fd pin na desce!</p> <p> </p> </li> <li> <p>Posad\u00edme vrchn\u00ed d\u0159ev\u011bnou desku se servem na \u0161rouby s distan\u010dn\u00edmi sloupky.</p> <p></p> </li> <li> <p>P\u0159i\u0161roubujeme vrchn\u00ed d\u0159ev\u011bnou desku maticemi ke zbytku Rob\u016ftka.</p> <p></p> </li> <li> <p>Od\u0161t\u00edpneme p\u0159e\u010dn\u00edvaj\u00edc\u00ed stahovac\u00ed p\u00e1sek.</p> <p> </p> </li> <li> <p>Vezmeme si jednu gumi\u010dku a zasukujeme ji.</p> <p></p> </li> <li> <p>Zasukovanou gumi\u010dku nasad\u00edme na fixu tak, jako na obr\u00e1zku.</p> <p></p> </li> <li> <p>Fixu nasad\u00edme na Rob\u016ftka zp\u016fsobem uk\u00e1zan\u00fdm na obr\u00e1zku..</p> <p></p> </li> <li> <p>M\u00e1me hotovo!!!</p> </li> </ol>"},{"location":"robutekLibrary/","title":"Robutek Library","text":"<p>ZIP s knihovnou</p>"}]}