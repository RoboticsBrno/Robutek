{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"V\u00edtejte na str\u00e1nk\u00e1ch projektu Rob\u016ftek!","text":""},{"location":"#rozcestnik","title":"Rozcestn\u00edk","text":"<ol> <li>\u00davod</li> <li>N\u00e1vod na slo\u017een\u00ed</li> <li>Dokumentace</li> <li>Programovac\u00ed lekce</li> </ol>"},{"location":"#uvod","title":"\u00davod","text":"<p>Toto je dokumentace pro verzi V2 Rob\u016ftka.</p> <p>Hled\u00e1te verzi V1? Najdete ji tady.</p> <p>Rob\u016ftek je robotick\u00e1 platforma ur\u010den\u00e1 pro v\u00fduku programov\u00e1n\u00ed a robotiky, a z\u00e1rove\u0148 jako roz\u0161i\u0159iteln\u00e1 platforma pro stav\u011bn\u00ed vlastn\u00edch robot\u016f s minim\u00e1ln\u00edmi vstupn\u00edmi n\u00e1roky.</p> <p>Rob\u016ftek v z\u00e1kladu um\u00ed:</p> <ul> <li>jezdit,</li> <li>kreslit fixou,</li> <li>n\u00e1sledovat \u010d\u00e1ru,</li> <li>pohybovat se bludi\u0161t\u011bm,</li> <li>p\u0159id\u00e1vat dal\u0161\u00ed senzory</li> </ul>"},{"location":"#schopnosti","title":"Schopnosti","text":""},{"location":"#pohon-a-snimani","title":"Pohon a sn\u00edm\u00e1n\u00ed","text":"<ul> <li>Diferenci\u00e1ln\u00ed pohon</li> <li>Enkod\u00e9ry na kolech pro p\u0159esn\u00fd pohyb</li> <li>IR senzory pro sledov\u00e1n\u00ed \u010d\u00e1ry</li> </ul>"},{"location":"#vnimani-barev-a-svetla","title":"Vn\u00edm\u00e1n\u00ed barev a sv\u011btla","text":"<ul> <li>RGB senzor podvozku pro detekci barev na podlaze</li> <li>RGB podsv\u00edcen\u00ed Rob\u016ftka</li> </ul>"},{"location":"#kresleni","title":"Kreslen\u00ed","text":"<ul> <li>Dr\u017e\u00e1k na fixu pro kreslen\u00ed na pap\u00edr</li> <li>Servo na roz\u0161i\u0159uj\u00edc\u00ed palub\u011b pro zved\u00e1n\u00ed fixy</li> </ul>"},{"location":"#rozsirujici-paluba","title":"Roz\u0161i\u0159uj\u00edc\u00ed paluba","text":"<ul> <li>Adresovateln\u00fd RGB p\u00e1sek</li> <li>Laserov\u00fd senzor vzd\u00e1lenosti (VL53L0X)</li> <li>P\u0159\u00eddavn\u00fd RGB senzor</li> </ul>"},{"location":"#jak-zacit","title":"Jak za\u010d\u00edt","text":"<ol> <li>Sestavte hardware podle n\u00e1vodu na slo\u017een\u00ed.</li> <li>P\u0159ipravte prost\u0159ed\u00ed pro Jaculus \u2013 nainstalujte a postupujte dle n\u00e1vodu.</li> <li>Nahrajte z\u00e1kladn\u00ed projekt \u2013 vyu\u017eijte referen\u010dn\u00ed Robutek library (viz n\u00ed\u017ee) jako startovn\u00ed bod.</li> <li>Vyzkou\u0161ejte si senzory a pohyb \u2013 zkuste si zajezdit, vyp\u010d\u00edst enkod\u00e9ry, IR senzory na \u010d\u00e1ru a RGB senzor.</li> <li>Vyzkou\u0161ejte kreslen\u00ed \u2013 zasu\u0148te fixu do dr\u017e\u00e1ku, servo zved\u00e1n\u00ed fixy pou\u017eijte pro start/stop kreslen\u00ed.</li> </ol> <p>Rychl\u00fd start s knihovnou</p> <p>Slo\u017eka <code>robutekLibrary</code> slou\u017e\u00ed jako referen\u010dn\u00ed projekt pro ostatn\u00ed projekty v dokumentaci (kop\u00edruj\u00ed se <code>@types</code> a <code>src/libs</code>).</p>"},{"location":"#dokumentace","title":"Dokumentace","text":""},{"location":"#architektura-prehled","title":"Architektura (p\u0159ehled)","text":"<ul> <li>\u0158\u00eddic\u00ed jednotka: ESP32-S3</li> <li>Pohon: diferenci\u00e1ln\u00ed (2 motory), enkod\u00e9ry na kolech</li> <li>Senzory: IR pro \u010d\u00e1ru, RGB senzor (spodek), VL53L0X pro vzd\u00e1lenost, p\u0159\u00eddavn\u00fd RGB senzor na palub\u011b</li> <li>Osv\u011btlen\u00ed: adresovateln\u00fd RGB p\u00e1sek, RGB podsv\u00edcen\u00ed \u0161asi</li> <li>Kreslen\u00ed: Servo na kontrolu kreslen\u00ed</li> <li>Programov\u00e1n\u00ed: Jaculus (viz ofici\u00e1ln\u00ed web)</li> </ul>"},{"location":"#programovaci-lekce","title":"Programovac\u00ed lekce","text":"<p>V r\u00e1mci Robotick\u00e9ho t\u00e1bora 2025 vznikly lekce pro v\u00fduku programov\u00e1n\u00ed a pr\u00e1ce s Rob\u016ftky. Byly zam\u00fd\u0161len\u00e9 pro pr\u00e1ci s lektorem a nejsou vhodn\u00e9 pro samostatn\u00e9 studium. Nach\u00e1zej\u00ed se v sekci Programovac\u00ed lekce.</p>"},{"location":"#bezpecnost-a-doporuceni","title":"Bezpe\u010dnost a doporu\u010den\u00ed","text":"<ul> <li>P\u0159ed kreslen\u00edm zkontrolujte zaji\u0161t\u011bn\u00ed fixy v dr\u017e\u00e1ku a pracovn\u00ed plochu.</li> <li>P\u0159i pr\u00e1ci s nap\u00e1jen\u00edm a motory dbejte na spr\u00e1vnou polaritu a mechanick\u00e9 upevn\u011bn\u00ed.</li> <li>P\u0159i pou\u017e\u00edv\u00e1n\u00ed laserov\u00e9ho senzoru vzd\u00e1lenosti (VL53L0X) nehle\u010fte do emitoru z bezprost\u0159edn\u00ed bl\u00edzkosti.</li> </ul>"},{"location":"#historie-verzi","title":"Historie verz\u00ed","text":"Rok Verze Popis 2024 v1 Prvn\u00ed plnohodnotn\u00fd Rob\u016ftek 2025 v2 Opraven\u00e9 chyby na desce, RGB senzor, v\u011bt\u0161\u00ed p\u0159esnost motor\u016f"},{"location":"#co-je-noveho-ve-v2","title":"Co je nov\u00e9ho ve V2","text":"<ul> <li>Integrovan\u00fd RGB senzor pro detekci barev na podlaze.</li> <li>RGB podsv\u00edcen\u00ed pro hez\u010d\u00ed vzhled a vizu\u00e1ln\u00ed signalizaci.</li> <li>Zjednodu\u0161en\u00e1 stavba d\u00edky integrovan\u00fdm encod\u00e9r\u016fm</li> </ul>"},{"location":"robot/","title":"Programov\u00e1n\u00ed robota","text":""},{"location":"robot/#programovani","title":"Programov\u00e1n\u00ed:","text":"<p>Rob\u016ftek je \u0159\u00edzen\u00fd mikrokontrol\u00e9rem ESP32-S3. K programov\u00e1n\u00ed budeme pou\u017e\u00edvat jazyk TypeScript, kter\u00fd budeme spou\u0161t\u011bt pomoc\u00ed programu Jaculus.</p> <p>Lekce 0</p>"},{"location":"robot/#prehled-pinu","title":"P\u0159ehled pin\u016f","text":"<p>\u010c\u00edsla pin\u016f nemus\u00edme p\u0159episovat ru\u010dn\u011b, lze pou\u017e\u00edt definici z knihovny:</p> <pre><code>import * as gpio from \"gpio\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\n\ngpio.pinMode(robutek.Pins.StatusLED, gpio.PinMode.OUTPUT);\ngpio.write(robutek.Pins.StatusLED, 1)\n</code></pre> <p>Pro kompletnost je pinout k nahl\u00e9dnut\u00ed zde:</p> <pre><code>export enum Pins {\n    StatusLED = 46,\n\n    // Jedna na desce a z\u00e1rove\u0148 v\u00fdvod pro p\u00e1sek,\n    // po p\u0159ipojen\u00ed extern\u00edho p\u00e1sku se tedy jedn\u00e1\n    // o 8 + 1 = 9 diod celkem\n    SmartLeds = 48,\n\n    ButtonLeft =  2,\n    ButtonRight = 0,\n\n    Servo1 = 21,\n    Servo2 = 38,\n\n    Sens1 = 4,\n    Sens2 = 5,\n    Sens3 = 6,\n    Sens4 = 7,\n\n    SensSW = 8,\n    SensEN = 47,\n\n    Motor1A = 11,\n    Motor1B = 12,\n    Motor2A = 45,\n    Motor2B = 13,\n    Enc1A = 39,\n    Enc1B = 40,\n    Enc2A = 42,\n    Enc2B = 41,\n}\n</code></pre> <p> </p>"},{"location":"robot/docs/","title":"Docs - Rob\u016ftek","text":"<p>V t\u00e9to sekci najdete dokumentaci k programov\u00e1n\u00ed a ovl\u00e1d\u00e1ni Rob\u016ftka a jeho \u010d\u00e1st\u00ed.</p>"},{"location":"robot/docs/ble/","title":"Docs - Bluetooth","text":"<p>K Rob\u016ftkovi se m\u016f\u017eeme p\u0159ipojit i bezdr\u00e1tov\u011b pomoc\u00ed Bluetooth. </p>"},{"location":"robot/docs/motors/","title":"Docs - Ovl\u00e1d\u00e1n\u00ed motor\u016f","text":"<p>Na Rob\u016ftkovi se nach\u00e1z\u00ed dva stejnosm\u011brn\u00e9 motory s enkod\u00e9rem (\u010didlo pro m\u011b\u0159en\u00ed pozice motoru). Motory jsou p\u0159ipojen\u00e9 k \u010dipu DRV8833, kter\u00fd zaji\u0161\u0165uje jejich \u0159\u00edzen\u00ed a kter\u00fd m\u016f\u017eeme ovl\u00e1dat z Jacula.</p> <p>Proto\u017ee chceme b\u00fdt schopni p\u0159esn\u011b \u0159\u00eddit rychlost, p\u0159\u00edpadn\u011b pozici motoru, p\u0159ipravili jsme do Jacula ovlada\u010d, kter\u00fd takov\u00e9 \u0159\u00edzen\u00ed umo\u017e\u0148uje. Nastaven\u00ed ovlada\u010de po\u0159\u00e1d ale nen\u00ed \u00fapln\u011b jednoduch\u00e9, tak\u017ee jsme nachystali knihovnu <code>robutek.ts</code>, kter\u00e1 motory nastav\u00ed a dovol\u00ed n\u00e1m je ovl\u00e1dat pomoc\u00ed jednoduch\u00fdch funkc\u00ed.</p>"},{"location":"robot/docs/motors/#import-knihovny","title":"Import knihovny","text":"<p>Nejprve si mus\u00edme knihovnu importovat. To ud\u011bl\u00e1me pomoc\u00ed p\u0159\u00edkazu <code>import</code>:</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\n</code></pre>"},{"location":"robot/docs/motors/#dostupne-rozhrani","title":"Dostupn\u00e9 rozhran\u00ed","text":"<p>Po naimportov\u00e1n\u00ed knihovny vznikne objekt <code>robutek</code>, skrze kter\u00fd m\u016f\u017eeme s Rob\u016ftkem interagovat. K \u0159\u00edzen\u00ed motor\u016f m\u00e1me k dispozici dva zp\u016fsoby:</p>"},{"location":"robot/docs/motors/#samostatne-rizeni-motoru","title":"Samostatn\u00e9 \u0159\u00edzen\u00ed motor\u016f","text":"<p>Pomoc\u00ed objekt\u016f <code>robutek.leftMotor</code> a <code>robutek.rightMotor</code> m\u016f\u017eeme ovl\u00e1dat motory odd\u011blen\u011b. Ka\u017ed\u00fd z t\u011bchto objekt\u016f m\u00e1 n\u011bkolik metod, kter\u00e9 jsou popsan\u00e9 ve slo\u017ece <code>@types/motor.d.ts</code>.</p> <p>Pro n\u00e1s jsou d\u016fle\u017eit\u00e9 tyto 4 metody:</p> <ul> <li><code>setSpeed(speed: number): void</code> - nastav\u00ed rychlost motoru. Rychlost zad\u00e1v\u00e1me v mm/s a m\u016f\u017ee b\u00fdt kladn\u00e1 i z\u00e1porn\u00e1. Kladn\u00e1 rychlost znamen\u00e1 j\u00edzdu vp\u0159ed, z\u00e1porn\u00e1 znamen\u00e1 j\u00edzdu vzad.</li> <li><code>async move({ time: number }): void</code> - motor se za\u010dne pohybovat zadanou rychlost\u00ed a po zadan\u00e9m \u010dase se zastav\u00ed. \u010cas zad\u00e1v\u00e1me v milisekund\u00e1ch.</li> <li><code>async move({ distance: number }): void</code> - motor se za\u010dne pohybovat zadanou rychlost\u00ed a po ujet\u00ed zadan\u00e9 vzd\u00e1lenosti se zastav\u00ed. Vzd\u00e1lenost zad\u00e1v\u00e1me v milimetrech.</li> <li><code>async stop(brake?: boolean): void</code> - zastav\u00ed motor. Pokud je <code>brake</code> nastaveno na <code>true</code>, motor se zastav\u00ed okam\u017eit\u011b. Pokud je <code>brake</code> nastaveno na <code>false</code>, motor se zastav\u00ed postupn\u011b.</li> <li><code>getPosition(): number</code> - vr\u00e1t\u00ed ujetou vzd\u00e1lenost v milimetrech.</li> </ul>"},{"location":"robot/docs/motors/#rizeni-obou-motoru-najednou","title":"\u0158\u00edzen\u00ed obou motor\u016f najednou","text":"<p>Pro jednodu\u0161\u0161\u00ed \u0159\u00edzen\u00ed pohybu Rob\u016ftka m\u00e1me nav\u00edc k dispozici n\u011bkolik funkc\u00ed, kter\u00e9 umo\u017e\u0148uj\u00ed ovl\u00e1dat oba motory najednou:</p> <ul> <li><code>robutek.setSpeed(speed: number): void</code> - nastav\u00ed rychlost obou motor\u016f.</li> <li><code>async robutek.move(curve: number, { time: number }): void</code> - Rob\u016ftek se za\u010dne pohybovat zadanou rychlost\u00ed zadan\u00fdm sm\u011brem a po zadan\u00e9m \u010dase se zastav\u00ed.</li> <li><code>async robutek.move(curve: number, { distance: number }): void</code> - Rob\u016ftek se za\u010dne pohybovat zadanou rychlost\u00ed zadan\u00fdm sm\u011brem a po ujet\u00ed zadan\u00e9 vzd\u00e1lenosti se zastav\u00ed.</li> <li><code>async robutek.stop(brake?: boolean): void</code> - zastav\u00ed oba motory.</li> </ul> <p>Parametr <code>curve</code> ur\u010duje, jak\u00fdm sm\u011brem se Rob\u016ftek bude pohybovat. Jde o \u010d\u00edslo v rozsahu od -1 do 1, kde 0 znamen\u00e1 j\u00edzdu rovn\u011b, z\u00e1porn\u00e9 \u010d\u00edslo znamen\u00e1 j\u00edzdu doleva a kladn\u00e9 \u010d\u00edslo znamen\u00e1 j\u00edzdu doprava. Kraje rozsahu (-1 a 1) znamenaj\u00ed j\u00edzdu doleva nebo doprava na m\u00edst\u011b.</p>"},{"location":"robot/docs/motors/#priklad-pouziti","title":"P\u0159\u00edklad pou\u017eit\u00ed","text":"<p>Nyn\u00ed si uk\u00e1\u017eeme, jak m\u016f\u017eeme ovl\u00e1dat motory Rob\u016ftka. Nejprve si mus\u00edme importovat knihovnu a pot\u00e9 m\u016f\u017eeme za\u010d\u00edt s ovl\u00e1d\u00e1n\u00edm motor\u016f.</p> <p>Na za\u010d\u00e1tku programu je rychlost nastaven\u00e1 na 0, tak\u017ee se motory nebudou pohybovat ani po zavol\u00e1n\u00ed funkce <code>move</code>. Je tedy pot\u0159eba prvn\u011b zavolat funkci <code>setSpeed</code> a a\u017e pot\u00e9 <code>move</code>.</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\n\nrobutek.setSpeed(100);\nrobutek.move(0, { distance: 1000 });\n</code></pre> <p>Takto m\u016f\u017eeme pos\u00edlat jednotliv\u00e9 p\u0159\u00edkazy na pohyb Rob\u016ftka, neum\u00edme v\u0161ak popsat sekvenci na sebe navazuj\u00edc\u00edch pohyb\u016f.</p> <p>Funkce, kter\u00e9 u sebe maj\u00ed slov\u00ed\u010dko <code>async</code>, jsou asynchronn\u00ed. To znamen\u00e1, \u017ee nap\u0159\u00edklad zavol\u00e1n\u00edm funkce <code>move</code> se za\u010dne pohyb motoru, ale program se hned p\u0159esune na dal\u0161\u00ed p\u0159\u00edkaz. Pokud ale chceme prov\u00e9st n\u011bjakou posloupnost pohyb\u016f a chceme tedy po\u010dkat, a\u017e se motor zastav\u00ed, mus\u00edme pou\u017e\u00edt p\u0159\u00edkaz <code>await</code>. Ten ale nelze pou\u017e\u00edvat kdekoliv, bude tedy pot\u0159eba upravit program tak, aby n\u00e1m to dovolil.</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\n\nasync function main() {\n    robutek.setSpeed(100);\n    await robutek.move(0, { distance: 200 });\n    await robutek.rotate(90);\n    await robutek.move(0, { distance: 200 });\n}\n\nmain().catch(console.error);\n</code></pre> <p>V tomto p\u0159\u00edkladu se Rob\u016ftek nejprve posune o 200 mm vp\u0159ed, pot\u00e9 se oto\u010d\u00ed o 90 stup\u0148\u016f a nakonec se posune o dal\u0161\u00edch 200 mm vp\u0159ed.</p>"},{"location":"robot/docs/sens/","title":"Docs - Ovl\u00e1d\u00e1n\u00ed senzor\u016f odrazu sv\u011btla","text":"<p>Na spodn\u00ed stran\u011b Rob\u016ftka se nach\u00e1z\u00ed 8 senzor\u016f odrazu sv\u011btla. Tyto senzory umo\u017e\u0148uj\u00ed rozpozn\u00e1vat, jak tmav\u00e1 nebo sv\u011btl\u00e1 je plocha pod Rob\u016ftkem. Senzory indikuj\u00ed odrazivost povrchu pomoc\u00ed nap\u011bt\u00ed, kter\u00e9 Rob\u016ftek m\u011b\u0159\u00ed a p\u0159ev\u00e1d\u00ed na \u010d\u00edslo. \u010c\u00edm vy\u0161\u0161\u00ed je pak nam\u011b\u0159en\u00e1 hodnota, t\u00edm sv\u011btlej\u0161\u00ed povrch je. Aby nam\u011b\u0159en\u00e1 hodnota byla co nejp\u0159esn\u011bj\u0161\u00ed, senzory si p\u0159isv\u011btluj\u00ed plochu pomoc\u00ed infra\u010derven\u00e9ho sv\u011btla.</p> <p>Senzory jsou uspo\u0159\u00e1d\u00e1ny do dvou sad po \u010dty\u0159ech senzorech (A1, A2, A3, A4 a B1, B2, B3, B4), mezi kter\u00fdmi se p\u0159ep\u00edn\u00e1 podle toho, kter\u00fd senzor v danou chv\u00edli chceme pou\u017e\u00edt. P\u0159ep\u00edn\u00e1n\u00ed mezi sadami je \u0159\u00edzeno pomoc\u00ed pinu <code>IO8</code> a logick\u00e1 hodnota 1 aktivuje sadu A, zat\u00edmco logick\u00e1 hodnota 0 aktivuje sadu B. P\u0159ep\u00edn\u00e1n\u00ed mezi sadami senzor\u016f trv\u00e1 kr\u00e1tk\u00fd okam\u017eit, b\u011bhem kter\u00e9ho mohou senzory m\u011b\u0159it \u0161patn\u00e9 hodnoty. Je tedy pot\u0159eba alespo\u0148 1 ms po\u010dkat, ne\u017e za\u010dneme \u010d\u00edst hodnoty senzor\u016f.</p> <p>P\u0159isv\u011btlen\u00ed senzor\u016f je pot\u0159eba zapnout samostatn\u011b pomoc\u00ed pinu <code>IO47</code>. Pokud je tento pin nastaven na logickou hodnotu 1, senzory si p\u0159isv\u011btluj\u00ed plochu, pokud je nastaven na logickou hodnotu 0, senzory si nep\u0159isv\u011btluj\u00ed plochu.</p> <p>Proto\u017ee je senzor\u016f hodn\u011b a je pot\u0159eba je nastavovat a p\u0159ep\u00ednat, v knihovn\u011b <code>robutek.js</code> jsme nachystali n\u011bkolik funkc\u00ed, kter\u00e9 pou\u017e\u00edv\u00e1n\u00ed senzor\u016f usnad\u0148uj\u00ed.</p>"},{"location":"robot/docs/sens/#import-knihovny","title":"Import knihovny","text":"<p>Nejprve si mus\u00edme knihovnu importovat. To ud\u011bl\u00e1me pomoc\u00ed p\u0159\u00edkazu <code>import</code>:</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\n</code></pre>"},{"location":"robot/docs/sens/#dostupne-rozhrani","title":"Dostupn\u00e9 rozhran\u00ed","text":"<p>P\u0159i importu knihovny se senzory spr\u00e1vn\u011b nastav\u00ed a p\u0159iprav\u00ed k pou\u017eit\u00ed. K jejich n\u00e1sledn\u00e9mu ovl\u00e1d\u00e1n\u00ed n\u00e1m u\u017e sta\u010d\u00ed pouze dv\u011b funkce:</p> <ul> <li><code>readSensor(sensor: SensorPos): number</code> - vr\u00e1t\u00ed nam\u011b\u0159enou hodnotu senzoru. Parametr <code>sensor</code> je typ senzoru, kter\u00fd chceme \u010d\u00edst. Dostupn\u00e9 senzory jsou pops\u00e1ny v <code>enum robutek.SensorPos</code>. Tato funkce sama p\u0159ep\u00edn\u00e1 mezi sadami senzor\u016f.</li> </ul>"},{"location":"robot/docs/sens/#priklad-pouziti","title":"P\u0159\u00edklad pou\u017eit\u00ed","text":"<p>Nyn\u00ed si uk\u00e1\u017eeme, jak m\u016f\u017eeme \u010d\u00edst hodnoty senzor\u016f. Nejprve si mus\u00edme importovat knihovnu a pot\u00e9 m\u016f\u017eeme za\u010d\u00edt s \u010dten\u00edm hodnot senzor\u016f.</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\n\nlet sensorValue = robutek.readSensor(\"LineFL\");\nconsole.log(sensorValue);\n</code></pre>"},{"location":"robot/docs/sim/","title":"Docs - simul\u00e1tor","text":"<p>K dvoukol\u00e9mu rob\u016ftkovi je dostupn\u00fd Simul\u00e1tor,  ve kter\u00e9m si m\u016f\u017eete vyzkou\u0161et sv\u00e9 programy p\u0159edt\u00edm, ne\u017e si je nahrajete do sv\u00e9ho robota. M\u016f\u017eete si tak ov\u011b\u0159it, \u017ee se v\u00e1\u0161 program chov\u00e1 tak, jak m\u00e1, ani\u017e byste nap\u0159. spadli s robotem ze stolu, nebo pokreslili n\u011bco co nem\u00e1te.</p> <p>P\u0159i otev\u0159en\u00ed odkazu v\u00e1s uv\u00edt\u00e1 n\u00e1sleduj\u00edc\u00ed obrazovka:</p> <p></p> <p>Vid\u00edte zde hlavn\u00ed okno s \u017eelvi\u010dkou (kter\u00e1 reprezentuje na\u0161eho rob\u016ftka), programovac\u00ed okno, a textov\u00e9 okno na v\u00fdstup na\u0161ich program\u016f.</p>"},{"location":"robot/docs/sim/#simulacni-okno","title":"Simula\u010dn\u00ed okno","text":"<p>V hlavn\u00edm okn\u011b se vyskytuje (nejprve nehybn\u00e1) \u017eelvi\u010dka. Jakmile \u017eelvi\u010dce naprogramujeme n\u011bjak\u00e9 chov\u00e1n\u00ed, uvid\u00edme ho v tomto okn\u011b.</p> <p>Pod oknem se vyskytuj\u00ed tla\u010d\u00edtka, kter\u00e1 slou\u017e\u00ed k interakci se simula\u010dn\u00edm prost\u0159ed\u00edm. Prvn\u00ed tla\u010d\u00edtko <code>Grab turtle</code> n\u00e1m umo\u017en\u00ed \u017eelvi\u010dku chytat. Po jeho stiskut\u00ed m\u016f\u017eeme \u017eelvi\u010dku chytit (kliknut\u00ed), p\u0159en\u00e9st (podr\u017een\u00ed), a polo\u017eit na nov\u00e9 m\u00edsto (pu\u0161t\u011bn\u00ed). M\u016f\u017eeme si ji tak kdykoliv nastavit do po\u017eadovan\u00e9 polohy.</p> <p>Stiskut\u00ed dal\u0161\u00edch tla\u010d\u00edtek n\u00e1m umo\u017en\u00ed kreslit tvary. Kreslit za\u010dneme stisknut\u00edm, p\u0159i podr\u017een\u00ed m\u011bn\u00edme velikost, a jakmile my\u0161 pust\u00edme, tvar je dokon\u010den\u00fd. Simul\u00e1tor podporuje 3 z\u00e1kladn\u00ed tvary:</p> <ul> <li> <p><code>Draw line</code> nakresl\u00ed \u010d\u00e1ru</p> </li> <li> <p><code>Draw rectangle</code> nakresl\u00ed obd\u00e9ln\u00edk</p> </li> <li> <p><code>Draw circle</code> nakresl\u00ed kruh</p> </li> </ul> <p>\u017delvi\u010dka je vybavena \u010d\u00e1rov\u00fdmi senzory, pomoc\u00ed kter\u00fdch um\u00ed na nakreslen\u00e9 tvary reagovat.</p> <p>Podobn\u011b jako u skute\u010dn\u00e9ho robota simulace nen\u00ed \u00fapln\u011b na milimetr p\u0159esn\u00e1. M\u016f\u017ee se v\u00e1m tak nap\u0159. st\u00e1t, \u017ee opakujete stejn\u00fd pohyb, a robot se oto\u010d\u00ed o stupe\u0148 v\u00edce ne\u017e by m\u011bl.</p>"},{"location":"robot/docs/sim/#programovaci-okno","title":"Programovac\u00ed okno","text":"<p>Do programovac\u00edho okna p\u00ed\u0161eme k\u00f3d, kter\u00fd n\u00e1sledn\u011b m\u016f\u017eeme spustit pomoc\u00ed tla\u010d\u00edtka <code>Run code</code>. Je zde dostupn\u00e1 funkcionalita pro ovl\u00e1d\u00e1n\u00ed robota pod n\u00e1zvem <code>robutek</code>.  Chceme-li tedy, aby se \u017eelvi\u010dka za\u010dala to\u010dit, m\u016f\u017eeme napsat nap\u0159. <code>robutek.rotate()</code>. Zastavit ji m\u016f\u017eeme k\u00f3dem <code>robutek.stop()</code>.</p> <p>M\u00e1me zde k dispozici rozhran\u00ed na ovl\u00e1d\u00e1n\u00ed robota a servo motoru, jako bychom zavolali p\u0159\u00edkaz <code>import</code> na knihovn\u00e1ch <code>robutek</code> a <code>servo</code> (nazna\u010deno v koment\u00e1\u0159i). Samotn\u00e9 simula\u010dn\u00ed prost\u0159ed\u00ed v\u0161ak \u017eije v izolaci. Vlastn\u00ed soubory na str\u00e1nce neexistuj\u00ed, a tak n\u00e1m <code>import</code> na ostatn\u00edch souborech nebude fungovat. Dodan\u00e9 rozhran\u00ed je to, co pot\u0159ebujeme k tomu, abychom mohli ovl\u00e1dat pohyb a interagovat s nakreslen\u00fdmi tvary.</p> <p>V programovac\u00edm okn\u011b funguj\u00ed standardn\u00ed zkratky zn\u00e1m\u00e9 z <code>VS Code</code>, nap\u0159. <code>Ctrl+C</code>, <code>Ctrl+V</code> pro kop\u00edrov\u00e1n\u00ed a <code>Ctrl+Z</code> pro vracen\u00ed p\u0159edchoz\u00edch zm\u011bn. K\u00f3d se v\u00e1m v\u0161ak m\u016f\u017ee ztratit obnoven\u00edm str\u00e1nky! Proto je lep\u0161\u00ed ps\u00e1t k\u00f3d na vlastn\u00edm po\u010d\u00edta\u010di, kde si ho m\u016f\u017eete ulo\u017eit na budouc\u00ed pou\u017eit\u00ed, a do programovac\u00edho okna ho jen kop\u00edrovat.</p>"},{"location":"robot/docs/sim/#senzory","title":"Senzory","text":"<p>Senzory odrazivosti povrchu jsou na \u017eelvi\u010dce um\u00edst\u011bny stejn\u011b jako na Rob\u016ftkovi, a m\u016f\u017eeme je v simulaci pou\u017e\u00edvat. Pro \u010dernou vr\u00e1t\u00ed hodnotu 0, pro b\u00edlou t\u011bsn\u011b pod 150, a na okraji dan\u00e9 barvy n\u011bco mezi nimi.</p>"},{"location":"robot/docs/sim/#vystup","title":"V\u00fdstup","text":"<p>Pokud n\u00e1\u0161 program n\u011bco vypisuje pomoc\u00ed <code>console.log()</code>, jeho v\u00fdstup se zobraz\u00ed v okn\u011b ozna\u010den\u00e9m <code>Output</code>.</p>"},{"location":"robot/docs/socket/","title":"Docs - Bezdr\u00e1tov\u00e9 programov\u00e1n\u00ed","text":"<p>Rob\u016ftka m\u016f\u017eeme monitoroovat a programovat bezdr\u00e1tov\u011b.</p>"},{"location":"robot/docs/socket/#pripojeni-k-robutkovi","title":"P\u0159ipojen\u00ed k Rob\u016ftkovi","text":"<ol> <li> <p>Klikneme na tla\u010d\u00edtko vyb\u00edr\u00e1n\u00ed portu (n\u011bkdy z\u016fstane p\u0159edvypln\u011bn\u00fd z minula) </p> </li> <li> <p>Vybereme <code>Socket</code> (\u00fapln\u011b dole) </p> </li> <li> <p>Zad\u00e1me IP adresu (z\u00edsk\u00e1n\u00ed IP adresy)  </p> </li> <li> <p>Pot\u00e9 m\u016f\u017eeme bezdr\u00e1tov\u011b programovat jako kdyby byl Rob\u016ftek p\u0159ipojen\u00fd kabelem.</p> <p>N\u011bkdy b\u016f\u017ee nastat chyba. Pokud nastane, sta\u010d\u00ed zm\u00e1\u010dknout <code>Ctrl+C</code> a zkusit to znovu.</p> </li> </ol>"},{"location":"robot/docs/vl53/","title":"Docs - d\u00e1lkom\u011br VL53L0X","text":"<p>K rob\u016ftkovi lze p\u0159ipojit d\u00e1lkom\u011br VL53L0X, kter\u00fd umo\u017e\u0148uje opticky m\u011b\u0159it vzd\u00e1lenost. S d\u00e1lkom\u011brem se komunikuje skrze I2C sb\u011brnici. Proto\u017ee je protokol pro ovl\u00e1d\u00e1n\u00ed d\u00e1lkom\u011bru slo\u017eit\u00fd<sup>1</sup>, pou\u017eijeme ke komunikaci knihovnu <code>VL53L0X.ts</code><sup>2</sup>.</p>"},{"location":"robot/docs/vl53/#import-knihovny","title":"Import knihovny","text":"<p>Nejprve si mus\u00edme knihovnu importovat. Z\u00e1rove\u0148 budeme tak\u00e9 pot\u0159ebovat importovat modul <code>i2c</code> pro komunikaci p\u0159es I2C sb\u011brnici. To ud\u011bl\u00e1me pomoc\u00ed p\u0159\u00edkazu <code>import</code>:</p> <pre><code>import { I2C1 } from \"i2c\"\nimport { VL53L0X } from \"./libs/VL53L0X.js\"\n</code></pre>"},{"location":"robot/docs/vl53/#konfigurace-dalkomeru","title":"Konfigurace d\u00e1lkom\u011bru","text":"<p>Po naimportov\u00e1n\u00ed knihovny z\u00edsk\u00e1me konstruktor t\u0159\u00eddy <code>VL53L0X</code>, kter\u00fdm m\u016f\u017eeme vytvo\u0159it nov\u00fd objekt d\u00e1lkom\u011bru. Tak\u00e9 z\u00edsk\u00e1me objekt <code>I2C1</code>, kter\u00fd slou\u017e\u00ed k ovl\u00e1d\u00e1n\u00ed I2C sb\u011brnice. Sb\u011brnici mus\u00edme nejprve nakonfigurovat a n\u00e1sledn\u011b m\u016f\u017eeme vytvo\u0159it objekt d\u00e1lkom\u011bru.</p> <pre><code>// Konfigurace I2C sb\u011brnice na pinu 17 pro SDA a 9 pro SCL\nI2C1.setup({sda: 17, scl: 9, bitrate: 400000});\n\n// Vytvo\u0159en\u00ed objektu d\u00e1lkom\u011bru\nconst vl = new VL53L0X(I2C1);\n</code></pre>"},{"location":"robot/docs/vl53/#dostupne-rozhrani","title":"Dostupn\u00e9 rozhran\u00ed","text":"<p>Po vytvo\u0159en\u00ed objektu d\u00e1lkom\u011bru m\u016f\u017eeme za\u010d\u00edt s m\u011b\u0159en\u00edm vzd\u00e1lenosti. K dispozici m\u00e1me pouze jednu metodu:</p> <ul> <li><code>async read(): Promise&lt;Measurement&gt;</code> - zah\u00e1j\u00ed m\u011b\u0159en\u00ed vzd\u00e1lenosti a vr\u00e1t\u00ed nam\u011b\u0159enou hodnotu v milimetrech. M\u011b\u0159en\u00ed vzd\u00e1lenosti chv\u00edli trv\u00e1, funkce je tedy asynchronn\u00ed a je pot\u0159eba pou\u017e\u00edt <code>await</code>. Funkce na konci m\u011b\u0159en\u00ed vrac\u00ed objekt typu <code>Measurement</code>, kter\u00fd obsahuje nam\u011b\u0159enou hodnotu a informace o v\u00fdsledku m\u011b\u0159en\u00ed.</li> </ul>"},{"location":"robot/docs/vl53/#priklad-pouziti","title":"P\u0159\u00edklad pou\u017eit\u00ed","text":"<p>Nyn\u00ed si uk\u00e1\u017eeme, jak m\u016f\u017eeme m\u011b\u0159it vzd\u00e1lenost pomoc\u00ed d\u00e1lkom\u011bru VL53L0X. N\u00e1sleduj\u00edc\u00ed program bude ka\u017edou vte\u0159inu m\u011b\u0159it vzd\u00e1lenost a vypisovat informace o m\u011b\u0159en\u00ed do monitoru.</p> <pre><code>import { I2C1 } from \"i2c\";\nimport { VL53L0X } from \"./libs/VL53L0X.js\"\nimport { stdout } from \"stdio\";\n\nI2C1.setup({sda: 17, scl: 9, bitrate: 400000});\nconst vl = new VL53L0X(I2C1);\n\nasync function main() {\n    while (true) {\n        const m = await vl.read();\n        console.log(\"Distance: \" + m.distance + \" mm  \\tSignal: \" + m.signalRate + \"\\tAmb: \" + m.ambientRate + \"\\tSPAD: \" + m.effectiveSpadRtnCount);\n        await sleep(10);\n    }\n}\n\nmain().catch(console.error);\n</code></pre> <p>V\u00fdpis potom m\u016f\u017ee vypadat nap\u0159\u00edklad takto:</p> <pre><code>Distance: 203 mm        Signal: 10.671875       Amb: 1.265625   SPAD: 177\nDistance: 199 mm        Signal: 11.265625       Amb: 1.203125   SPAD: 177\nDistance: 203 mm        Signal: 10.9765625      Amb: 1.234375   SPAD: 177\n</code></pre> <ul> <li>prom\u011bnn\u00e1 <code>m.distance</code> obsahuje nam\u011b\u0159enou vzd\u00e1lenost v milimetrech,</li> <li>prom\u011bnn\u00e1 <code>m.signalRate</code> obsahuje informaci o kvalit\u011b sign\u00e1lu,</li> <li>prom\u011bnn\u00e1 <code>m.ambientRate</code> obsahuje informaci o okoln\u00edm \u0161umu,</li> <li>prom\u011bnn\u00e1 <code>m.effectiveSpadRtnCount</code> obsahuje informaci o po\u010dtu aktivn\u00edch pixel\u016f (z t\u011bch se skl\u00e1d\u00e1 senzor a zap\u00edn\u00e1 je podle toho, jakou vzd\u00e1lenost a v jak\u00e9m prost\u0159ed\u00ed m\u011b\u0159\u00ed).</li> </ul> <ol> <li> <p>Podle v\u00fdrobce dokonce tak slo\u017eit\u00fd, \u017ee k n\u011bmu nelze dob\u0159e sepsat specifikaci (ve skute\u010dnosti to bude nejsp\u00ed\u0161 pouze neschopnost v\u00fdrobce a\u0165 u\u017e kv\u016fli \u0161patn\u00e9mu n\u00e1vrhu protokolu, nebo neochot\u011b sepsat dokumentaci).\u00a0\u21a9</p> </li> <li> <p>Dod\u00e1van\u00e1 knihovna je upravenou verz\u00ed knihovny VL53L0X.js od Espruino tak, aby fungovala v Jaculu\u00a0\u21a9</p> </li> </ol>"},{"location":"robot/docs/wifi/","title":"Docs - WiFi","text":"<p>K Rob\u016ftkovi se m\u016f\u017eeme p\u0159ipojit i bezdr\u00e1tov\u011b pomoc\u00ed WiFi. K tomu ale pot\u0159ebujeme aby se Rob\u016ftek bu\u010f p\u0159ipojil k existuj\u00edc\u00ed s\u00edti nebo vytvo\u0159il novou s\u00ed\u0165.</p>"},{"location":"robot/docs/wifi/#pripojeni-k-existujici-siti","title":"P\u0159ipojen\u00ed k existuj\u00edc\u00ed s\u00edti","text":"<ol> <li> <p>Klikneme na tla\u010d\u00edtko <code>Config WiFi</code> na doln\u00ed li\u0161t\u011b. Zde budeme d\u011blat v\u0161echno nastaven\u00ed WiFi.  </p> </li> <li> <p>Vybereme mo\u017enost <code>Add WiFi network</code>.  </p> </li> <li> <p>A zad\u00e1me n\u00e1zev s\u00edt\u011b (SSID)  </p> <p>Co d\u011blat kdy\u017e n\u00e1zev s\u00edt\u011b m\u00e1 v sob\u011b mezeru</p> <ul> <li>Pokud n\u00e1zev s\u00edt\u011b m\u00e1 v sob\u011b mezeru, mus\u00edme ho vlo\u017eit do uvozovek, nap\u0159\u00edklad <code>\"Hele mezera\"</code>.</li> </ul> </li> <li> <p>Dole v termin\u00e1le se n\u00e1m zobraz\u00ed m\u00edsto na zad\u00e1n\u00ed hesla.  </p> </li> <li> <p>Po zad\u00e1n\u00ed hesla be se n\u00e1m zobraz\u00ed spr\u00e1va \u017ee v\u0161e prob\u011bhlo v po\u0159\u00e1dku.  </p> </li> <li> <p>Pot\u00e9 mus\u00edme znovu kliknout na tla\u010d\u00edtko <code>Config WiFi</code> a vybrat mo\u017enost <code>Set WiFI to Station mode (connect to WiFi)</code>.  </p> </li> </ol>"},{"location":"robot/docs/wifi/#vytvoreni-nove-site","title":"Vytvo\u0159en\u00ed nov\u00e9 s\u00edt\u011b","text":"<ol> <li> <p>Klikneme na tla\u010d\u00edtko <code>Config WiFi</code> na doln\u00ed li\u0161t\u011b. Zde budeme d\u011blat v\u0161echno nastaven\u00ed WiFi.  </p> </li> <li> <p>Vybereme mo\u017enost <code>Set WiFi to AP mode (create a hotspot)</code>.  </p> </li> <li> <p>A zad\u00e1me n\u00e1zev s\u00edt\u011b (SSID)  </p> <p>Co d\u011blat kdy\u017e n\u00e1zev s\u00edt\u011b m\u00e1 v sob\u011b mezeru</p> <ul> <li>Pokud n\u00e1zev s\u00edt\u011b m\u00e1 v sob\u011b mezeru, mus\u00edme ho vlo\u017eit do uvozovek, nap\u0159\u00edklad <code>\"Hele mezera\"</code>.</li> </ul> </li> <li> <p>Dole v termin\u00e1le se n\u00e1m zobraz\u00ed m\u00edsto na zad\u00e1n\u00ed hesla.  </p> </li> </ol>"},{"location":"robot/docs/wifi/#vypnuti-wifi","title":"Vypnut\u00ed WiFi","text":"<ol> <li> <p>Klikneme na tla\u010d\u00edtko <code>Config WiFi</code> na doln\u00ed li\u0161t\u011b.  </p> </li> <li> <p>Vybereme mo\u017enost <code>Disable WiFi</code>.  </p> </li> </ol>"},{"location":"robot/docs/wifi/#zjisteni-ip-adresy","title":"Zji\u0161ten\u00ed IP adresy","text":"<ol> <li> <p>Klikneme na tla\u010d\u00edtko <code>Config WiFi</code> na doln\u00ed li\u0161t\u011b.  </p> </li> <li> <p>Vybereme mo\u017enost <code>Display current WiFI config</code>. </p> </li> <li> <p>A v termin\u00e1le se zobraz\u00ed IP adresa (N\u011bjakou dobu trv\u00e1 ne\u017e se Rob\u016ftek p\u0159ipoj\u00ed k s\u00edt\u00ed, tak\u017ee je mo\u017en\u00e9 \u017ee to bude chv\u00edly trvat)  </p> </li> </ol> <p>Nebo v k\u00f3du m\u016f\u017eete z\u00edskat IP adresu pomoc\u00ed funkce <code>currentIp()</code>:</p> <pre><code>import * as wifi from \"wifi\";\n\nconsole.log(wifi.currentIp())\n</code></pre>"},{"location":"robot/faq/","title":"\u010casto kladen\u00e9 dotazy","text":""},{"location":"robot/faq/#do-ktereho-usb-mam-pripojit-kabel","title":"Do kter\u00e9ho USB m\u00e1m p\u0159ipojit kabel?","text":"<ul> <li>Pou\u017e\u00edvej konektor <code>USB-C</code>, pokud ti nejde nahr\u00e1t k\u00f3d, pou\u017eij <code>micro-USB</code>.</li> </ul> Pro\u010d USB-C nefunguje? <p><code>USB-C</code> je softwarov\u00e9 <code>USB</code> na ESP32. Pokud nahraje\u0161 k\u00f3d, kter\u00fd rozbije ESP, <code>USB-C</code> nebude fungovat.Naopak <code>micro-USB</code> je p\u0159ipojen\u00e9 p\u0159es p\u0159evodn\u00edk, tak\u017ee bude fungovat i kdy\u017e m\u00e1 ESP probl\u00e9m. (potenci\u00e1ln\u00ed chyby: chyba p\u0159i nahr\u00e1v\u00e1n\u00ed, nekone\u010dn\u00e1 smy\u010dka v k\u00f3du, atd.).</p>"},{"location":"robot/faq/#jak-komunikovat-se-zarizenim","title":"Jak komunikovat se za\u0159\u00edzen\u00edm?","text":"<ul> <li>V lev\u00e9m spodn\u00edm rohu vyberte COM port (<code>Select COM Port</code>).</li> <li>Pot\u00e9 je mo\u017en\u00e9 spustit monitor (<code>Monitor</code>) skrze tla\u010d\u00edtko v lev\u00e9m spodn\u00edm rohu.</li> <li>N\u00e1sledn\u011b se v\u00e1m otev\u0159e termin\u00e1l, ve kter\u00e9m vid\u00edte v\u00fdstup ze za\u0159\u00edzen\u00ed.</li> </ul>"},{"location":"robot/faq/#jak-se-odpojit-od-zarizeni","title":"Jak se odpojit od za\u0159\u00edzen\u00ed?","text":"<ul> <li>Pomoc\u00ed klaves Ctrl+C se odpoj\u00edte z monitoru.</li> </ul>"},{"location":"robot/faq/#jak-zjistit-verzi-firmwaru-v-jaculu","title":"Jak zjistit verzi firmwaru v Jaculu?","text":"<ul> <li>P\u0159ipojte Rob\u016ftka k po\u010d\u00edta\u010di.</li> <li>Pomoc\u00ed Ctrl+Shift+P se v\u00e1m otev\u0159e okno pro zad\u00e1v\u00e1n\u00ed p\u0159\u00edkaz\u016f.</li> <li>Zadejte <code>Jaculus: Get firmware version</code>.</li> <li>V\u00fdsledek by se m\u011bl objevit v termin\u00e1lu.</li> </ul>"},{"location":"robot/faq/#jak-nainstalovat-vyvojove-prostredi","title":"Jak nainstalovat v\u00fdvojov\u00e9 prost\u0159ed\u00ed?","text":"<ul> <li>Koukni na Lekci 0.</li> </ul>"},{"location":"robot/faq/#nefunguje-nahrani-programu","title":"Nefunguje nahr\u00e1n\u00ed programu?","text":"<ul> <li>Pokud se program nenahraje za ~10 vte\u0159in, zkuste zm\u00e1\u010dknout tla\u010d\u00edtko ozna\u010den\u00e9 <code>EN</code> a program nahr\u00e1t znovu.</li> </ul>"},{"location":"robot/faq/#chyba-pri-spusteni-prikazu-v-konzoli","title":"Chyba p\u0159i spu\u0161t\u011bn\u00ed p\u0159\u00edkazu v konzoli","text":"<ul> <li>Pokud chyba obsahuje <code>running scripts is disabled on this system</code>, otev\u0159ete si aplikaci <code>Powershell</code> a spus\u0165te p\u0159\u00edkaz <code>Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope CurrentUser</code>. Pot\u00e9 restartujte v\u0161echny konzole, kter\u00e9 m\u00e1me otev\u0159en\u00e9.</li> </ul> <p>Chyba vypad\u00e1 p\u0159ibli\u017en\u011b takto.</p> <p></p>"},{"location":"robot/lekce0/","title":"Lekce 0 - Instalace prost\u0159ed\u00ed","text":"<p>V t\u00e9to lekci si p\u0159edstav\u00edme Jaculus, nainstalujeme si programovac\u00ed prost\u0159ed\u00ed a spust\u00edme prvn\u00ed program.</p>"},{"location":"robot/lekce0/#instalace","title":"Instalace","text":"<p>Na na\u0161ich robotech pob\u011b\u017e\u00ed program, kter\u00fd se jmenuje Jaculus. Tento program n\u00e1m umo\u017en\u00ed jednodu\u0161e ps\u00e1t instrukce (programy), kter\u00e9 nahrajeme do robota. Tyto programy budou specifikovat, jak se robot m\u00e1 chovat a umo\u017en\u00ed n\u00e1m s n\u00edm komunikovat. Aby n\u00e1m v\u0161echno spr\u00e1vn\u011b fungovalo, mus\u00edme Jacula nejprve nainstalovat, a k n\u011bmu i n\u011bkolik dal\u0161\u00edch program\u016f.</p>"},{"location":"robot/lekce0/#jaculus","title":"Jaculus","text":"<p>Na Linuxu je t\u0159eba p\u0159idat opr\u00e1vn\u011bn\u00ed udev, v\u00edce zde.</p>"},{"location":"robot/lekce0/#instalace-jacula","title":"Instalace Jacula","text":"<ol> <li> <p>Otev\u0159eme si Jaculus web installer v Chrome nebo Edge.</p> <p>Tento postup nefunguje ve Firefoxu a jinych prohl\u00ed\u017ee\u010d\u00edch, kter\u00e9 nepodporuj\u00ed rozhran\u00ed WebSerial.</p> </li> <li> <p>Zvol\u00edme desku <code>ESP32-S3</code> a variantu <code>Generic Quad PSRAM</code></p> <p></p> </li> <li> <p>V p\u0159ep\u00edna\u010di <code>Select board version</code> vybereme nejnov\u011bj\u0161\u00ed dostupnou verzi (tzn. tu s nejvy\u0161\u0161\u00edm \u010d\u00edslem).</p> </li> <li> <p>P\u0159ep\u00edna\u010d <code>Erase Flash</code> slou\u017e\u00ed k vymaz\u00e1n\u00ed program\u016f co u\u017e jsou nahran\u00e9 na ESP. Ve v\u00fdchoz\u00edm stavu <code>No</code> nevyma\u017ee programy v ESP.</p> <p></p> <p>P\u0159epnut\u00ed do Nahr\u00e1vac\u00edho m\u00f3du</p> <p>Vypneme Rob\u016ftka, dr\u017e\u00edme tla\u010d\u00edtko popsan\u00e9 <code>BOOT</code> a zapneme Rob\u016ftka.</p> </li> <li> <p>P\u0159ipoj\u00edme Rob\u016ftka k po\u010d\u00edta\u010di p\u0159es <code>USB-C</code></p> </li> <li> <p>Po p\u0159ipojen\u00ed Rob\u016ftka k po\u010d\u00edta\u010di stiskneme na webov\u00e9 str\u00e1nce tla\u010d\u00edtko <code>Connect</code>.</p> <p></p> </li> <li> <p>Ve vyskakovac\u00edm ok\u00e9nku zvol\u00edme port <code>COM</code> na Windows nebo <code>ttyACM</code> na unixov\u00fdch syst\u00e9mech a stiskneme <code>Connect</code>.</p> <p></p> </li> <li> <p>Po\u010dk\u00e1me, a\u017e se v konzoli zobraz\u00ed <code>Stub running...</code>. Pot\u00e9 zm\u00e1\u010dkneme tla\u010d\u00edtko <code>Flash</code>.</p> <p></p> <p>Pokud nefunguje nahr\u00e1v\u00e1n\u00ed p\u0159es USB-C, zkuste Micro-USB</p> </li> <li> <p>Jakmile se v konzoli objev\u00ed <code>Leaving...</code>, flashov\u00e1n\u00ed je dokon\u010deno a m\u016f\u017eeme kliknout na tla\u010d\u00edtko <code>Disconnect</code>. </p> </li> </ol> <p>Instalace program\u016f</p> <p>Po st\u00e1hnut\u00ed program\u016f (nap\u0159\u00edklad Node.js a Visual Studio Code) je pot\u0159eba je i nainstalovat. K tomu slou\u017e\u00ed instala\u010dn\u00ed soubor. M\u011bl by se nach\u00e1zet ve slo\u017ece <code>Download</code>. Jm\u00e9no souboru by m\u011blo b\u00fdt podobn\u00e9 n\u00e1zvu programu.</p>"},{"location":"robot/lekce0/#nodejs","title":"Node.js","text":"<p>Node.js je program, kter\u00fd n\u00e1m umo\u017en\u00ed nahr\u00e1vat k\u00f3d do Jacula a komunikovat s n\u00edm.</p> <ol> <li>St\u00e1hneme si <code>Node.js</code> (nejnov\u011bj\u0161\u00ed stabiln\u00ed verzi - LTS) - Stahuj ZDE pro Windows.</li> <li>Nainstalujeme jej dle v\u00fdchoz\u00edho nastaven\u00ed (nen\u00ed pot\u0159eba nic m\u011bnit).</li> </ol>"},{"location":"robot/lekce0/#visual-studio-code","title":"Visual Studio Code","text":"<p>Visual Studio Code je programovac\u00ed prost\u0159ed\u00ed, kter\u00e9 n\u00e1m umo\u017en\u00ed ps\u00e1t k\u00f3d a s roz\u0161\u00ed\u0159en\u00edm n\u00e1m dovol\u00ed nahr\u00e1vat k\u00f3d do za\u0159\u00edzen\u00ed.</p> <ol> <li>St\u00e1hneme si <code>Visual Studio Code</code> (nejnov\u011bj\u0161\u00ed stabiln\u00ed verzi)  - Stahuj ZDE pro Windows. </li> <li>Nainstalujeme jej dle v\u00fdchoz\u00edho nastaven\u00ed (nen\u00ed pot\u0159eba nic m\u011bnit).</li> </ol>"},{"location":"robot/lekce0/#jaculus_1","title":"Jaculus","text":"<p>Nyn\u00ed u\u017e se m\u016f\u017eeme vrhnout na samotnou instalaci <code>Jacula</code>.</p> <ol> <li>Po instalaci <code>node.js</code> restartujeme aplikaci Visual Studio Code.</li> <li>V horn\u00edm menu VSCode vybereme z\u00e1lo\u017eku <code>Terminal</code> a zvol\u00edme <code>New Terminal</code>.</li> <li> <p>Do termin\u00e1lu zad\u00e1me p\u0159\u00edkaz vypsan\u00fd n\u00ed\u017ee. Na <code>Linuxu</code> bude nejsp\u00ed\u0161e pot\u0159eba <code>sudo</code> pr\u00e1va.</p> <pre><code>npm install -g jaculus-tools\n</code></pre> <p>Dost\u00e1v\u00e1m chybu</p> <p>Pro aplikov\u00e1n\u00ed v\u0161ech zm\u011bn je nutn\u00fd restart VSCode. Pokud se v\u00e1m neda\u0159\u00ed nainstalovat Jaculus, zkuste nejd\u0159\u00edve restartovat VSCode.</p> </li> <li> <p>Pro otestov\u00e1n\u00ed instalace zad\u00e1me do termin\u00e1lu p\u0159\u00edkaz:</p> <pre><code>npx jac\n</code></pre> <p>Program by m\u011bl vypsat n\u00e1pov\u011bdu.</p> Uk\u00e1zka n\u00e1pov\u011bdy <pre><code>Usage: jac &lt;command&gt;\n\nTools for controlling devices running Jaculus\n\nCommands:\n  help            Print help for given command                       \n  list-ports      List available serial ports                        \n  serial-socket   Tunnel a serial port over a TCP socket             \n  install         Install Jaculus to device                          \n  build           Build TypeScript project                           \n  flash           Flash code to device (replace contents of ./code)  \n  pull            Download a file/directory from device              \n  ls              List files in a directory                          \n  read            Read a file from device                            \n  write           Write a file to device                             \n  rm              Delete a file on device                            \n  mkdir           Create a directory on device                       \n  rmdir           Delete a directory on device                       \n  upload          Upload a file/directory to device                  \n  format          Format device storage                              \n  project-create  Create project from package                        \n  project-update  Update existing project from package skeleton      \n  resources-ls    List available resources                           \n  resources-read  Read a resource from device                        \n  start           Start a program                                    \n  stop            Stop a program                                     \n  status          Get status of device                               \n  version         Get version of device firmware                     \n  monitor         Monitor program output                             \n  wifi-get        Display current WiFi config                        \n  wifi-ap         Set WiFi to AP mode (create a hotspot)             \n  wifi-add        Add a WiFi network                                 \n  wifi-rm         Remove a WiFi network                              \n  wifi-sta        Set WiFi to Station mode (connect to a wifi)       \n  wifi-disable    Disable WiFi                                       \n\nGlobal options:\n  --log-level   Set log level (default: info)                  \n  --help        Print this help message                        \n  --port        Serial port to use (default: first available)  \n  --baudrate    Baudrate to use (default: 921600)              \n  --socket      host:port to use \n</code></pre> </li> </ol>"},{"location":"robot/lekce0/#jaculus-vscode-rozsireni","title":"Jaculus VSCode roz\u0161\u00ed\u0159en\u00ed","text":"<p>Roz\u0161\u00ed\u0159en\u00ed pro VSCode n\u00e1m umo\u017en\u00ed jednodu\u0161e nahr\u00e1vat k\u00f3d do Jacula pomoc\u00ed ikonek a kl\u00e1vesov\u00fdch zkratek.</p> <ol> <li>V lev\u00e9m menu VSCode vyberte z\u00e1lo\u017eku <code>Extensions</code> a vyhledejte <code>Jaculus</code>.     </li> <li>Zvolte <code>Install</code>.</li> <li> <p>Pou\u017e\u00edv\u00e1n\u00ed Jaculu</p> <ul> <li> <p>Po otev\u0159en\u00ed projektu by se v\u00e1m ve spodn\u00ed li\u0161t\u011b m\u011bly objevit oran\u017eov\u00e9 ikonky Jacula.  </p> </li> <li> <p>V bo\u010dn\u00ed li\u0161t\u011b by se m\u011bla objevit z\u00e1lo\u017eka Jaculus, p\u0159es kterou m\u016f\u017eete vytov\u0159it projekt a n\u00e1sledn\u011b spou\u0161t\u011bt Jaculus p\u0159\u00edkazy. </p> </li> </ul> </li> </ol> Pou\u017e\u00edv\u00e1m Windows a nem\u016f\u017eu se p\u0159ipojit p\u0159es USB UART <p>Pokud se v\u00e1m neda\u0159\u00ed p\u0159ipojit na USB UART port, je nutn\u00e9 doinstalovat spr\u00e1vn\u00e9 drivery.</p> <ol> <li>St\u00e1hn\u011bte si driver pro v\u00e1\u0161 opera\u010dn\u00ed syst\u00e9m. Naleznete jej v z\u00e1lo\u017ece <code>Downloads -&gt; Software -&gt; CP210x Universal Windows Driver</code>.</li> <li>Rozbalte ZIP soubor a pot\u00e9 prav\u00fdm tla\u010d\u00edtkem klikn\u011bte na <code>silabser.inf</code> a vyberte <code>Install</code>.</li> <li>Vyzkou\u0161ejte, zda se v\u00e1m poda\u0159ilo p\u0159ipojit Jaculus. (mo\u017en\u00e1 budete muset restartovat po\u010d\u00edta\u010d).</li> </ol> <p>N\u011bco ti nefunguje?</p> <p>Pod\u00edvej se na \u010casto kladen\u00e9 dotazy</p>"},{"location":"robot/lekce1/","title":"Lekce 1 - Prvn\u00ed projekt","text":"<p>Zde si vyzkou\u0161\u00edme vytvo\u0159it prvn\u00ed projekt a nahr\u00e1t jej do Rob\u016ftka.</p> P\u0159es VS Code roz\u0161\u00ed\u0159en\u00edRu\u010dn\u011b ze zipu <p>Odkaz na projekt: <pre><code>https://robutek.robotikabrno.cz/v2/robot/lekce1/example1.tar.gz\n</code></pre></p> <p>Varov\u00e1n\u00ed</p> <p>Odkaz si zkop\u00edrujte ne\u017e za\u010dnete tvo\u0159it projekt, kdy\u017e vyjedete z VSCode p\u0159i vytv\u00e1\u0159en\u00ed projektu, vytv\u00e1\u0159en\u00ed projektu se v\u00e1m zru\u0161\u00ed.</p> <ol> <li>V prvn\u00edm kroku si na po\u010d\u00edta\u010di nachyst\u00e1me slo\u017eku <code>RoboCamp-2025</code>, do kter\u00e9 si budeme ukl\u00e1dat ve\u0161ker\u00e9 projekty.</li> <li>Klikneme prav\u00fdm tla\u010d\u00edtkem na ikonku <code>Visual Studio Code</code> a vybereme mo\u017enost <code>New window</code>.</li> <li>D\u00e1le v roz\u0161\u00ed\u0159en\u00ed Jaculus vybereme <code>Create Project</code>.</li> <li>Zvol\u00edme um\u00edst\u011bn\u00ed projektu do slo\u017eky <code>RoboCamp-2025</code>.</li> <li>Zad\u00e1me n\u00e1zev projektu, nap\u0159. <code>prvniProjekt</code>, potvrd\u00edme <code>Enter</code>.</li> <li>Vlo\u017e\u00edme odkaz na projekt, potvrd\u00edme <code>Enter</code>.</li> <li>Otev\u0159e se n\u00e1m vytvo\u0159en\u00fd projekt.</li> <li>P\u0159ipoj\u00edme Rob\u016ftka p\u0159es <code>USB-C</code>. Pokud <code>USB-C</code> nefunguje, pou\u017eijeme <code>micro-USB</code>.</li> <li> <p>V lev\u00e9m spodn\u00edm rohu vybereme <code>Select COM port</code> pro v\u00fdb\u011br portu, na kter\u00e9m je Rob\u016ftek p\u0159ipojen\u00fd. Pot\u00e9 se n\u00e1pis zm\u011bn\u00ed na vybran\u00fd port.</p> Vid\u00edme v\u00edce port\u016f <p>Pokud se n\u00e1m v nab\u00eddce zobraz\u00ed v\u00edce port\u016f, odpoj\u00edme Rob\u016ftka a zjist\u00edme, kter\u00fd port zmizel. Po p\u0159ipojen\u00ed Rob\u016ftka tento port vybereme.</p> </li> <li> <p>D\u00e1le zvol\u00edme <code>Monitor</code>, ten slou\u017e\u00ed pro komunikaci se za\u0159\u00edzen\u00edm.</p> </li> </ol> <p>St\u00e1hnout ZIP s prvn\u00edm projektem</p> <ol> <li>V prvn\u00edm kroku si na po\u010d\u00edta\u010di nachyst\u00e1me slo\u017eku <code>RoboCamp-2025</code>, do kter\u00e9 si budeme ukl\u00e1dat ve\u0161ker\u00e9 projekty.</li> <li>D\u00e1le si st\u00e1hneme zip soubor s prvn\u00edm projektem.</li> <li>Pot\u00e9 si jej rozbal\u00edme do vytvo\u0159en\u00e9 slo\u017eky k t\u00e1boru.</li> <li>Spust\u00edme VSCode a pomoc\u00ed z\u00e1lo\u017eky <code>File</code> -&gt; <code>Open Folder</code> vybereme slo\u017eku s projektem.</li> <li>P\u0159ipoj\u00edme Rob\u016ftka p\u0159es <code>USB-C</code>. Pokud <code>USB-C</code> nefunguje, pou\u017eijeme <code>micro-USB</code>.</li> <li> <p>V lev\u00e9m spodn\u00edm rohu vybereme <code>Select COM port</code> pro v\u00fdb\u011br portu, na kter\u00e9m je Rob\u016ftek p\u0159ipojen\u00fd. Pot\u00e9 se n\u00e1pis zm\u011bn\u00ed na vybran\u00fd port.</p> Vid\u00edme v\u00edce port\u016f <p>Pokud se n\u00e1m v nab\u00eddce zobraz\u00ed v\u00edce port\u016f, odpoj\u00edme Rob\u016ftka a zjist\u00edme, kter\u00fd port zmizel. Po p\u0159ipojen\u00ed Rob\u016ftka tento port vybereme.</p> </li> <li> <p>D\u00e1le zvol\u00edme <code>Monitor</code>, ten slou\u017e\u00ed pro komunikaci se za\u0159\u00edzen\u00edm.</p> </li> </ol>"},{"location":"robot/lekce1/#nahrani-programu","title":"Nahr\u00e1n\u00ed programu","text":"<p>Pokud n\u00e1m funguje p\u0159ipojen\u00ed na <code>Monitor</code> a b\u011b\u017e\u00ed n\u00e1m komunikace se za\u0159\u00edzen\u00edm, m\u016f\u017eeme do za\u0159\u00edzen\u00ed zkusit nahr\u00e1t n\u00e1\u0161 prvn\u00ed program.</p> <ol> <li>Ve VSCode m\u00e1me otev\u0159en\u00fd prvn\u00ed projekt. V lev\u00e9m <code>Exploreru</code> (<code>Pr\u016fzkumn\u00edku</code>) vybereme soubor ze  <code>src</code> -&gt; <code>index.ts</code>. V n\u011bm vid\u00edme n\u00e1\u0161 prvn\u00ed program.</li> <li> <p>Pot\u00e9 zvol\u00edme <code>Build, Flash and Monitor</code> pro nahr\u00e1n\u00ed programu do za\u0159\u00edzen\u00ed.</p> <p>Pokud se program nenahraje za ~10 vte\u0159in, zkuste zm\u00e1\u010dknout tla\u010d\u00edtko ozna\u010den\u00e9 <code>EN</code> a program nahr\u00e1t znovu.</p> <p>  3. M\u011bli bychom vid\u011bt v\u00fdstup z programu. <pre><code>$ jac monitor --port COM7\nConnecting to serial at COM7 at 921600 bauds... Connected.\n\nRobotick\u00fd t\u00e1bor 2025, zdrav\u00ed Jirka V\u00e1cha!\nRobotick\u00fd t\u00e1bor 2025, zdrav\u00ed Jirka V\u00e1cha!\n</code></pre> 4. Pro ukon\u010den\u00ed termin\u00e1lu, do n\u011bj klikneme a stiskneme Ctrl+C.</p> </li> </ol>"},{"location":"robot/lekce1/#uprava-programu","title":"\u00daprava programu","text":"<p>Pokud n\u00e1m funguje nahr\u00e1v\u00e1n\u00ed k\u00f3du, m\u016f\u017eeme se na n\u011bj pod\u00edvat a zkusit jej upravit. Ve zdrojov\u00e9m k\u00f3du jsou koment\u00e1\u0159e (<code>// tohle je koment\u00e1\u0159</code>), kter\u00e9 n\u00e1m popisuj\u00ed, co kter\u00fd \u0159\u00e1dek d\u011bl\u00e1.</p> <ol> <li>Prostudujeme si zdrojov\u00fd k\u00f3d.</li> <li> <p>Uprav\u00edme pozdrav na sv\u00e9 jm\u00e9no.</p> \u0158e\u0161en\u00ed <pre><code>...\nconsole.log(\"Robotick\u00fd t\u00e1bor 2025, zdrav\u00ed Franta Flinta!\");  // tady jsem zm\u011bnil sv\u00e9 jm\u00e9no\n...\n</code></pre> </li> <li> <p>Pokus\u00edme se zm\u011bnit rychlost vypisov\u00e1n\u00ed.</p> \u0158e\u0161en\u00ed <pre><code>...\nsetInterval(() =&gt; { /* n\u00e1\u0161 k\u00f3d */ }, 500); // \u010das opakov\u00e1n\u00ed se ud\u00e1v\u00e1 v milisekund\u00e1ch (1000 ms je 1 sekunda)\n...\n</code></pre> </li> <li> <p>Uprav\u00edme barvu.</p> \u0158e\u0161en\u00ed <p>Barvu lze zadat ve form\u00e1tu RGB - pom\u011br \u010derven\u00e9, zelen\u00e9 a modr\u00e9 barvy  <pre><code>...\nledStrip.set(0, { r: 0, g: 255, b: 0 }); // nastav\u00edme barvu LED na Rob\u016ftkovi na zelenou\n...\n</code></pre> M\u016f\u017eeme tak\u00e9 vyu\u017e\u00edt p\u0159edem definovan\u00e9 barvy.  <pre><code>import * as colors from \"./libs/colors.js\"; // mus\u00edme na za\u010d\u00e1tku programu importovat knihovnu s barvami\nledStrip.set(0, colors.blue); // nastav\u00edme barvu na modrou\n</code></pre> P\u0159edem definovan\u00e9 barvy:</p> <ul> <li><code>red</code></li> <li><code>orange</code></li> <li><code>yellow</code></li> <li><code>green</code></li> <li><code>light_blue</code></li> <li><code>blue</code></li> <li><code>purple</code></li> <li><code>pink</code></li> <li><code>white</code></li> <li><code>off</code></li> </ul> </li> </ol>"},{"location":"robot/lekce1/#lekce-15-dalkove-ovladani","title":"Lekce 1.5 - D\u00e1lkov\u00e9 ovl\u00e1d\u00e1n\u00ed","text":"<p>Pokud u\u017e m\u00e1me zap\u00e1jen\u00e9 motory a slo\u017een\u00e9ho Rob\u016ftka, m\u016f\u017eeme ho vyzkou\u0161et p\u0159es d\u00e1lkov\u00e9 ovl\u00e1d\u00e1n\u00ed</p> OdkazZip <pre><code>https://robutek.robotikabrno.cz/v2/robot/lekce1/example-gridui.tar.gz\n</code></pre> <p>St\u00e1hnout ZIP</p> <ol> <li> <p>Otev\u0159eme si projekt.</p> </li> <li> <p>V projektu v <code>src/index.ts</code> uprav\u00edme prom\u011bnn\u00e9 <code>OWNER</code> a <code>DEVICE_NAME</code> v horn\u00ed \u010d\u00e1sti na na\u0161e jm\u00e9no.</p> <p></p> </li> <li> <p>Na bo\u010dn\u00edm panelu vybereme roz\u0161\u00ed\u0159en\u00ed <code>Jaculus</code>.</p> </li> <li> <p>V otev\u0159en\u00e9m panelu klikneme na <code>WiFi Configuration</code> a pot\u00e9 na <code>Configure WiFi</code>.</p> <p></p> </li> <li> <p>Vybereme mo\u017enost <code>Add a WiFi network</code>.</p> <p></p> </li> <li> <p>Do pole zad\u00e1me n\u00e1zev WiFi s\u00edt\u011b. Na t\u00e1bo\u0159e pou\u017eijeme wifi pro roboty, <code>RoboRaj</code>.</p> <p></p> </li> <li> <p>Dole v termin\u00e1lu zad\u00e1me heslo <code>PlnoRobutku</code>.</p> <p></p> </li> <li> <p>Znovu klikneme na <code>Config WiFi</code> a vybereme <code>Set WiFI to Station mode (connect to wifi)</code>.</p> <p></p> </li> </ol>"},{"location":"robot/lekce1/#pripojeni-na-robutka","title":"P\u0159ipojen\u00ed na Rob\u016ftka","text":"<p>Rob\u016ftek je te\u010f p\u0159ipojen\u00fd na WiFi, tak\u017ee s n\u00edm m\u016f\u017eeme komunikovat p\u0159es telefony a po\u010d\u00edta\u010de</p> <p>Na\u0161e za\u0159\u00edzen\u00ed mus\u00ed b\u00fdt p\u0159ipojen\u00e9 na stejn\u00e9 WiFi jako Rob\u016ftek (na t\u00e1bo\u0159e <code>RoboRaj</code>, heslo <code>PlnoRobutku</code>).</p>"},{"location":"robot/lekce1/#android","title":"Android","text":"<p>St\u00e1hneme si aplikaci <code>RBController</code> pro Android.</p> <p>Aplikace RBController</p> <ol> <li>Po otev\u0159en\u00ed programu nastav\u00edme jm\u00e9no majitele na to stejn\u00e9, co jsme napsali do prom\u011bnn\u00e9 <code>OWNER</code> v k\u00f3du. Jinak Rob\u016ftka neuvid\u00edme!</li> <li>Pokud je telefon na stejn\u00e9 WiFi jako Rob\u016ftek, aplikace ho najde a m\u016f\u017eeme ho ovl\u00e1dat.</li> </ol>"},{"location":"robot/lekce1/#ios-a-pocitac","title":"iOS a po\u010d\u00edta\u010d","text":"<ol> <li> <p>Po nahr\u00e1n\u00ed programu vid\u00edme v termin\u00e1lu IP adresu Rob\u016ftka, nebo ji zjist\u00edme kliknut\u00edm na <code>Config WiFi</code> a vybr\u00e1n\u00edm mo\u017enosti <code>Display current WiFi config</code>.</p> <p>P\u0159i pou\u017eit\u00ed tla\u010d\u00edtka <code>Display current WiFi config</code> nesm\u00ed na Rob\u016ftkovi b\u011b\u017eet program, m\u016f\u017eeme ho vypnout zm\u00e1\u010dknut\u00edm Ctrl+C v termin\u00e1lu.</p> <p></p> </li> <li> <p>Zad\u00e1me tuto IP do prohl\u00ed\u017ee\u010de, nap\u0159. <code>http://192.168.4.1</code>. Na\u010dte se n\u00e1m str\u00e1nka s ovl\u00e1d\u00e1n\u00edm.</p> </li> </ol>"},{"location":"robot/lekce2/","title":"Lekce 2 - RGB LED + tla\u010d\u00edtko + ud\u00e1losti","text":"<p>V t\u00e9to lekci si nap\u00ed\u0161eme sv\u00e9 prvn\u00ed programy.</p> <p>Uk\u00e1\u017eeme si ovl\u00e1d\u00e1n\u00ed RGB LED um\u00edst\u011bn\u00e9 na ESP32 a pr\u00e1ci s ud\u00e1lostmi \u0159\u00edzen\u00fdmi tla\u010d\u00edtkem nebo \u010dasem.</p> <p>TypeScript (JavaScript) je imperativn\u00ed programovac\u00ed jazyk. To znamen\u00e1, \u017ee se vykon\u00e1 v\u0161e, co do programu nap\u00ed\u0161eme, v po\u0159ad\u00ed, v jak\u00e9m jsme to napsali.</p> <p>Pozn\u00e1mka</p> <p>V lekci 1. jsme se nau\u010dili jak vytvo\u0159it nov\u00fd projekt z odkazu. Te\u010f si tuto znalost ov\u011b\u0159\u00edme.</p> <p>Vytvo\u0159te si nov\u00fd projekt z nov\u00e9ho odkazu:</p> OdkazZip <pre><code>https://robutek.robotikabrno.cz/v2/robot/blank_project.tar.gz\n</code></pre> <p>St\u00e1hnout ZIP</p>"},{"location":"robot/lekce2/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Nejd\u0159\u00edve si zopakujeme p\u0159edchoz\u00ed lekci a rozsv\u00edt\u00edme RGB LED na Rob\u016ftkovi (<code>robutek.Pins.ILED</code>) jednou barvou (nap\u0159\u00edklad \u010dervenou).</p> <p>Na za\u010d\u00e1tku tohoto \u00fakolu si otev\u0159eme nov\u00fd pr\u00e1zdn\u00fd projekt. V souboru <code>index.ts</code> jsou p\u0159ipraveny <code>import</code> p\u0159\u00edkazy: ty n\u00e1m umo\u017en\u00ed vyu\u017e\u00edvat funkcionalitu z r\u016fzn\u00fdch soubor\u016f, nap\u0159. jednodu\u0161e ovl\u00e1dat LEDku, nebo vyu\u017e\u00edvat nadefinovan\u00e9 barvy.</p> <p>P\u00e1sek inicializujeme pomoc\u00ed <code>const ledStrip = new SmartLed(robutek.Pins.ILED, 1, LED_WS2812B)</code>. Barvu LED nastav\u00edme pomoc\u00ed <code>ledStrip.set(0, colors.&lt;n\u011bjak\u00e1_barva&gt;)</code> a zobraz\u00edme pomoc\u00ed <code>ledStrip.show()</code>.</p> \u0158e\u0161en\u00ed <pre><code>import * as colors from \"./libs/colors.js\";\nimport { LED_WS2812B, SmartLed } from \"smartled\";\nimport { createRobutek } from \"./libs/robutek.js\";\nconst robutek = createRobutek(\"V2\");\n\nconst ledStrip = new SmartLed(robutek.Pins.ILED, 1, LED_WS2812B); // robutek.Pins.ILED je pin 48\n\nledStrip.set(0, colors.red); // nastav\u00ed barvu prvn\u00ed LED na \u010dervenou (RGB 255 0 0)\nledStrip.show(); // zobraz\u00ed nastaven\u00ed na LED\n</code></pre>"},{"location":"robot/lekce2/#co-je-to-udalost-v-programovani","title":"Co je to ud\u00e1lost v programov\u00e1n\u00ed?","text":"<p>Ud\u00e1lost je situace, kterou program rozpozn\u00e1 (nap\u0159\u00edklad stisknut\u00ed nebo pu\u0161t\u011bn\u00ed tla\u010d\u00edtka, uplynut\u00ed ur\u010dit\u00e9ho \u010dasu). Po zaznamen\u00e1n\u00ed ud\u00e1losti se vykon\u00e1 k\u00f3d, kter\u00fd je k t\u00e9to ud\u00e1losti p\u0159i\u0159azen.</p> <p>S ud\u00e1lost\u00ed \u0159\u00edzenou \u010dasem u\u017e jsme se setkali: pomoc\u00ed <code>setInterval</code> um\u00edme ka\u017ed\u00fdch <code>X</code> milisekund spou\u0161t\u011bt dan\u00fd k\u00f3d. Zatim ale nev\u00edme, jak <code>setInterval</code> ukon\u010dit, tedy jak p\u0159estat k\u00f3d opakovan\u011b spou\u0161t\u011bt. K tomu slou\u017e\u00ed funkce <code>clearInterval(INTERVAL_ID)</code>. <code>INTERVAL_ID</code> n\u00e1m p\u0159i vyt\u00e1\u0159en\u00ed intervalu vr\u00e1t\u00ed funkce <code>setInterval()</code>.</p> <pre><code>import { createRobutek } from \"./libs/robutek\";\nconst intervalId = setInterval(()=&gt;{\n    console.log(\"interval\");\n}, 1000);\n\nawait sleep(10000);\n\nclearInterval(intervalId);\n</code></pre> <p>Ud\u00e1losti \u0159\u00edzen\u00e9 stiskem tla\u010d\u00edtka m\u016f\u017eeme ovl\u00e1dat pomoc\u00ed p\u0159ilo\u017een\u00e9 knihovny <code>gpio</code>. <code>GPIO</code> je jednoduch\u00e1 elektronick\u00e1 konstrukce, kter\u00e1 n\u00e1m umo\u017e\u0148uje pos\u00edlat nebo p\u0159ij\u00edmat bitov\u00e9 informace, a na z\u00e1klad\u011b toho m\u011bnit chov\u00e1n\u00ed na\u0161eho programu.</p> <p>Abychom mohli p\u0159ij\u00edmat sign\u00e1l ze stisknut\u00ed tla\u010d\u00edtka, nejd\u0159\u00edve mus\u00edme nastavit vybran\u00fd pin jako vstupn\u00ed. To ud\u011bl\u00e1me p\u0159\u00edkazem <code>gpio.pinMode(PIN, gpio.PinMode.INPUT)</code>, kde <code>PIN</code> je \u010d\u00edslo pinu (najdeme pod <code>robutek.Pins.</code>), a druh\u00fd argument je re\u017eim. Pokud bychom cht\u011bli nap\u0159. pou\u017e\u00edt LEDky p\u0159\u00edmo na desce, chceme dan\u00e9 piny pou\u017e\u00edt jako v\u00fdstupn\u00ed, tedy <code>gpio.PinMode.OUTPUT</code>.</p> <p>Jakmile m\u00e1me nastaven\u00e9 vstupn\u00ed tla\u010d\u00edtko, m\u016f\u017eeme na n\u011bm pozorovat ud\u00e1losti pomoc\u00ed <code>gpio.on()</code>. Reakci na stisknut\u00ed tla\u010d\u00edtka vyvol\u00e1me argumentem <code>\"falling\"</code>, reakci na pu\u0161t\u011bn\u00ed <code>\"rising\"</code>. K\u00f3d, kter\u00fd p\u0159i stisku tla\u010d\u00edtka n\u011bco vykon\u00e1, tedy m\u016f\u017ee vypadat takto:</p> <pre><code>gpio.pinMode(robutek.Pins.ButtonRight, gpio.PinMode.INPUT);\n\ngpio.on(\"falling\", robutek.Pins.ButtonRight, () =&gt; {\n  // n\u011bco ud\u011blej\n});\n</code></pre>"},{"location":"robot/lekce2/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Pomoc\u00ed ud\u00e1lost\u00ed rozsv\u00edt\u00edme p\u0159i stisknut\u00ed tla\u010d\u00edtka (<code>robutek.Pins.ButtonRight</code>) RGB LED na ESP32 (<code>robutek.Pins.ILED</code>) a p\u0159i pu\u0161t\u011bn\u00ed ho op\u011bt zhasneme.</p> \u0158e\u0161en\u00ed <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nimport * as colors from \"./libs/colors.js\";\nimport { LED_WS2812B, SmartLed } from \"smartled\";\nimport * as gpio from \"gpio\";\n\nconst robutek = createRobutek(\"V2\");\n\nconst ledStrip = new SmartLed(robutek.Pins.ILED, 1, LED_WS2812B);\n\ngpio.pinMode(robutek.Pins.ButtonRight, gpio.PinMode.INPUT); // nastav\u00ed pin 0 jako vstup\n\ngpio.on(\"falling\", robutek.Pins.ButtonRight, () =&gt; { // ud\u00e1lost, kter\u00e1 prob\u011bhne p\u0159i stisknut\u00ed tla\u010d\u00edtka p\u0159ipojen\u00e9ho na pin 0\n    ledStrip.set(0, colors.red); // nastav\u00ed barvu prvn\u00ed LED na \u010dervenou (RGB 255 0 0)\n    ledStrip.show(); // zobraz\u00ed nastaven\u00ed na LED\n});\n\ngpio.on(\"rising\", robutek.Pins.ButtonRight, () =&gt; { // ud\u00e1lost, kter\u00e1 prob\u011bhne p\u0159i pu\u0161t\u011bn\u00ed tla\u010d\u00edtka p\u0159ipojen\u00e9ho na pin 0\n    ledStrip.set(0, colors.off); // nastav\u00ed prvn\u00ed LED na zhasnutou (RGB 0 0 0)\n    ledStrip.show(); // zobraz\u00ed nastaven\u00ed na LED\n});\n</code></pre>"},{"location":"robot/lekce2/#zadani-c","title":"Zad\u00e1n\u00ed C","text":"<p>Dvakr\u00e1t za sekundu vyp\u00ed\u0161eme stav zm\u00e1\u010dknut\u00ed tla\u010d\u00edtka (0 nebo 1). Stav dan\u00e9ho tla\u010d\u00edtka z\u00edsk\u00e1me pomoc\u00ed <code>gpio.read(\u010d\u00edslo pinu)</code>.</p> <p>Vzpome\u0148me si z prvn\u00edho programu, \u017ee opakov\u00e1n\u00ed dos\u00e1hneme pomoc\u00ed <code>setInterval()</code>, a informaci vyp\u00ed\u0161eme pomoc\u00ed <code>console.log()</code>.</p> \u0158e\u0161en\u00ed <pre><code>import * as gpio from \"gpio\";\nimport { createRobutek } from \"./libs/robutek.js\";\nconst robutek = createRobutek(\"V2\");\n\ngpio.pinMode(robutek.Pins.ButtonRight, gpio.PinMode.INPUT); // nastav\u00ed pin 0 jako vstup\n\nsetInterval(() =&gt; { // pravideln\u011b vyvol\u00e1v\u00e1 ud\u00e1lost\n    console.log(gpio.read(robutek.Pins.ButtonRight)); // na\u010dte a vyp\u00ed\u0161e stav tla\u010d\u00edtka p\u0159ipojen\u00e9ho na pin 0\n}, 500); // \u010das opakov\u00e1n\u00ed se ud\u00e1v\u00e1 v milisekund\u00e1ch (500 ms je 0,5 sekundy)\n</code></pre>"},{"location":"robot/lekce2/#vystupni-ukol-v1-pozdrav","title":"V\u00fdstupn\u00ed \u00fakol V1 - Pozdrav","text":"<p>P\u0159i stisknut\u00ed tla\u010d\u00edtka (<code>robutek.Pins.ButtonRight</code>) vyp\u00ed\u0161eme pozdrav.</p>"},{"location":"robot/lekce2/#vystupni-ukol-v2-zmena-barvy","title":"V\u00fdstupn\u00ed \u00fakol V2 - Zm\u011bna barvy","text":"<p>P\u0159i stisknut\u00ed tla\u010d\u00edtka (<code>robutek.Pins.ButtonRight</code>) rozsv\u00edt\u00edme RGB LED na Rob\u016ftkovi (<code>robutek.Pins.ILED</code>) jednou barvou a p\u0159i pu\u0161t\u011bn\u00ed barvu zm\u011bn\u00edme na jinou.</p>"},{"location":"robot/lekce3/","title":"Lekce 3 - Prom\u011bnn\u00e9 a podm\u00ednky","text":"<p>V imperativn\u00edm programov\u00e1n\u00ed si dr\u017e\u00edme stav pomoc\u00ed prom\u011bnn\u00fdch. Prom\u011bnn\u00e9 jsou pojmenovan\u00e9 hodnoty, kter\u00e9 m\u016f\u017eeme m\u011bnit a opakovan\u011b pou\u017e\u00edvat v r\u016fzn\u00fdch \u010d\u00e1stech k\u00f3du.</p> <p>Prom\u011bnn\u00e1 m\u00e1 sv\u016fj typ, kter\u00fd ur\u010duje, jak\u00e9 hodnoty m\u016f\u017ee prom\u011bnn\u00e1 m\u00edt. Prom\u011bnnou vytvo\u0159\u00edme pomoc\u00ed kl\u00ed\u010dov\u00e9ho slova <code>let</code>. Ka\u017ed\u00fd jazyk m\u00e1 n\u011bkolik z\u00e1kladn\u00edch typ\u016f, zat\u00edm n\u00e1m budou sta\u010dit dva:</p> <ul> <li>number: z\u00e1kladn\u00ed \u010d\u00edseln\u00fd typ, m\u016f\u017ee nab\u00fdvat nap\u0159. hodnot: <code>1</code>, <code>2</code>, <code>10</code>, <code>-5</code>, <code>0.5</code></li> <li>boolean: z\u00e1kladn\u00ed pravdivostn\u00ed typ, kter\u00fd nab\u00fdv\u00e1 hodnot <code>true</code> a <code>false</code></li> </ul> <p>Hodnoty p\u0159i\u0159azujeme do prom\u011bnn\u00fdch pomoc\u00ed oper\u00e1toru <code>=</code>. P\u0159\u00edklad pou\u017eit\u00ed:</p> <pre><code>let first: number; // Vytvo\u0159\u00ed prom\u011bnnou se jm\u00e9nem first, a typem number\nfirst = 10; // P\u0159i\u0159ad\u00ed do prom\u011bnn\u00e9 hodnotu 10\nfirst = 15; // Zm\u011bn\u00ed hodnotu prom\u011bnn\u00e9 na 15\nlet second: number = 20; // Vytv\u00e1\u0159en\u00ed a p\u0159i\u0159azen\u00ed m\u016f\u017eeme zkombinovat\nlet truth: boolean = true; // Vytvo\u0159\u00ed prom\u011bnnou typu bool, kter\u00e1 reprezentuje pravdu\n</code></pre> <p>S prom\u011bnn\u00fdmi stejn\u011b jako s \u010d\u00edsly m\u016f\u017eeme prov\u00e1d\u011bt z\u00e1kladn\u00ed operace.</p> <pre><code>let a: number = 10;\nlet b: number = 5;\nlet c: number = a + b; // c je 15\nlet d: number = b - a; // d je -5\n</code></pre> <p>Abychom na z\u00e1klad\u011b hodnot prom\u011bnn\u00fdch mohli m\u011bnit chov\u00e1n\u00ed programu, pot\u0159ebujeme podm\u00ednky.</p> <p>Podm\u00ednka <code>if</code> n\u00e1m umo\u017e\u0148uje rozhodnout, jestli se ur\u010dit\u00fd kus k\u00f3du vykon\u00e1, nebo ne. Pou\u017e\u00edv\u00e1 se k tomu pravdivostn\u00ed hodnoty true(pravda) a false(nepravda).</p> <p>Nap\u0159\u00edklad, pokud m\u00e1me prom\u011bnnou <code>podm\u00ednka</code> typu boolean, pak n\u00e1sleduj\u00edc\u00ed k\u00f3d:</p> <pre><code>let result: number = 10;\nif (podm\u00ednka) {\n  result = 20;\n}\n</code></pre> <p>znamen\u00e1: Pokud je <code>podm\u00ednka</code> pravda (<code>true</code>), prom\u011bnn\u00e1 <code>result</code> bude m\u00edt hodnotu 20. Pokud je <code>podm\u00ednka</code> nepravda (<code>false</code>), <code>result</code> z\u016fstane 10.</p> <p>Podm\u00ednky \u010dasto pou\u017e\u00edv\u00e1me i pro porovn\u00e1v\u00e1n\u00ed \u010d\u00edsel. Nap\u0159\u00edklad:</p> <pre><code>let first: number;\nlet second: number;\n// ...\nif (first == second) {\n  // tento k\u00f3d se vykon\u00e1, pokud jsou ob\u011b \u010d\u00edsla stejn\u00e1\n}\n</code></pre> <p>Porovn\u00e1vat m\u016f\u017eeme r\u016fzn\u00fdmi zp\u016fsoby:</p> <ul> <li><code>==</code> zjist\u00ed, jestli jsou hodnoty stejn\u00e9</li> <li><code>&lt;</code> zjist\u00ed, jestli je prvn\u00ed \u010d\u00edslo men\u0161\u00ed ne\u017e druh\u00e9</li> <li><code>&gt;</code> zjist\u00ed, jestli je prvn\u00ed \u010d\u00edslo v\u011bt\u0161\u00ed ne\u017e druh\u00e9</li> <li><code>&lt;=</code> a <code>&gt;=</code> zjist\u00ed, jestli je men\u0161\u00ed/rovno nebo v\u011bt\u0161\u00ed/rovno</li> </ul> <p>Pokud chceme, aby se podle podm\u00ednky vykonal jeden nebo druh\u00fd kus k\u00f3du, pou\u017eijeme <code>if ... else</code>:</p> <pre><code>if (podm\u00ednka) {\n  // tento k\u00f3d se vykon\u00e1, kdy\u017e je podm\u00ednka pravda\n} else {\n  // tento k\u00f3d se vykon\u00e1, kdy\u017e je podm\u00ednka nepravda\n}\n</code></pre> <p>Takto m\u016f\u017eeme jednodu\u0161e \u0159\u00eddit, co m\u00e1 program d\u011blat podle r\u016fzn\u00fdch situac\u00ed.</p> <p>Pokud podm\u00ednka plat\u00ed, vykon\u00e1 se k\u00f3d <code>a</code>, pokud neplat\u00ed, vykon\u00e1 se k\u00f3d <code>b</code>.</p> <p>Za pou\u017eit\u00ed prom\u011bnn\u00fdch a podm\u00ednek rozsv\u00edt\u00edme sv\u011btlo na na\u0161\u00ed desce r\u016fzn\u00fdmi barvami.</p> <p>Barevn\u00e9 sv\u011btlo vytv\u00e1\u0159\u00edme ze t\u0159\u00ed z\u00e1kladn\u00edch barev: \u010derven\u00e1 (RED), zelen\u00e1 (GREEN), a modr\u00e1 (BLUE). Tyto barvy m\u00edch\u00e1me v r\u016fzn\u00fdch pom\u011brech od 0 do 255, a vytv\u00e1\u0159\u00edme tak r\u016fzn\u00e9 barvy:</p> <ul> <li>Prvn\u00ed hodnota (r) n\u00e1m d\u00e1v\u00e1 mno\u017estv\u00ed \u010derven\u00e9 (tedy nap\u0159. hodnoty 100, 0, 0) rozsv\u00edt\u00ed LEDku \u010derven\u011b</li> <li>Druh\u00e1 (g) d\u00e1v\u00e1 mno\u017estv\u00ed zelen\u00e9</li> <li>T\u0159et\u00ed (b) d\u00e1v\u00e1 mno\u017estv\u00ed modr\u00e9</li> </ul> <p>Ve v\u00fdchoz\u00edm stavu je LED vypnut\u00e1 (hodnoty <code>(0, 0, 0)</code>), a nejsiln\u011bj\u0161\u00ed b\u00edl\u00e9 sv\u011btlo z\u00edsk\u00e1me pou\u017eit\u00edm v\u0161ech barev na maximum (hodnoty <code>(255, 255, 255)</code>).</p> <p>Druhou variantou je pou\u017eit\u00ed p\u0159eddefinovan\u00fdch barev, kter\u00e9 jsou v souboru <code>colors.ts</code>. Nesm\u00edme zapomenout soubor importovat <code>import * as colors from './libs/colors.js'</code>. P\u0159\u00edklad pou\u017eit\u00ed obou variant:</p> <pre><code>ledStrip.set(0, colors.off); // Vypne LEDku pomoc\u00ed p\u0159eddefinovan\u00e9 barvy\nledStrip.set(0, { r: 0, g: 0, b: 0 }); // Vypne LEDku pomoc\u00ed vlastn\u00ed barvy\n\nledStrip.set(0, colors.green); // Rozsv\u00edt\u00ed LEDku zelen\u011b pomoc\u00ed p\u0159eddefinovan\u00e9 barvy\nledStrip.set(0, { r: 0, g: 255, b: 0 }); // Rozsv\u00edt\u00ed LEDku zelen\u011b pomoc\u00ed vlastn\u00ed barvy\n</code></pre> <p>Vytvo\u0159\u00edme si nov\u00fd projekt z odkazu: </p> OdkazZip <pre><code>https://robutek.robotikabrno.cz/v2/robot/lekce3/project3.tar.gz\n</code></pre> <p>St\u00e1hnout ZIP</p>"},{"location":"robot/lekce3/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Pomoc\u00ed jedn\u00e9 prom\u011bnn\u00e9 se stavem a podm\u00ednky ka\u017edou sekundu bu\u010f rozsv\u00edt\u00edme, nebo zhasneme LED na desce.</p> \u0158e\u0161en\u00ed <pre><code>import { LED_WS2812B, SmartLed } from \"smartled\";\nimport * as colors from \"./libs/colors.js\";\nimport { createRobutek } from \"./libs/robutek.js\";\nconst robutek = createRobutek(\"V2\");\n\nconst ledStrip = new SmartLed(robutek.Pins.ILED, 1, LED_WS2812B);\n\nlet on: boolean = false; // LED je vypnut\u00e1\n\nsetInterval(() =&gt; {\n  if (on) {\n    // Pokud je LED zapnut\u00e1\n    ledStrip.set(0, colors.off); // Vypneme LED\n    ledStrip.show(); // Zobraz\u00edme zm\u011bny\n    on = false;\n  } else {\n    ledStrip.set(0, colors.green); // Rozsv\u00edt\u00edme LED zelenou barvou\n    ledStrip.show(); // Zobraz\u00edme zm\u011bny\n    on = true;\n  }\n}, 1000);\n</code></pre>"},{"location":"robot/lekce3/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Pomoc\u00ed funkce <code>colors.rainbow</code> budeme proch\u00e1zet duhu. Jde o funkci (o t\u011bch si pov\u00edme trochu v\u00edce pozd\u011bji), kter\u00e1 dostane \u010d\u00edslo od 0 do 360, a na z\u00e1klad\u011b toho vr\u00e1t\u00ed barvu na barevn\u00e9m spektru. V dan\u00e9m intervalu (nap\u0159. 100 ms) budeme postupn\u011b zvy\u0161ovat \u010d\u00edslo a nastavovat barvu LEDky na <code>colors.rainbow(cislo)</code>. Pokud na\u0161e \u010d\u00edslo p\u0159es\u00e1hne hodnotu <code>360</code>, mus\u00edme ho op\u011bt nastavit na <code>0</code>.</p> \u0158e\u0161en\u00ed <pre><code>import * as colors from \"./libs/colors.js\";\nimport { LED_WS2812B, SmartLed } from \"smartled\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\n\nconst ledStrip = new SmartLed(robutek.Pins.ILED, 1, LED_WS2812B);\n\nlet shade = 0; // Dr\u017e\u00edme si stav s aktu\u00e1ln\u00edm odst\u00ednem\n\nsetInterval(() =&gt; {\n    ledStrip.set(0, colors.rainbow(shade)); // Nastav\u00edme LED na aktu\u00e1ln\u00ed odst\u00edn\n    ledStrip.show(); // Zobraz\u00edme vybranou barvu\n    shade = shade + 1; // Zvedneme odst\u00edn (lze i shade += 1)\n    if (shade &gt; 360) {\n        shade = 0;\n    }\n}, 100);\n</code></pre>"},{"location":"robot/lekce3/#zadani-c","title":"Zad\u00e1n\u00ed C","text":"<p>Tentokr\u00e1t budeme reagovat na stisk tla\u010d\u00edtka. Do desky si zapoj\u00edme p\u00e1sek 8 inteligentn\u00edch ledek, a vybranou barvou je budeme rozsv\u011bcet.</p> <p>Po stisku tla\u010d\u00edtka zhasneme aktu\u00e1ln\u00ed LEDku, a rozsv\u00edt\u00edme tu dal\u0161\u00ed. Pokud p\u0159i stisku tla\u010d\u00edtka sv\u00edt\u00ed posledn\u00ed LED, zhasneme ji, a rozsv\u00edt\u00edme op\u011bt prvn\u00ed LED.</p> \u0158e\u0161en\u00ed <pre><code>import * as colors from \"./libs/colors.js\";\nimport { LED_WS2812B, SmartLed } from \"smartled\";\nimport { createRobutek } from \"./libs/robutek.js\";\nimport * as gpio from \"gpio\";\n\nconst robutek = createRobutek(\"V2\");\n\nconst ledStrip = new SmartLed(robutek.Pins.ILEDConnector, 8, LED_WS2812B);\n\ngpio.pinMode(robutek.Pins.ButtonRight, gpio.PinMode.INPUT); // Nastav\u00edme tla\u010d\u00edtko\n\nlet index: number = 0;\nlet color: colors.Rgb = colors.light_blue; // Vybereme si barvu\nledStrip.set(0, color); // Nastav\u00edme LED na aktu\u00e1ln\u00ed odst\u00edn\nledStrip.show(); // Zobraz\u00edme zm\u011bny\n\ngpio.on(\"falling\", robutek.Pins.ButtonRight, () =&gt; {\n  ledStrip.set(index, colors.off); // Vypneme p\u0159edchoz\u00ed LED\n  index = index + 1; // Zvedneme index (lze i index += 1)\n  if (index &gt;= 8) {\n    // Pokud jsme mimo rozsah p\u00e1sku, vr\u00e1t\u00edme se na za\u010d\u00e1tek\n    index = 0;\n  }\n  ledStrip.set(index, color); // Nastav\u00edme aktu\u00e1ln\u00ed LED\n  ledStrip.show(); // Zobraz\u00edme zm\u011bny\n});\n</code></pre>"},{"location":"robot/lekce3/#vystupni-ukol-v1-knightrider","title":"V\u00fdstupn\u00ed \u00fakol V1 - Knightrider","text":"<p>Sv\u00edt\u00edc\u00ed LED \"b\u011bh\u00e1\" s danou rychlost\u00ed od za\u010d\u00e1tku do konce p\u00e1sky. Jakmile doraz\u00ed na konec, zm\u011bn\u00ed sm\u011br, a posouv\u00e1 se opa\u010dn\u00fdm sm\u011brem.</p> <p>V na\u0161em p\u0159\u00edpad\u011b bude sta\u010dit, kdy\u017e se bude pohybovat pouze jedna LEDka.</p> <p></p> <p>Pro dobrovoln\u00edky</p> <ul> <li> <p>Jezdec m\u016f\u017ee p\u0159i b\u011bhu m\u011bnit barvy (nap\u0159. pomoc\u00ed funkce <code>rainbow</code>)</p> </li> <li> <p>Jezdec m\u016f\u017ee zanech\u00e1vat stopu: barva nezmiz\u00ed hned, ale a\u017e s odstupem. Barva m\u016f\u017ee \"mizet\" postupn\u011b: intenzita stopy se \u010dasem sni\u017euje.</p> </li> </ul>"},{"location":"robot/lekce4/","title":"Lekce 4 - Motory","text":"<p>V t\u00e9to lekci si vyzkou\u0161\u00edme to\u010dit motory a pohybovat robotem.</p> <p>Polo\u017eme si Rob\u016ftka na n\u011bco tak, aby se kola nedot\u00fdkala zem\u011b a mohla se voln\u011b to\u010dit - tak m\u016f\u017eeme k\u00f3d otestovat bez toho, aby Rob\u016ftek sjel ze stolu.</p> <p>Vytvo\u0159\u00edme si nov\u00fd projekt z odkazu na pr\u00e1zdn\u00fd projekt:</p> OdkazZip <pre><code>https://robutek.robotikabrno.cz/v2/robot/blank_project.tar.gz\n</code></pre> <p>St\u00e1hnout ZIP</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\";\nimport * as colors from \"./libs/colors.js\";\nimport * as gpio from \"gpio\";\nimport { SmartLed, LED_WS2812B } from \"smartled\";\nconst robutek = createRobutek(\"V2\");\n</code></pre> <p>To je dobr\u00fd za\u010d\u00e1tek - pokra\u010dujme na konci souboru.</p>"},{"location":"robot/lekce4/#async-main-funkce","title":"Async main funkce","text":"<p>Motory jsou tzv. asynchron\u00ed, to znamen\u00e1, \u017ee se ovl\u00e1daj\u00ed p\u0159\u00edkazem, kter\u00fd m\u016f\u017ee trvat del\u0161\u00ed dobu, ne\u017e se vykon\u00e1 (nap\u0159\u00edklad \"uje\u010f 50cm\" bude trvat n\u011bkolik vte\u0159in).</p> <p>Abychom mohli motory pou\u017e\u00edvat, je t\u0159eba p\u0159idat tuto \"kostru\" s <code>async function()</code>. Klidn\u011b ji zkop\u00edrujme, pat\u0159\u00ed na konec souboru <code>src/index.ts</code>.</p> <pre><code>async function main() {\n  // Tady bude k\u00f3d na ovl\u00e1d\u00e1n\u00ed motor\u016f\n}\n\nmain().catch(console.error);\n</code></pre>"},{"location":"robot/lekce4/#rizeni-motoru","title":"\u0158\u00edzen\u00ed motor\u016f","text":"<p>Je\u017ed\u011bn\u00ed m\u00e1 t\u0159i \u010d\u00e1sti - nastaven\u00ed rychlosti, rampy, a samotn\u00fd pohyb:</p> <ul> <li><code>robutek.setSpeed(SPEED)</code> \u2013 SPEED je rychlost pohybu v milimetrech za vte\u0159inu, na Rob\u016ftkovi v rozsahu od -1200 do 1200 (z\u00e1porn\u00e9 \u010d\u00edslo znamen\u00e1 j\u00edzdu dozadu, s v\u00fdjimkou pohybu na vzd\u00e1lenost, kde se couv\u00e1n\u00ed zad\u00e1v\u00e1 z\u00e1pornou vzd\u00e1lenost\u00ed).</li> <li><code>robutek.setRamp(ACCEL)</code> \u2013 ACCEL je \u010d\u00edslo ud\u00e1vaj\u00edc\u00ed zrychlen\u00ed Rob\u016ftka v mm/s\u00b2. V p\u0159\u00edpad\u011b, \u017ee je rovna nule, je zrychlen\u00ed okam\u017eit\u00e9.</li> <li><code>await robutek.move(CURVE, { distance: DISTANCE })</code><ul> <li>CURVE je desetinn\u00e9 \u010d\u00edslo od -1 do 1, kdy<ul> <li>-1 je znamen\u00e1 ot\u00e1\u010den\u00ed na m\u00edst\u011b doleva,</li> <li>0 je rovn\u011b a</li> <li>1 je ot\u00e1\u010den\u00ed doprava.</li> <li>\u010c\u00edsla mezi zna\u010di j\u00edzdu po oblouku s r\u016fzn\u00fdm polom\u011brem.</li> </ul> </li> <li>DISTANCE zna\u010d\u00ed ujetou vzd\u00e1lenost v milimetrech</li> </ul> </li> <li><code>await robutek.move(CURVE, { time: TIME })</code> \u2013 TIME je \u010das v milisekund\u00e1ch, po kter\u00fd m\u00e1 robot jet.</li> <li><code>robutek.move(CURVE)</code> \u2013 Rob\u016ftek pojede neomezen\u011b dlouho, dokud ho nezastav\u00edme pomoc\u00ed p\u0159\u00edkazu <code>robutek.stop()</code>.</li> </ul> <p>Zad\u00e1v\u00e1n\u00ed parametr\u016f rychlosti a rampy nen\u00ed pot\u0159eba opakovat p\u0159i ka\u017ed\u00e9m pohybu - knihovna si hodnotu pamatuje a p\u0159i dal\u0161\u00edm vol\u00e1n\u00ed funkce <code>move</code> ji pou\u017eije.</p> <p>Rychlost je mo\u017en\u00e9 m\u011bnit i b\u011bhem j\u00edzdy, pomoc\u00ed p\u0159\u00edkazu <code>robutek.setSpeed</code>. P\u0159\u00edkazem <code>robutek.move(CURVE)</code> je tak\u00e9 mo\u017en\u00e9 m\u011bnit sm\u011br j\u00edzdy, ani\u017e by bylo nutn\u00e9 zastavovat Rob\u016ftka.</p>"},{"location":"robot/lekce4/#priklad","title":"P\u0159\u00edklad","text":"<p>Operace s motorky p\u00ed\u0161eme do asynchron\u00edch funkc\u00ed, \u010dasto do funkce main()</p> <pre><code>async function main() {\n  robutek.setSpeed(100); // Nastav rychlost na 100 mm/s\n  robutek.setRamp(2000); // Nastav zrychlen\u00ed na 2000 mm/s^2\n  await robutek.move(0, { distance: 100 }); // Uje\u010f 100 mm == 10 cm\n}\n\nmain().catch(console.error);\n</code></pre> <p>\u00dakol: Zkus p\u0159idat k\u00f3d, aby Rob\u016ftek dojel zase zp\u00e1tky na stejn\u00e9 m\u00edsto</p> \u0158e\u0161en\u00ed <pre><code>await robutek.move(0, { distance: -100 }) // Uje\u010f -100 mm == -10 cm\n</code></pre>"},{"location":"robot/lekce4/#otaceni","title":"Ot\u00e1\u010den\u00ed","text":"<p>Na ot\u00e1\u010den\u00ed m\u00e1 Rob\u016ftek p\u0159ipravenou funkci:</p> <ul> <li><code>await robutek.rotate(ANGLE)</code> - Oto\u010d\u00ed Rob\u016ftka o ANGLE stup\u0148\u016f rychlost\u00ed nastavenou p\u0159es <code>robutek.setSpeed</code>. M\u016f\u017ee b\u00fdt z\u00e1porn\u00e9 \u010d\u00edslo.</li> </ul>"},{"location":"robot/lekce4/#ukol","title":"\u00dakol","text":"<p>Napi\u0161 program tak, aby Rob\u016ftek popojel 10cm dop\u0159edu, oto\u010dil se \u010delem vzad (180 stup\u0148\u016f), a popojel zp\u00e1tky na p\u016fvodn\u00ed m\u00edsto.</p> \u0158e\u0161en\u00ed <pre><code>import { createRobutek } from \"./libs/robutek.js\";\nconst robutek = createRobutek(\"V2\");\n\nasync function main() {\n    // Tady bude k\u00f3d na ovl\u00e1d\u00e1n\u00ed motor\u016f\n\n    robutek.setSpeed(100);  // Nastav rychlost na 100 mm/s\n    robutek.setRamp(2000);  // Nastav zrychlen\u00ed na 2000 mm/s^2\n\n    await robutek.move(0, { distance: 100 });  // Uje\u010f 10 cm\n\n    await robutek.rotate(180);  // Oto\u010d se o 180 stup\u0148\u016f\n\n    await robutek.move(0, { distance: 100 });  // Uje\u010f 10 cm\n}\n\nmain().catch(console.error);\n</code></pre>"},{"location":"robot/lekce4/#tvary","title":"Tvary","text":"<p>Kombinov\u00e1n\u00edm <code>robutek.move</code> a <code>robutek.rotate</code> m\u016f\u017ee\u0161 s Rob\u016ftkem \"vyjezdit\" r\u016fzn\u00e9 tvary. Tento program s robotkem vyjezd\u00ed \u010dtverec.</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\";\nconst robutek = createRobutek(\"V2\");\n\nasync function main() {\n    // Tady bude k\u00f3d na ovl\u00e1d\u00e1n\u00ed motor\u016f\n\n    robutek.setSpeed(100);  // Nastav rychlost na 100 mm/s\n\n    await robutek.move(0, { distance: 300 });  // Uje\u010f 30 cm\n    await robutek.rotate(90);\n    await robutek.move(0, { distance: 300 });\n    await robutek.rotate(90);\n    await robutek.move(0, { distance: 300 });\n    await robutek.rotate(90);\n    await robutek.move(0, { distance: 300 });\n    await robutek.rotate(90);\n}\n\nmain().catch(console.error);\n</code></pre>"},{"location":"robot/lekce4/#vystupni-ukol-v1","title":"V\u00fdstupn\u00ed \u00fakol V1","text":"<p>Napi\u0161 program tak, aby robotek vyjezdil \u0161esti\u00faheln\u00edk.</p>"},{"location":"robot/lekce4/#vystupni-ukol-v2","title":"V\u00fdstupn\u00ed \u00fakol V2","text":"<p>Napi\u0161 program tak, aby robot vyjezdil kruh.</p>"},{"location":"robot/lekce5/","title":"Lekce 5 - Servo (Kreslen\u00ed tu\u017ekou)","text":"<p>Abychom mohli pou\u017e\u00edvat servo, mus\u00edme ho inicializovat. K tomu slou\u017e\u00ed p\u0159\u00edkaz <code>const servo = new Servo(SERVO_PIN, 1, 4)</code>. Parametr <code>SERVO_PIN</code> specifikuje, na kter\u00fd pin je servo p\u0159ipojeno.</p> <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\";\n\nconst robutek = createRobutek(\"V2\");\n\n// robutek.Pins.Servo2 je pin 38\nconst servo = new Servo(robutek.Pins.Servo2, 1, 4);\n</code></pre> <p>Na nastaven\u00ed pozice serva pou\u017e\u00edv\u00e1me funkci <code>write(POSITION)</code>. Parametr <code>POSITION</code> je \u010d\u00edslo od 0 do 1023. Specifikuje \u00fahel, na kter\u00fd se m\u00e1 servo oto\u010dit.</p> <pre><code>servo.write(0); // 0\u00b0\nservo.write(512); // 90\u00b0\nservo.write(1023); // 180\u00b0\n</code></pre> <p>Pro konverzi \u00fahlu na \u010d\u00edslo mus\u00edme \u00fahel vyn\u00e1sobit 1024 a vyd\u011blit 180</p>"},{"location":"robot/lekce5/#kresleni-tuzkou","title":"Kreslen\u00ed tu\u017ekou","text":"<p>T\u00edm, \u017ee zved\u00e1me nebo pokl\u00e1d\u00e1me servo, m\u016f\u017eeme ovl\u00e1dat p\u0159ipevn\u011bnou tu\u017eku. Abychom si nemuseli pamatovat konkr\u00e9tn\u00ed hodnoty pro zved\u00e1n\u00ed tu\u017eky, Rob\u016ftek m\u00e1 3 p\u0159eddefinovan\u00e9 konstaty pro ovl\u00e1d\u00e1n\u00ed: <code>Up</code>, <code>Down</code> a <code>Unload</code>. Pokud bychom do n\u011bj d\u00e1vali r\u016fzn\u00e9 druhy tu\u017eek, m\u016f\u017eeme si samoz\u0159ejm\u011b nadefinovat vlastn\u00ed.</p> <p>Aby ovl\u00e1dac\u00ed konstanty fungovaly, mus\u00ed b\u00fdt paci\u010dka nasazena ve spr\u00e1vn\u00e9 pozici. Proto mus\u00edme servo programem oto\u010dit na 0\u00b0 a paci\u010dku nasadit tak, aby sm\u011b\u0159ovala p\u0159\u00edmo vzh\u016fru.</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\";\nimport { Servo } from \"./libs/servo.js\";\n\nconst robutek = createRobutek(\"V2\");\nconst servo = new Servo(robutek.Pins.Servo2, 1, 4);\n\nservo.write(0);\n</code></pre> <p></p> <p>Jakmile m\u00e1me paci\u010dku spr\u00e1vn\u011b nastavenou, m\u016f\u017eeme na ni nasadit fixu.</p> <p></p> <p>Te\u010f u\u017e m\u00e1me v\u0161echno p\u0159ipraveno, tak\u017ee m\u016f\u017eeme kreslit.</p> <p>Na nastaven\u00ed pozice tu\u017eky zase pou\u017eijeme funkci <code>write(POSITION)</code>. M\u00edsto \u010d\u00edsla <code>0-1023</code> ale do parametru <code>POSITION</code> vlo\u017e\u00edme jednu z konstant <code>Up</code>, <code>Down</code> a <code>Unload</code>.</p> <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\";\nconst robutek = createRobutek(\"V2\");\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4); // robutek.Pins.Servo2 je pin 38\n\n// Za\u010dne kreslit\npen.write(robutek.PenPos.Down);\n\n// P\u0159estane kreslit\npen.write(robutek.PenPos.Up);\n\n// Vyt\u00e1hne tu\u017eku\npen.write(robutek.PenPos.Unload);\n</code></pre> <p>Neo\u010dek\u00e1van\u00fd v\u00fdsledek</p> <p>Pokud tento program spust\u00edme, zjist\u00edme, \u017ee se provede pouze posledn\u00ed <code>write</code>. Program toti\u017e ne\u010dek\u00e1 na dokon\u010den\u00ed pohybu, ale p\u0159\u00edkazy po\u0161le okam\u017eit\u011b po sob\u011b. Servo pak provede pouze posledn\u00ed p\u0159ijat\u00fd p\u0159\u00edkaz, z na\u0161eho pohledu tedy pohyb na pozici <code>Unload</code>. V b\u011b\u017en\u00e9m programu to v\u0161ak nebude probl\u00e9m, jeliko\u017e mezi p\u0159\u00edkazy write budeme prov\u00e1d\u011bt i jin\u00e9 p\u0159\u00edkazy, jako t\u0159eba p\u0159\u00edkaz <code>move</code>, u kter\u00fdch program \u010dek\u00e1 na dokon\u010den\u00ed.</p>"},{"location":"robot/lekce5/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Vytvo\u0159me program, kter\u00fd p\u0159i zm\u00e1\u010dknut\u00ed tla\u010d\u00edtka zasune pero a druh\u00e9 tla\u010d\u00edtko, kter\u00e9 ho vysune.</p> \u0158e\u0161en\u00ed <pre><code>import { Servo } from \"./libs/servo.js\";\nimport * as gpio from \"gpio\";\nimport { createRobutek } from \"./libs/robutek.js\";\n\nconst robutek = createRobutek(\"V2\");\n\ngpio.pinMode(robutek.Pins.ButtonLeft, gpio.PinMode.INPUT);\ngpio.pinMode(robutek.Pins.ButtonRight, gpio.PinMode.INPUT);\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4);\n\ngpio.on(\"falling\", robutek.Pins.ButtonLeft, () =&gt; {\n    pen.write(robutek.PenPos.Down);\n});\n\ngpio.on(\"falling\", robutek.Pins.ButtonRight, () =&gt; {\n    pen.write(robutek.PenPos.Up);\n});\n</code></pre>"},{"location":"robot/lekce5/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Zkombinujme poznatky z lekce 4 s touto a vytvo\u0159me program, kter\u00fd po stisku tla\u010d\u00edtka nakresl\u00ed fixou na pap\u00edr \u010dtverec.</p> \u0158e\u0161en\u00ed <pre><code>import { Servo } from \"./libs/servo.js\"\nimport * as gpio from \"gpio\"\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\n\nconst LBTN_PIN = 2;\nconst RBTN_PIN = 0;\n\ngpio.pinMode(LBTN_PIN, gpio.PinMode.INPUT);\ngpio.pinMode(RBTN_PIN, gpio.PinMode.INPUT);\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4);\n\ngpio.on(\"falling\", LBTN_PIN, async () =&gt; {\n    pen.write(robutek.PenPos.Down); // fixa dol\u016f\n\n    robutek.setSpeed(100) // Nastav rychlost na 100\n\n    await robutek.move(0, { distance: 300 }) // Uje\u010f 30 cm\n    await robutek.rotate(90)\n    await robutek.move(0, { distance: 300 })\n    await robutek.rotate(90)\n    await robutek.move(0, { distance: 300 })\n    await robutek.rotate(90)\n    await robutek.move(0, { distance: 300 })\n    await robutek.rotate(90)\n\n    pen.write(robutek.PenPos.Up); // fixa nahoru\n});\n</code></pre>"},{"location":"robot/lekce5/#vystupni-ukol-v1","title":"V\u00fdstupn\u00ed ukol V1","text":"<p>P\u0159 stisknut\u00ed jednoho tla\u010d\u00edtka vykresl\u00ed Rob\u016ftek kruh, p\u0159i stisknut\u00ed druh\u00e9ho vykresl\u00ed troj\u00faheln\u00edk.</p>"},{"location":"robot/lekce5/#vystupni-ukol-v2","title":"V\u00fdstupn\u00ed \u00fakol V2","text":"<p>P\u0159i stisknut\u00ed jednoho tla\u010d\u00edtka vykresl\u00ed Rob\u016ftek prvn\u00ed p\u00edsmeno na\u0161eho jm\u00e9na, p\u0159i stisku druh\u00e9ho tla\u010d\u00edtka prvn\u00ed p\u00edsmeno na\u0161eho p\u0159\u00edjmen\u00ed.</p>"},{"location":"robot/lekce6/","title":"Lekce 6 - Cykly","text":"<p>V t\u00e9to lekci si p\u0159edstav\u00edme cykly. Ty n\u00e1m umo\u017e\u0148uj\u00ed opakovat k\u00f3d podle n\u011bjak\u00e9ho pravidla. Zat\u00edm je vyu\u017eijeme pro komunikaci s robotem, v n\u00e1sleduj\u00edc\u00ed lekci si uk\u00e1\u017eeme jejich pou\u017eit\u00ed p\u0159i \u0159\u00edzen\u00ed robota.</p> <p>M\u00e1me prim\u00e1rn\u011b dva typy cykl\u016f:</p> <ul> <li><code>for()</code> vyu\u017eijeme, kdy\u017e v\u00edme po\u010det opakov\u00e1n\u00ed</li> <li><code>while()</code> vyu\u017eijeme, kdy\u017e nev\u00edme po\u010det opakov\u00e1n\u00ed</li> </ul>"},{"location":"robot/lekce6/#cyklus-for","title":"Cyklus for","text":"<p>Cyklus <code>for</code> m\u016f\u017eeme napsat takto:</p> <pre><code>for (let i: number = 0; i &lt; 3; i++) {\n  // opakovan\u00fd k\u00f3d\n}\n</code></pre> <p>Do kulat\u00fdch z\u00e1vorek p\u00ed\u0161eme t\u0159i v\u011bci:</p> <ul> <li>\u0159\u00edd\u00edc\u00ed prom\u011bnnou s jej\u00ed v\u00fdchoz\u00ed hodnotou</li> <li>v\u00fdraz, kter\u00fd ur\u010duje po\u010det opakov\u00e1n\u00ed</li> <li>nakonec jednoduchou operaci, kter\u00e1 se provede p\u0159i ka\u017ed\u00e9m pr\u016fchodu cyklem jako posledn\u00ed operace</li> </ul> <p>Tedy vytv\u00e1\u0159\u00edme prom\u011bnnou <code>i</code> s v\u00fdchoz\u00ed hodnotou <code>0</code>, kter\u00e1 bude existovat po dobu vykon\u00e1v\u00e1n\u00ed cyklu. A\u010dkoliv v b\u011b\u017en\u00e9m \u017eivot\u011b po\u010d\u00edt\u00e1me v\u011bci od <code>1</code>, v informatice \u010dast\u011bji za\u010d\u00edn\u00e1me <code>0</code>. M\u016f\u017ee zde v\u0161ak b\u00fdt cokoliv.</p> <p>N\u00e1sledn\u011b definujeme v\u00fdraz <code>i &lt; 3</code>, kter\u00fd ur\u010duje, za jak\u00fdch podm\u00ednek m\u00e1 cyklus b\u011b\u017eet.</p> <p>Na konci cyklu zv\u00fd\u0161\u00edme <code>i</code> o jedna.</p> <p>P\u0159i prvn\u00edm pr\u016fchodu bude tedy <code>i = 0</code>, p\u0159i druh\u00e9m <code>i = 1</code>, a p\u0159i t\u0159et\u00edm <code>i = 2</code>. P\u0159i dal\u0161\u00edm zvy\u0161ov\u00e1n\u00ed by platilo <code>i = 3</code>, tam ale u\u017e nebude pravdiv\u00fd v\u00fdraz <code>i &lt; 3</code> a cyklus se tedy ukon\u010d\u00ed.</p> <p>Do slo\u017een\u00fdch z\u00e1vorek p\u00ed\u0161eme vykon\u00e1van\u00fd k\u00f3d, kter\u00fd se v tomto p\u0159\u00edpad\u011b vykon\u00e1 3-kr\u00e1t.</p>"},{"location":"robot/lekce6/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Ve spojen\u00ed se znalostmi z minul\u00fdch lekc\u00ed napi\u0161te program, kter\u00fd po stisku tla\u010d\u00edtka vyp\u00ed\u0161e \u010d\u00edsla 0 a\u017e 9 (pomoc\u00ed <code>console.log(CISLO)</code>), v\u017edy na samostatn\u00fd \u0159\u00e1dek. Vyu\u017eijte cyklus.</p> \u0158e\u0161en\u00ed <pre><code>import * as gpio from \"gpio\";\nimport { createRobutek } from \"./libs/robutek\";\n\nconst robutek = createRobutek(\"V2\")\n\ngpio.pinMode(robutek.Pins.ButtonRight, gpio.PinMode.INPUT); // nastav\u00ed pin 0 jako vstup\n\ngpio.on(\"falling\", robutek.Pins.ButtonRight, () =&gt; { // ud\u00e1lost, kter\u00e1 prob\u011bhne p\u0159i stisknut\u00ed tla\u010d\u00edtka p\u0159ipojen\u00e9ho na pin 0\n    console.log(\"Stisknuto, za\u010d\u00edn\u00e1me po\u010d\u00edtat\");\n    for (let i: number = 0; i &lt; 10; i++) { // vyp\u00ed\u0161eme \u010d\u00edsla od 0 do 9\n        console.log(i);\n    }\n    console.log(\"\"); // odd\u011bl\u00edme jednotliv\u00e9 stisky\n});\n</code></pre>"},{"location":"robot/lekce6/#cyklus-while","title":"Cyklus while","text":"<p>Pokud nev\u00edme, kolikr\u00e1t se m\u00e1 cyklus opakovat, pou\u017eijeme m\u00edsto cyklu <code>for</code> cyklus <code>while</code>.</p> <p>Do kulat\u00fdch z\u00e1vorek te\u010f p\u00ed\u0161eme jen v\u00fdraz, kter\u00fd ur\u010duje, jestli se cyklus vykon\u00e1 znovu, nebo ne. Funguje prakticky jako podm\u00ednka, kter\u00e1 se opakuje. K\u00f3d, kter\u00fd se m\u00e1 vykon\u00e1vat, dokud plat\u00ed podm\u00ednka, m\u016f\u017ee vypadat t\u0159eba takto:</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\";\nimport * as gpio from \"gpio\";\n\nconst robutek = createRobutek(\"V2\");\n\nconsole.log(\"START\");\ngpio.pinMode(robutek.Pins.ButtonLeft, gpio.PinMode.INPUT);\n\nwhile (gpio.read(robutek.Pins.ButtonLeft) == 1) {\n  // cyklus kontroluje, zdali je tla\u010d\u00edtko zm\u00e1\u010dknut\u00e9 (gpio.read() vrac\u00ed 1, pokud\n  // je tla\u010d\u00edtko zm\u00e1\u010dknut\u00e9), dokud nen\u00ed zm\u00e1\u010dknut\u00e9, vypisuje \"NOT PRESSED\"\n  console.log(\"NOT PRESSED\");\n  // await sleep() \u010dek\u00e1 100ms p\u0159ed dal\u0161\u00edm pr\u016fchodem cyklu,\n  // bez n\u011bj by se p\u0159\u00edli\u0161 rychle vypisovalo \"NOT PRESSED\"\n  // (ve skute\u010dnosti ne, Jaculus by takov\u00fd program automaticky ukon\u010dil)\n  await sleep(100);\n}\nconsole.log(\"END\");\n</code></pre>"},{"location":"robot/lekce6/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Nyn\u00ed nap\u00ed\u0161eme program, kter\u00fd do konzole vyp\u00ed\u0161e \u010dtverec slo\u017een\u00fd z hv\u011bzdi\u010dek (znaku <code>*</code>). Mus\u00edme si uv\u011bdomit, \u017ee cykly mohou b\u00fdt vlo\u017eeny do sebe. Zamyseleme se, kter\u00fd z cykl\u016f je pro tento \u00fakol vhodn\u00fd. V\u00fdsledek by m\u011bl vypadat p\u0159ibli\u017en\u011b takto.</p> <pre><code>***\n***\n***\n</code></pre> <p>Velikost tohoto \u010dtverce ur\u010dete pomoc\u00ed konstanty, jej\u00ed\u017e hodnota ud\u00e1v\u00e1 po\u010det \u0159\u00e1dku a sloupc\u016f.</p> <p>Pokud nechceme za vypsan\u00fdmi znaky nov\u00fd \u0159\u00e1dek, m\u00edsto zn\u00e1m\u00e9ho <code>console.log()</code> pou\u017eijeme <code>stdout.write</code> ale pot\u0159ebujeme importovat novou knihovnu:  <pre><code>import { stdout } from \"stdio\";\n</code></pre></p> \u0158e\u0161en\u00ed <pre><code>import { stdout } from \"stdio\";\n\nconst SQUARE_SIZE: number = 3; // velikost \u010dtverce\n\nconsole.log(\"Vykresl\u00edme \u010dtverec o velikosti \" + SQUARE_SIZE + \"x\" + SQUARE_SIZE);\n\n// projdeme v\u0161echny \u0159\u00e1dky\nfor(let row: number = 0; row &lt; SQUARE_SIZE; row++){\n    // projdeme v\u0161echny sloupce\n    for(let col: number = 0; col &lt; SQUARE_SIZE; col++){\n        stdout.write(\"\\*\"); // vyp\u00ed\u0161eme hv\u011bzdi\u010dku\n    }\n    stdout.write(\"\\n\"); // p\u0159esuneme se na dal\u0161\u00ed \u0159\u00e1dek\n}\n</code></pre>"},{"location":"robot/lekce6/#zadani-vystupniho-ukolu-v1","title":"Zad\u00e1n\u00ed v\u00fdstupn\u00edho \u00fakolu V1","text":"<p>Napi\u0161te program, kter\u00fd kter\u00fd vyp\u00ed\u0161e \u010d\u00edsla od 9 do 0. Zad\u00e1n\u00ed je velmi podobn\u00e9 jako zad\u00e1n\u00ed A, jen jdou \u010d\u00edsla sestupn\u011b nam\u00edsto vzestupn\u011b. Nekop\u00edrujte jen dodan\u00fd k\u00f3d, ale zkuste si jej napsat sami.</p>"},{"location":"robot/lekce6/#zadani-vystupniho-ukolu-v2","title":"Zad\u00e1n\u00ed v\u00fdstupn\u00edho \u00fakolu V2","text":"<p>Napi\u0161te program, kter\u00fd bude periodicky blikat ledkou - 500ms sv\u00edt\u00ed, 500ms nesvit\u00ed. Nepou\u017e\u00edvejte <code>setInterval</code>.</p>"},{"location":"robot/lekce6/#zadani-vystupniho-ukolu-v3","title":"Zad\u00e1n\u00ed v\u00fdstupn\u00edho \u00fakolu V3","text":"<p>V\u00e1\u0161 posledn\u00ed \u00fakol je podobn\u00fd zad\u00e1n\u00ed B, budete do konzole vykreslovat geometrick\u00fd obrazec, akor\u00e1t tentokr\u00e1t to bude nebude \u010dtverec, ale troj\u00faheln\u00edk jako tenhle:</p> <pre><code>  *\n ***\n*****\n</code></pre> <p>Je d\u016fle\u017eit\u00e9 se zamyslet nad po\u010dty mezer a hv\u011bzdi\u010dek v ka\u017ed\u00e9m \u0159\u00e1dku a jak se m\u011bn\u00ed. Zkuste si jejich po\u010dty vypsat \u0159\u00e1dek po \u0159\u00e1dku, navede v\u00e1s to k \u0159e\u0161en\u00ed p\u0159\u00edkladu.</p>"},{"location":"robot/lekce7/","title":"Lekce 7 - Funkce","text":"<p>Z p\u0159edchoz\u00edch lekc\u00ed u\u017e um\u00edme kreslit jednoduch\u00e9 tvary. Co kdy\u017e jich v\u0161ak chceme nakreslit v\u00edce?</p> <p>Pokud chceme nakreslit 2 \u010dtverce vedle sebe, m\u016f\u017eeme zkop\u00edrovat k\u00f3d a mezit\u00edm se posunout:</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\";\nimport { Servo } from \"./libs/servo.js\";\n\nconst robutek = createRobutek(\"V2\");\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\npen.write(robutek.PenPos.Down); // d\u00e1me dol\u016f tu\u017eku\n\n// chov\u00e1n\u00ed opakujeme 4x, pro ka\u017edou st\u011bnu \u010dtverce\nfor (let i: number = 0; i &lt; 4; i++) {\n    await robutek.move(0, { distance: 100 }); // posun dop\u0159edu o 10 cm\n    await robutek.rotate(90); // rotace doprava o 90 stup\u0148\u016f\n}\npen.write(robutek.PenPos.Up); // d\u00e1me nahoru\n\nawait robutek.move(0, { distance: 300 });\n\npen.write(robutek.PenPos.Down);\nfor (let i: number = 0; i &lt; 4; i++) {\n    await robutek.move(0, { distance: 100 });\n    await robutek.rotate(90);\n}\npen.write(robutek.PenPos.Up);\n</code></pre> <p>To se je\u0161t\u011b d\u00e1 zvl\u00e1dnout, ale pokud bychom to ud\u011blali je\u0161t\u011b p\u00e1rkr\u00e1t, k\u00f3d by se st\u00e1val h\u016f\u0159e \u010diteln\u00fdm. Pokud bychom se pak rozhodli zm\u011bnit nap\u0159. velikost nakreslen\u00fdch \u010dtverc\u016f, museli bychom to m\u011bnit v ka\u017ed\u00e9 kopii tohoto k\u00f3du, co\u017e zabere \u010das, a je v tom jednoduch\u00e9 ud\u011blat chybu.</p> <p>M\u016f\u017eeme si pomoct t\u00edm, co u\u017e zn\u00e1me: vno\u0159en\u00fdm <code>for</code> cyklem. Pokud chceme nakreslit nap\u0159. 4 \u010dtverce za sebou, m\u016f\u017eeme to napsat takto:</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\";\nimport { Servo } from \"./libs/servo.js\";\n\nconst robutek = createRobutek(\"V2\");\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\nfor (let square: number = 0; square &lt; 4; square++) {\n    pen.write(robutek.PenPos.Down);\n    for (let i: number = 0; i &lt; 4; i++) {\n        await robutek.move(0, { distance: 100 });\n        await robutek.rotate(90);\n    }\n\n    pen.write(robutek.PenPos.Up);\n    await robutek.move(0, { distance: 150 });\n}\n</code></pre> <p>Co kdy\u017e se v\u0161ak chceme pohybovat mezi \u010dtverci r\u016fzn\u011b daleko, nebo m\u00edt ka\u017ed\u00fd jinak velk\u00fd? Odpov\u011bd\u00ed na tuto ot\u00e1zku jsou funkce.</p>"},{"location":"robot/lekce7/#funkce","title":"Funkce","text":"<p>Funkce je pojmenovan\u00fd kus k\u00f3du. Tento kus k\u00f3du jednou nap\u00ed\u0161eme a pot\u00e9 ho ze zbytku programu m\u016f\u017eeme libovoln\u011b volat (spou\u0161t\u011bt). Celkov\u011b tak zp\u0159ehled\u0148uje programy a d\u011bl\u00e1 je roz\u0161\u00ed\u0159iteln\u011bj\u0161\u00ed.</p> <p>V programu rozli\u0161ujeme mezi definic\u00ed funkce a jej\u00edm vol\u00e1n\u00edm. Definice vypad\u00e1 n\u00e1sledovn\u011b:</p> <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\";\nconst robutek = createRobutek(\"V2\");\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\nasync function draw_square(): Promise&lt;void&gt; {\n    pen.write(robutek.PenPos.Down);\n    for (let i: number = 0; i &lt; 4; i++) {\n        await robutek.move(0, { distance: 100 });\n        await robutek.rotate(90);\n    }\n    pen.write(robutek.PenPos.Up);\n}\n</code></pre> <p>Definice funkce se skl\u00e1d\u00e1 z:</p> <ul> <li>kl\u00ed\u010dov\u00e9ho slova <code>function</code></li> <li>jm\u00e9na funkce</li> <li>seznamu argument\u016f <code>(ARGUMENTS...)</code></li> <li>n\u00e1vratov\u00e9ho typu</li> <li>t\u011bla funkce (ve slo\u017een\u00fdch z\u00e1vork\u00e1ch)</li> </ul> <p>Proto\u017ee v t\u011ble funkce pou\u017e\u00edv\u00e1me kl\u00ed\u010dov\u00e9 slovo <code>await</code>, je pot\u0159eba aby funkce byla ozna\u010dena jako <code>async</code>. Znamen\u00e1 to, \u017ee je tzv. asynchronn\u00ed a b\u011bhem kon\u00e1n\u00ed se mohou plnit dal\u0161\u00ed \u00fakoly. N\u00e1vratov\u00fd typ asynchron\u00edch funkc\u00ed mus\u00ed b\u00fdt obalen do <code>Promis&lt;RETURN_TYPE&gt;</code>, kde <code>RETURN_TYPE</code> je typ, kter\u00fd chceme, aby funkce vracela. Datov\u00fd typ <code>void</code> \u0159\u00edk\u00e1 programu, \u017ee funkce nem\u00e1 nic vracet.</p> <p>Kl\u00ed\u010dov\u00e9 slovo <code>await</code> \u0159\u00edk\u00e1 programu, \u017ee m\u00e1 po\u010dkat na vykon\u00e1n\u00ed dan\u00e9 funkce.</p> <p>K argument\u016fm a n\u00e1vratov\u00fdm hodnot\u00e1m se dostaneme pozd\u011bji, zat\u00edm je pro n\u00e1s zaj\u00edmav\u00e9 jednodu\u0161e to, \u017ee jsme si n\u011bjak pojmenovali kus k\u00f3du.</p> <p>Kdy\u017e spust\u00edme tento k\u00f3d, nic se nestane. Chyb\u00ed n\u00e1m toti\u017e funkci zavolat. Vol\u00e1n\u00ed funkce provedeme jej\u00edm jm\u00e9nem, n\u00e1sledovan\u00fdm z\u00e1vorkami. Pokud je funkce asynchronn\u00ed a chceme \u010dekat na jej\u00ed vykon\u00e1n\u00ed, ne\u017e za\u010dneme prov\u00e1d\u011bt dal\u0161\u00ed \u00fakol, p\u0159ed jej\u00ed vol\u00e1n\u00ed d\u00e1me kl\u00ed\u010dov\u00e9 slovo <code>await</code>.</p> <p>Nakreslen\u00ed dvou \u010dtverc\u016f m\u016f\u017ee tedy vypadat takto:</p> <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\";\n\nconst robutek = createRobutek(\"V2\");\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\nasync function draw_square(): Promise&lt;void&gt; {\n    pen.write(robutek.PenPos.Down);\n    for (let i: number = 0; i &lt; 4; i++) {\n        await robutek.move(0, { distance: 100 });\n        await robutek.rotate(90);\n    }\n    pen.write(robutek.PenPos.Up);\n}\n\nawait draw_square();\nawait robutek.move(0, { distance: 150 });\nawait draw_square();\n</code></pre> <p>Program n\u00e1m nakresl\u00ed 2 \u010dtverce, a p\u0159inesli jsme si t\u00edm n\u00e1sleduj\u00edc\u00ed v\u00fdhody:</p> <ul> <li>ze sekvence \"nakresli \u010dtverec\", \"pohni se\", \"nakresli \u010dtverec\" je na prvn\u00ed pohled zjevn\u00e9, co se bude d\u00edt, a \u010dten\u00e1\u0159 programu nemus\u00ed analyzovat detaily toho, jak p\u0159esn\u011b kreslen\u00ed ka\u017ed\u00e9ho \u010dtverce prob\u00edh\u00e1</li> <li>kdy\u017e se rozhodneme, \u017ee \u010dtverce maj\u00ed m\u00edt jinou velikost, sta\u010d\u00ed ud\u011blat zm\u011bnu na jednom m\u00edst\u011b</li> </ul> <p>Pozor na <code>async</code></p> <p>Nezapom\u00ednejte p\u0159i vol\u00e1n\u00ed funkc\u00ed obsahuj\u00edc\u00edch pohyb na <code>async</code> Pokud bychom v p\u0159edchoz\u00edm p\u0159\u00edkladu funkce volali bez <code>async</code>, p\u0159\u00edkazy by se mezi se mezi sebou \"pobily\" a robot by ud\u011blal ve v\u00fdsledku nesmysln\u00fd pohyb.</p> <p>Na tak mal\u00e9m p\u0159\u00edkladu to mo\u017en\u00e1 nen\u00ed zjevn\u00e9, ale i <code>motors.move()</code>, kter\u00e9 jsme pou\u017e\u00edvali dote\u010f, nen\u00ed nic jin\u00e9ho ne\u017e funkce, kter\u00e1 v sob\u011b skr\u00fdv\u00e1 n\u011bjak\u00fd slo\u017eit\u011bj\u0161\u00ed v\u00fdpo\u010det. Funkce tedy m\u016f\u017eeme propojovat r\u016fzn\u00fdmi zp\u016fsoby, a tvo\u0159it tak programy, kter\u00e9 toho d\u011blaj\u00ed \u010d\u00edm d\u00e1l v\u00edce.</p> <p>Program v\u0161ak ne\u0159e\u0161\u00ed p\u0159\u00edpad, kdy chceme aby ka\u017ed\u00fd \u010dtverec m\u011bl jinou velikost. V tu chv\u00edli n\u00e1m pom\u016f\u017eou argumenty, kter\u00e9 do funkce um\u00edme p\u0159edat. Jde o prom\u011bnn\u00e9, kter\u00e9 existuj\u00ed v dan\u00e9 funkci, a my jim p\u0159i vol\u00e1n\u00ed funkce p\u0159i\u0159ad\u00edme konkr\u00e9tn\u00ed hodnotu.</p> <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\";\n\nconst robutek = createRobutek(\"V2\");\n\nconst pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\nasync function draw_square(size: number): Promise&lt;void&gt; {\n    pen.write(robutek.PenPos.Down);\n    for (let i: number = 0; i &lt; 4; i++) {\n        await robutek.move(0, { distance: size });\n        await robutek.rotate(90);\n    }\n    pen.write(robutek.PenPos.Up);\n}\n\nawait draw_square(100);\nawait robutek.move(0, { distance: 150 });\nawait draw_square(150);\n</code></pre> <p>Ve funkci pou\u017e\u00edv\u00e1me argument <code>size</code> zna\u010d\u00edc\u00ed velikost \u010dtverce, kter\u00fd m\u016f\u017eeme p\u0159i vol\u00e1n\u00ed nastavit na jakoukoliv hodnotu. Program tedy vykresl\u00ed jeden \u010dtverec o d\u00e9lce strany 100mm, popojede, a vykresl\u00ed \u010dtverec o d\u00e9lce strany 150mm.</p>"},{"location":"robot/lekce7/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Vytvo\u0159te funkci, kter\u00e1 bere 2 argumenty, a nakresl\u00ed obd\u00e9ln\u00edk dan\u00fdch rozm\u011br\u016f. Zkuste ji zavolat s r\u00fazn\u00fdmi argumenty.</p> \u0158e\u0161en\u00ed <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\";\n\nconst robutek = createRobutek(\"V2\");\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\nasync function draw_rectangle(sizeA: number, sizeB: number): Promise&lt;void&gt; {\n    pen.write(robutek.PenPos.Down);\n    for (let i: number = 0; i &lt; 2; i++) {\n        await robutek.move(0, { distance: sizeA });\n        await robutek.rotate(90);\n        await robutek.move(0, { distance: sizeB });\n        await robutek.rotate(90);\n    }\n    pen.write(robutek.PenPos.Up);\n}\n\nawait draw_rectangle(50, 200);\nawait draw_rectangle(200, 50);\n</code></pre>"},{"location":"robot/lekce7/#vraceni-hodnot","title":"Vracen\u00ed hodnot","text":"<p>Krom\u011b toho, \u017ee funkce m\u016f\u017eou br\u00e1t argumenty, tak je mohou i vracet. To je u\u017eite\u010dn\u00e9 v p\u0159\u00edpad\u011b, \u017ee si chceme do funkce d\u00e1t n\u011bjak\u00fd v\u00fdpo\u010det, a zaj\u00edm\u00e1 n\u00e1s jeho v\u00fdsledek. Hodnotu z funkce vrac\u00edme pomoc\u00ed kl\u00ed\u010dov\u00e9ho slova <code>return</code>.</p> <p>Tato funkce se\u010dte paramatry <code>a</code> a <code>b</code> a vr\u00e1t\u00ed v\u00fdsledek v\u00fdpo\u010dtu</p> <pre><code>function add(a: number, b: number): number {\n    return a + b;\n}\n\nlet cisloA = 5;\nlet cisloB = 9;\n\nlet vysledek = add(cisloA, cisloB);\n\nconsole.log(vysledek); // vyp\u00ed\u0161e 14\n</code></pre> <p>P\u0159\u00edklad pou\u017eit\u00ed:</p> <p>Chceme-li nakreslit pravideln\u00fd n-\u00faheln\u00edk (vzorec pro vnit\u0159n\u00ed \u00fahly je podle wikipedie)</p> \\[(1 - \\frac{2}{n}) * 180\\] <p>kde <code>n</code> je po\u010det stran n-\u00faheln\u00edku.</p> <p>Tento v\u00fdpo\u010det nechceme ps\u00e1t n\u011bkolikr\u00e1t, je proto vhodn\u00e9 jej vy\u010dlenit do funkce, kter\u00e1 vrac\u00ed napo\u010d\u00edtanou hodnotu.</p> <pre><code>function polygonAngle(sides: number): number {\n    return (1 - 2 / sides) * 180;\n}\n\nconsole.log(`\u010dtverec: ${polygonAngle(4)}\u00b0`);\nconsole.log(`\u0161esti\u00faheln\u00edk: ${polygonAngle(6)}\u00b0`);\nconsole.log(`dvan\u00e1cti\u00faheln\u00edk: ${polygonAngle(12)}\u00b0`);\n</code></pre>"},{"location":"robot/lekce7/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Napi\u0161te funkci <code>drawPolygon()</code>, kter\u00e1 vezme 2 argumenty: po\u010det stran a d\u00e9lku ka\u017ed\u00e9 strany. Na v\u00fdpo\u010det \u00fahlu zato\u010den\u00ed pou\u017eijte pomocnou funkci, kter\u00e1 spo\u010d\u00edt\u00e1, jak moc je pot\u0159eba zato\u010dit. S drobnou \u00fapravou m\u016f\u017eete vyu\u017e\u00edt funkci <code>polygonAngle</code> z p\u0159edchoz\u00edho p\u0159\u00edkladu.</p> \u0158e\u0161en\u00ed <pre><code>import { Servo } from \"./libs/servo.js\";\nimport { createRobutek } from \"./libs/robutek.js\";\n\nconst robutek = createRobutek(\"V2\");\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\nrobutek.setSpeed(100);\n\nfunction turnAngle(sides: number): number {\nconst polygonAngle = (1 - 2 / sides) * 180; // velikost \u00falhlu v n-\u00faheln\u00edku\n\n// ode\u010dteme od 180\u00b0, abychom dostali pot\u0159ebn\u00fd \u00fahel oto\u010den\u00ed\nreturn 180 - polygonAngle;\n}\n\nasync function drawPolygon(sides: number, size: number): Promise&lt;void&gt; {\n    pen.write(robutek.PenPos.Down);\n    for (let side: number = 0; side &lt; sides; side++) {\n        await robutek.move(0, { distance: size });\n        await robutek.rotate(turnAngle(sides));\n    }\n    pen.write(robutek.PenPos.Up);\n}\n\nawait drawPolygon(5, 100); // p\u011bti\u00faheln\u00edk\nawait robutek.move(0, { distance: 250 });\nawait drawPolygon(8, 100); // osmi\u00faheln\u00edk\n</code></pre>"},{"location":"robot/lekce7/#vystupni-ukol-v1","title":"V\u00fdstupn\u00ed \u00fakol V1","text":"<p>Napi\u0161te program, kter\u00fd nakresl\u00ed jednoduch\u00fd domek (\u010dtverec s troj\u00faheln\u00edkovou st\u0159echou) se stromkem (jedna linka jako kmen a kru\u017enice jako koruna). Rozd\u011blte kreslen\u00ed mezi funkce <code>drawHouse()</code> a <code>drawTree()</code> s parametrem v\u00fd\u0161ka stromu.</p>"},{"location":"robot/lekce8/","title":"Lekce 8 - \u0158et\u011bzce","text":"<p>Zat\u00edm jsme se za\u0159\u00edzen\u00edm po nahr\u00e1n\u00ed programu komunikovali jednostrann\u011b: pomoc\u00ed <code>console.log()</code> jsme vypisovali r\u016fzn\u00e9 v\u011bci na v\u00fdstup a ten jsme sledovali pomoc\u00ed p\u0159\u00edkazu <code>Monitor</code>.</p> <p>Na to, abychom za b\u011bhu mohli pos\u00edlat informace do za\u0159\u00edzen\u00ed, pot\u0159ebujeme nov\u00fd datov\u00fd typ: \u0159et\u011bzce.</p> <p>\u0158et\u011bzce jsou sekvence znak\u016f a umo\u017e\u0148uj\u00ed n\u00e1m p\u0159ed\u00e1vat informace. Datov\u00fd typ, kter\u00fd dr\u017e\u00ed \u0159et\u011bzec, se jmenuje <code>string</code>.</p> <ul> <li>\u0158et\u011bzec je v\u017edy uzav\u0159en\u00fd do uvozovek <code>\"\"</code>, <code>''</code> nebo <code>``</code> pro form\u00e1tovac\u00ed \u0159et\u011bzce.     <pre><code>let str : string = \"ahoj\";  // vytvo\u0159\u00edme \u0159et\u011bzec\n</code></pre></li> <li>\u0158et\u011bzce m\u016f\u017eeme spojovat pomoc\u00ed <code>+</code> <pre><code>let str : string = \"ahoj\" + \" \" + \"jak se m\u00e1\u0161?\";  // vytvo\u0159\u00edme \u0159et\u011bzec \"ahoj jak se m\u00e1\u0161?\"\n\nlet answer : string = \"dob\u0159e\";\n\nlet str2 : string = \"ahoj \" + answer;  // ahoj dob\u0159e\n</code></pre></li> <li>Speci\u00e1ln\u00edm p\u0159\u00edpadem jsou form\u00e1tovac\u00ed \u0159et\u011bzce, kam se dosad\u00ed hodnota prom\u011bnn\u00e9     <pre><code>//! pozor jin\u00e9 uvozovky\nlet str3 : string = `ahoj ${answer}`;  // ahoj dob\u0159e\n</code></pre></li> <li>Kdy\u017e spoj\u00edme \u0159et\u011bzec s \u010d\u00edslem, \u010d\u00edslo se automaticky p\u0159evede na \u0159et\u011bzec a spoj\u00ed se stejn\u00fdm zp\u016fsobem     <pre><code>let str4 : string = answer + \" \" + 5;  // dob\u0159e 5\n\nlet num : number = 5;\nlet str5 : string = \"Je mi \" + num + \" let\";\n</code></pre></li> </ul> Automatick\u00fd p\u0159evod na \u0159et\u011bzec <p>S\u010d\u00edt\u00e1n\u00ed \u0159et\u011bzc\u016f a \u010d\u00edsel nefunguje ve v\u0161ech jazyc\u00edch, jde o chov\u00e1n\u00ed specifick\u00e9 pro TypeScript(JavaScript) a p\u00e1r podobn\u00fdch jazyk\u016f. Nenechme se zasko\u010dit t\u00edm, jak se to chov\u00e1: <pre><code>let result : string = \"5 + 1 je: \" + 5 + 1;\n</code></pre> V <code>result</code> bude <code>\"5 + 1 je: 51\"</code>!</p> <p>5 se p\u0159id\u00e1 do \u0159et\u011bzce a pot\u00e9 se tam p\u0159id\u00e1 1, nese\u010dtou se p\u0159edem.</p> <p>Pro spr\u00e1vn\u00e9 fungov\u00e1n\u00ed bychom museli 5 + 1 d\u00e1t do z\u00e1vorky, takhle: <pre><code>let result : string = \"(5 + 1) je: \" + (5 + 1);\n</code></pre> V <code>result</code> bude <code>\"(5 + 1) je: 6\"</code>!</p> <p>Stejn\u011b jako ostatn\u00ed typy je m\u016f\u017eeme p\u0159ed\u00e1vat do funkc\u00ed a vracet: <pre><code>function greetName(name: string) : void {\n    console.log(\"Ahoj \" + name);\n}\n</code></pre></p> <p>Na dne\u0161n\u00ed cvi\u010den\u00ed si op\u011bt m\u016f\u017eeme st\u00e1hnout zip.</p>"},{"location":"robot/lekce8/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Nejd\u0159\u00edve se vr\u00e1t\u00edme k funkci <code>console.log()</code>, d\u00edky kter\u00e9 jsme vypisovali r\u016fzn\u00e9 hodnoty. Tato funkce bere jako argument \u0159et\u011bzec; pokud argument nen\u00ed \u0159et\u011bzec, p\u0159edem definovan\u00fdm zp\u016fsobem se na \u0159et\u011bzec automaticky p\u0159evede.</p> <p>Jako prvn\u00ed \u00fakol si vyzkou\u0161\u00edme spojit \u0159et\u011bzec a \u010d\u00edslo s t\u00edm, co u\u017e zn\u00e1me:</p> <p>Nap\u00ed\u0161eme program, kter\u00fd p\u0159i stisku tla\u010d\u00edtka vyp\u00ed\u0161e na v\u00fdstup <code>\"Senzor nam\u011b\u0159il X.\"</code>, kde X je aktu\u00e1ln\u00ed hodnota nam\u011b\u0159en\u00e1 z ADC p\u0159evodn\u00edku.</p> \u0158e\u0161en\u00ed <pre><code>import { createRobutek } from \"./libs/robutek.js\";\nimport * as gpio from \"gpio\";\nimport * as adc from \"adc\";\n\nconst robutek = createRobutek(\"V2\");\n\ngpio.pinMode(robutek.Pins.ButtonLeft, gpio.PinMode.INPUT);\n\nadc.configure(robutek.Pins.Sens1);\n\ngpio.pinMode(robutek.Pins.StatusLED, gpio.PinMode.OUTPUT);\ngpio.write(robutek.Pins.StatusLED, 1);\n\nconsole.log(\"Pro vyps\u00e1n\u00ed hodnoty na senzoru zm\u00e1\u010dkn\u011bte lev\u00e9 tla\u010d\u00edtko na rob\u016ftkovi.\"); // vyp\u00ed\u0161eme v\u00fdzvu\n\ngpio.on(\"falling\", robutek.Pins.ButtonLeft, () =&gt; { // v\u017edy, kdy\u017e zm\u00e1\u010dkneme tla\u010d\u00edtko, vyp\u00ed\u0161eme nam\u011b\u0159enou hodnotu na senzoru\n    console.log(\"Senzor nam\u011b\u0159il \" + robutek.readSensor(\"LineFL\") + \".\");\n});\n</code></pre>"},{"location":"robot/lekce8/#cteni-ze-vstupu","title":"\u010cten\u00ed ze vstupu","text":"<p>Aby komunikace se za\u0159\u00edzen\u00edm nebyla pouze jednostrann\u00e1, a my mohli z po\u010d\u00edta\u010de pos\u00edlat nov\u00e9 p\u0159\u00edkazy za b\u011bhu, pou\u017eijeme p\u0159ilo\u017een\u00fd program <code>readline</code>. Podobn\u011b jako v p\u0159\u00edpadu LED p\u00e1sku mus\u00edme vytvo\u0159it hodnotu typu readline pomoc\u00ed <code>const reader = new readline(false)</code>.</p> <p>Jakmile m\u00e1me vytvo\u0159en\u00fd objekt typu readline, pomoc\u00ed <code>await reader.read()</code> po\u010dk\u00e1me na vstup. Jeliko\u017e jde o speci\u00e1ln\u00ed funkci, m\u016f\u017eeme ji volat pouze z nov\u00e9 funkce, kter\u00e1 je ozna\u010dena jako <code>async function</code>.</p> Uk\u00e1zka pr\u00e1ce s \u0159et\u011bzcem s readline <pre><code>import { stdout } from \"stdio\";\nimport { readline } from \"./libs/readline.js\";\n\n//* \u0159et\u011bzce\nasync function echo() {\n    stdout.write(\"Napi\u0161 n\u011bjak\u00fd text a stiskni enter.\\n\");\n    const reader = new readline(false);  // vytvo\u0159\u00ed novou instanci t\u0159\u00eddy readline\n    while (true) {  // opakuje se donekone\u010dna\n        const line = await reader.read();  // p\u0159e\u010dte \u0159\u00e1dek z konzole\n        stdout.write(\"Zadal jsi: \" + line + \"\\n\");  // vyp\u00ed\u0161e \u0159\u00e1dek na konzoli\n        stdout.write(`Druh\u00e1 mo\u017enost v\u00fdpisu: Zadal jsi: ${line}\\n`);  // vyp\u00ed\u0161e \u0159\u00e1dek na konzoli\n\n        if (line == \"konec\") {  // pokud je \u0159\u00e1dek roven \"konec\"\n            stdout.write(\"Ukon\u010duji.\\n\");  // vyp\u00ed\u0161e text na konzoli\n            break;  // ukon\u010d\u00ed cyklus\n        }\n        await sleep(10)\n    }\n    reader.close();  // ukon\u010d\u00ed \u010dten\u00ed z konzole\n}\n\necho();  // zavol\u00e1 funkci echo\n</code></pre> Pro z\u00e1jemce: Async a await <p>Funkce, kter\u00e9 zn\u00e1me dote\u010f, vykon\u00e1valy v\u0161echny p\u0159\u00edkazy hned, v po\u0159ad\u00ed tak, jak jsou po sob\u011b napsan\u00e9. Funkce, kter\u00e9 \u010dekaj\u00ed na n\u011bjak\u00fd vstup od u\u017eivatele, ozna\u010dujeme jako asynchronn\u00ed (async). Funkce <code>reader.read()</code> po spu\u0161t\u011bn\u00ed \u010dek\u00e1 na textov\u00fd vstup od u\u017eivatele, a mezit\u00edm se m\u016f\u017eou vykon\u00e1vat ostatn\u00ed ud\u00e1losti. Kdy\u017e p\u0159ed funkci d\u00e1me <code>await</code>, zna\u010d\u00edme tak, \u017ee \u010dek\u00e1me na v\u00fdsledek, a dal\u0161\u00ed \u0159\u00e1dek k\u00f3du se vykon\u00e1 a\u017e kdy\u017e na vstup p\u0159ijde \u0159et\u011bzec zakon\u010den\u00fd nov\u00fdm \u0159\u00e1dkem.</p>"},{"location":"robot/lekce8/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Nap\u00ed\u0161eme program, kter\u00fd se zept\u00e1, jak se jmenujeme, a po\u010dk\u00e1 na odpov\u011b\u010f. A\u017e program dostane odpov\u011b\u010f, vyp\u00ed\u0161e na konzoli <code>Jmenuje\u0161 se \"</code> a jm\u00e9no, kter\u00e9 jsme mu zadali.</p> \u0158e\u0161en\u00ed <pre><code>import { readline } from \"./libs/readline.js\"\n\nasync function askName(){\n    console.log(\"Jak se jmenuje\u0161?\");\n    const reader = new readline(false);\n    let name : string = await reader.read();\n    console.log(\"Jmenuje\u0161 se \" + name);\n}\n\naskName();\n</code></pre>"},{"location":"robot/lekce8/#standardni-funkce","title":"Standardn\u00ed funkce","text":"<p>Ka\u017ed\u00fd jazyk nab\u00edz\u00ed \u0159adu funkc\u00ed na pr\u00e1ci se \u0159et\u011bzci. M\u016f\u017eeme je nap\u0159\u00edklad p\u0159ev\u00e1d\u011bt na \u010d\u00edsla, obracet, m\u011bnit znaky, a podobn\u011b. Pro n\u00e1s je zaj\u00edmav\u00e9 um\u011bt na\u010d\u00edst ze vstupu \u010d\u00edslo: to m\u016f\u017eeme ud\u011blat tak, \u017ee pomoc\u00ed funkce <code>read()</code> dostaneme \u0159et\u011bzec ze vstupu, a pot\u00e9 na n\u011bm zavol\u00e1me funkci <code>parseInt()</code>, kter\u00e1 n\u00e1m ho p\u0159evede na celo\u010d\u00edselnou hodnotu. Kdybychom cht\u011bli p\u0159ev\u00e9st hodnotu s desetin\u00fdmi \u010d\u00edsly, tak vyu\u017eijeme funkce <code>parseFloat()</code>.</p> <pre><code>let str : string = \"20\"; // \u0158et\u011bzec se znaky pro 20\nlet num : number = parseInt(str); // P\u0159evedeme \u0159et\u011bzec na \u010d\u00edslo, a m\u016f\u017eeme s n\u00edm po\u010d\u00edtat\nlet doubled : number = num * 2; // doubled bude m\u00edt hodnotu 40\n\nstr = \"0.234689\"; // \u0158et\u011bzec se znaky pro desetinn\u00e9 \u010d\u00edslo hodnoty 0,234689 odd\u011blujeme desetinnou te\u010dkou.\nlet des : number = parseFloat(str); // P\u0159evedeme \u0159et\u011bzec na desetinn\u00e9 \u010d\u00edslo.\nlet doubled_des : number = des * 2; // doubled_des bude m\u00edt hodnotu 0,469378\n</code></pre>"},{"location":"robot/lekce8/#vychozi-uloha-v1","title":"V\u00fdchoz\u00ed \u00faloha V1","text":"<p>Napi\u0161te (asynchronn\u00ed) funkci, kter\u00e1 po\u010dk\u00e1 na vstup od u\u017eivatele, p\u0159evede ho na \u010d\u00edslo, a pot\u00e9 rozsv\u00edt\u00ed LEDku na desce pomoc\u00ed <code>colors.rainbow()</code> s hodnotou na\u010dten\u00e9ho \u010d\u00edsla.</p> <p>Pro dobrovoln\u00edky</p> <p>U\u017eivatel velice jednodu\u0161e narozd\u00edl od po\u010d\u00edta\u010de m\u016f\u017ee ud\u011blat chybu, a napsat \u010d\u00edslo, kter\u00e9 nepat\u0159\u00ed do rozsahu pro tuto funkci. Pomoc\u00ed while cyklu m\u016f\u017eeme opakovat dotaz na vstup, dokud u\u017eivatel nezad\u00e1 spr\u00e1vnou hodnotu, tedy takovou, kter\u00e1 je v\u011bt\u0161\u00ed ne\u017e <code>0</code> a men\u0161\u00ed ne\u017e <code>360</code>.</p>"},{"location":"robot/lekce9/","title":"Lekce 9 - Radio","text":"<p>Na Rob\u016ftkovi je k dispozici jednoduch\u00e1 bezdr\u00e1tov\u00e1 komunikace na vzd\u00e1lenost jednotek metr\u016f.</p> <ul> <li>A\u017e 16 \"skupin\", v\u0161echny desky ve stejn\u00e9 skupin\u011b p\u0159ijmaj\u00ed zpr\u00e1vy od v\u0161ech ostatn\u00edch z\u00e1rove\u0148</li> <li> <p>Podporuje t\u0159i datov\u00e9 typy:</p> <ul> <li>\u0158et\u011bzce do d\u00e9lky 30 znak\u016f</li> <li>\u010c\u00edsla</li> <li>Kl\u00ed\u010d - hodnota, kdy kl\u00ed\u010d je \u0159et\u011bzec do 22 znak\u016f a hodnota je \u010d\u00edslo</li> </ul> </li> </ul>"},{"location":"robot/lekce9/#spusteni","title":"Spu\u0161t\u011bn\u00ed","text":"<p>Pokud chcete pou\u017e\u00edvat radio, je t\u0159eba importovat jeho knihovnu a pot\u00e9 zavolat <code>begin(&lt;\u010d\u00edslo skupiny&gt;)</code>.</p> <p>P\u0159ed spu\u0161t\u011bn\u00edm r\u00e1dia je pot\u0159eba vypnout WiFi. Vyp\u00edn\u00e1n\u00ed se prov\u00e1d\u00ed p\u0159es Jaculus extension zm\u00e1\u010dknut\u00edm tla\u010d\u00edtko <code>Configure WiFi</code> a vybr\u00e1n\u00edm mo\u017enosti <code>Disable WiFi</code>. Robotka mus\u00edme m\u00edt p\u0159ipojen\u00e9ho k po\u010d\u00edta\u010di a mus\u00edme m\u00edt vybran\u00fd spr\u00e1vn\u00fd port.</p> <pre><code>import * as radio from \"simpleradio\";\n\n// zapnut\u00ed radia, 4 je \u010d\u00edslo skupiny. M\u016f\u017ee b\u00fdt od 0 do 15 v\u010detn\u011b.\nradio.begin(4);\n\n// vypnut\u00ed radia\nradio.end();\n</code></pre>"},{"location":"robot/lekce9/#odesilani-dat","title":"Odes\u00edl\u00e1n\u00ed dat","text":"<p>K odes\u00edl\u00e1n\u00ed slou\u017e\u00ed 3 <code>send</code> funkce:</p> <pre><code>// Odesl\u00e1n\u00ed \u0159etezce\nradio.sendString(\"Ahoj!\");\n\nlet hodnota = 22;\nradio.sendString(`Hodnota: ${hodnota}`); // s form\u00e1tov\u00e1n\u00edm\n</code></pre> <pre><code>// Odesl\u00e1n\u00ed \u010d\u00edsla\nradio.sendNumber(42);\nradio.sendNumber(-2.42);\n</code></pre> <p>Odes\u00edl\u00e1n\u00ed stejn\u00fdch dat po sob\u011b</p> <p>Jako d\u016fsledek zp\u016fsobu pos\u00edl\u00e1n\u00ed dat nen\u00ed mo\u017en\u00e9 poslat dvakr\u00e1t po sob\u011b stejnou zpr\u00e1vu. Pokud toto pot\u0159ebujeme, mus\u00edme data upravit. Je mnoho r\u016fzn\u00fdch zp\u016fsob\u016f, jak m\u016f\u017eeme data upravit. Uk\u00e1\u017eeme si tyto:</p> <ul> <li> <p>\u0158et\u011bzce: na konec \u0159et\u011bzce p\u0159id\u00e1me po\u010d\u00edtadlo</p> <pre><code>radio.sendString(`Hodnota: ${counter}`);\n</code></pre> </li> <li> <p>\u010c\u00edslo: p\u0159i odesl\u00e1n\u00ed mus\u00edme \u010d\u00edslo bitshiftnout doleva a p\u0159i\u010d\u00edst jedni\u010dku nebo nulu, p\u0159i p\u0159\u00edjmu bitshiftnout doprava</p> <pre><code>let counter = 0;\nlet value = 42;\n\n// Oper\u00e1tor \"&lt;&lt;\" bitshiftne lev\u00fd operand o prav\u00fd operand bit\u016f doleva, \n// p\u0159i\u010dten\u00edm zbytku po d\u011blen\u00ed 2 a n\u00e1sledn\u00e9m p\u0159i\u010dten\u00ed jedni\u010dky zajist\u00edme\n// st\u0159\u00edd\u00e1n\u00ed 0 a 1 na posledn\u00edm bitu zpr\u00e1vy\nradio.sendNumber((value &lt;&lt; 1) + (counter % 2));   \ncounter++;\n\n// P\u0159i p\u0159\u00edjmu \u010d\u00edsla z\u00edsk\u00e1me hodnotu bitshiftnut\u00edm doprava o jeden bit,\n// t\u00edm se zbav\u00edme m\u011bn\u00edc\u00edho se bitu a dostaneme p\u016fvodn\u00ed zpr\u00e1vu\nradio.on(\"number\", (cislo, info) =&gt; {\n  const originalValue = cislo &gt;&gt; 1;\n  console.log(\"P\u016fvodn\u00ed hodnota:\", originalValue);\n});\n</code></pre> </li> <li> <p>Kl\u00ed\u010d + hodnota: na hodnot\u011b provedeme \u00fapravy pro \u0159et\u011bzec nebo \u010d\u00edslo podle datov\u00e9ho typu hodnoty</p> </li> </ul> <pre><code>// Odesl\u00e1n\u00ed kl\u00ed\u010d - hodnota\nradio.sendKeyValue(\"rychlost\", 10);\n</code></pre>"},{"location":"robot/lekce9/#rychle-odesilani","title":"Rychl\u00e9 odes\u00edl\u00e1n\u00ed","text":"<p>Pokud se rychle za sebou pokus\u00edte odeslat dv\u011b r\u016fzn\u00e9 hodnoty, je mo\u017en\u00e9, \u017ee doraz\u00ed pouze jedna - je t\u0159eba po\u010dkat p\u0159ed odesl\u00e1n\u00edm dal\u0161\u00ed hodnoty:</p> <pre><code>async function main() {\n  while (true) {\n    radio.sendKeyValue(\"x\", 10);\n    await sleep(50); // \u010dek\u00e1n\u00ed, aby se hodnota X stihla odeslat\n    radio.sendKeyValue(\"y\", 20);\n\n    await sleep(1000);\n  }\n}\nmain();\n</code></pre>"},{"location":"robot/lekce9/#prijmani-dat","title":"P\u0159ijm\u00e1n\u00ed dat","text":"<p>Pro p\u0159ijm\u00e1n\u00ed dat slou\u017e\u00ed funkce <code>on</code>. Prvn\u00ed parametr callbacku je v\u017edy p\u0159ijat\u00e1 hodnota, druh\u00e1 je objekt s informacemi o p\u0159ijmu - od koho (<code>address</code>) a s jaku s\u00edlou sign\u00e1lu (<code>rssi</code>) data p\u0159i\u0161la.</p> <pre><code>// \u0159et\u011bzce\nradio.on(\"string\", (retezec, info) =&gt; {\n  console.log(\n    `P\u0159ijal jsem \u0159et\u011bzec '${retezec}'.\n    Od: ${info.address},\n    s\u00edla sign\u00e1lu: ${info.rssi})\n`\n  );\n});\n</code></pre> <pre><code>// \u010d\u00edslo\nradio.on(\"number\", (cislo, info) =&gt; {\n  console.log(\n    `P\u0159ijal jsem \u010d\u00edslo ${cislo}.\n    Od: ${info.address},\n    s\u00edla sign\u00e1lu: ${info.rssi})\n`\n  );\n});\n</code></pre> <pre><code>// kl\u00ed\u010d - hodnota\nradio.on(\"keyvalue\", (klic, hodnota, info) =&gt; {\n  console.log(\n    `P\u0159ijal jsem ${klic} = ${hodnota}.\n    Od: ${info.address},\n    s\u00edla sign\u00e1lu: ${info.rssi})\n`\n  );\n});\n</code></pre> <p>Ka\u017edou kategorii p\u0159ijmac\u00edho callbacku lze i zru\u0161it:</p> <pre><code>radio.off(\"string\");\nradio.off(\"number\");\nradio.off(\"keyvalue\");\n</code></pre>"},{"location":"robot/lekce9/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Vytvo\u0159te program, kter\u00fd pomoc\u00ed kl\u00ed\u010d-hodnota bude p\u0159es r\u00e1dio odes\u00edlat stav dvou tla\u010d\u00edtek na desce (stisknuto == <code>1</code>, nestisknuto == <code>0</code>). Z\u00e1rove\u0148 bude reagovat na p\u0159\u00edchoz\u00ed hodnoty a rosvicovat prvn\u00ed 2 LED na LED p\u00e1sku podle p\u0159\u00edchoz\u00edho stavu.</p> <p>Jako kl\u00ed\u010de pou\u017eijte <code>IO0</code> a <code>IO2</code>. V\u017edy, kdy\u017e p\u0159ijde kl\u00ed\u010d <code>IO0</code> s hodnotou 1, rozsv\u00edt\u00edte LED na indexu 1, a kdy\u017e 0, tak ji zhasnete, a stejn\u011b tak pro dal\u0161\u00ed tla\u010d\u00edtko a LED.</p> <p>Najd\u011bte kamar\u00e1da, abyste si mohli navz\u00e1jem zkusit, zda program funguje (jeden vys\u00edl\u00e1, druh\u00fd p\u0159ijm\u00e1).</p> \u0158e\u0161en\u00ed <pre><code>import * as radio from \"simpleradio\";\nimport * as gpio from \"gpio\";\nimport { SmartLed, LED_WS2812B } from \"smartled\";\nimport * as colors from \"./libs/colors.js\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\n\nradio.begin(5); // skupina 5\n\n// nastav\u00edme p\u00e1sek\nconst ledStrip = new SmartLed(robutek.Pins.ILEDConnector, 8, LED_WS2812B)\n\n// Nastav\u00edme tla\u010d\u00edtka jako vstupy\ngpio.pinMode(robutek.Pins.ButtonLeft, gpio.PinMode.INPUT);\ngpio.pinMode(robutek.Pins.ButtonRight, gpio.PinMode.INPUT);\n\ngpio.on(\"falling\", robutek.Pins.ButtonLeft, () =&gt; {\n    // P\u0159i stisknut\u00ed lev\u00e9ho tla\u010d\u00edtka\n    radio.sendKeyValue(\"LEFT\", 1); // ode\u0161leme hodnotu 1 s kl\u00ed\u010dem LEFT\n});\ngpio.on(\"rising\", robutek.Pins.ButtonLeft, () =&gt; {\n    // P\u0159i uvoln\u011bn\u00ed lev\u00e9ho tla\u010d\u00edtka\n    radio.sendKeyValue(\"LEFT\", 0); // ode\u0161leme hodnotu 0 s kl\u00ed\u010dem LEFT\n});\n\ngpio.on(\"falling\", robutek.Pins.ButtonRight, () =&gt; {\n    // P\u0159i stisknut\u00ed prav\u00e9ho tla\u010d\u00edtka\n    radio.sendKeyValue(\"RIGHT\", 1); // ode\u0161leme hodnotu 1 s kl\u00ed\u010dem RIGHT\n});\ngpio.on(\"rising\", robutek.Pins.ButtonRight, () =&gt; {\n    // P\u0159i uvoln\u011bn\u00ed prav\u00e9ho tla\u010d\u00edtka\n    radio.sendKeyValue(\"RIGHT\", 0); // ode\u0161leme hodnotu 0 s kl\u00ed\u010dem RIGHT\n});\n\n// Zpracov\u00e1n\u00ed p\u0159\u00edchoz\u00edch spr\u00e1v\nradio.on(\"keyvalue\", (klic, hodnota, info) =&gt; {\n    if (klic === \"RIGHT\") {\n        ledStrip.set(0, colors.rainbow(0, hodnota * 10))\n    } else if (klic === \"LEFT\") {\n        ledStrip.set(1, colors.rainbow(150, hodnota * 10))\n    }\n    ledStrip.show();\n});\n</code></pre>"},{"location":"robot/lekce9/#vychozi-ukol-v1","title":"V\u00fdchoz\u00ed \u00fakol V1","text":"<p>Zm\u011b\u0148te program ze zad\u00e1n\u00ed A tak, aby m\u00edsto tla\u010d\u00edtek vy\u010d\u00edtal \u010d\u00e1rov\u00fd senzor. Na LED p\u00e1sku se bude zobrazovat hodnota senzoru jako jas b\u00edl\u00e9 barvy LED. Vyu\u017eijte k  RGB objekt <code>ledStrip.set(0, {r: RED, g: GREEN, b: BLUE})</code>. Pokud jsou hodnoty <code>RED</code>, <code>GREEN</code>, <code>BLUE</code> stejn\u00e9, sm\u00edchaj\u00ed se do b\u00edl\u00e9ho sv\u011btla. Jas tohoto sv\u011btla ur\u010d\u00ed pak velikost hodnoty, tedy p\u0159i hodnot\u011b 0 bude LED vypnut\u00e1, p\u0159i hodnot\u011b 255 bude sv\u00edtit maxim\u00e1ln\u011b.</p>"},{"location":"robotAssembly/","title":"Slo\u017een\u00ed robota","text":"<p>Prvn\u00ed krok</p>"},{"location":"robotAssembly/stage1/","title":"Stage 1 - Z\u00e1klad","text":"<p>V t\u00e9to kapitole si postav\u00edme samotn\u00e9ho Rob\u016ftka.</p>"},{"location":"robotAssembly/stage1/#seznam-potrebnych-soucastek","title":"Seznam pot\u0159ebn\u00fdch sou\u010d\u00e1stek","text":"<ul> <li>4 \u0161roubky M3x30</li> <li>4 matky M3</li> <li>2 motory s kolem</li> <li>2 magnetky (enkod\u00e9ry)</li> <li>Vlo\u017eka pod motor</li> <li>Spodn\u00ed dome\u010dek pro motory</li> <li>Vrchn\u00ed dome\u010dek pro motory</li> <li>D\u0159ev\u011bn\u00e1 z\u00e1kladna</li> <li>D\u0159ev\u011bn\u00e1 paluba</li> <li>Z\u00e1kladn\u00ed deska</li> <li>Velk\u00fd kart\u00e1\u010dek</li> <li>Mal\u00fd kart\u00e1\u010dek</li> <li>Baterie Li-ion 14500</li> <li>Zar\u00e1\u017eka fixy</li> </ul>"},{"location":"robotAssembly/stage1/#navod-na-slozeni","title":"N\u00e1vod na slo\u017een\u00ed","text":"<ol> <li> <p>Ulomte okraje desky.</p> <p> </p> </li> <li> <p>P\u0159ipravte si dome\u010dek pro motory.</p> <p></p> </li> <li> <p>Vsa\u010fte oba motory do dome\u010dku. </p> <p>Netla\u010dte motory do dome\u010dku silou, m\u011bly by j\u00edt vsadit lehce. Ujist\u011bte se, zda jste motor oto\u010dili spr\u00e1vn\u011b a \u017ee jsou kolejni\u010dky motoru zarovn\u00e1ny s dr\u00e1\u017ekami v dome\u010dku.</p> <p> </p> </li> <li> <p>Pomoc\u00ed mal\u00e9ho ploch\u00e9ho \u0161roubov\u00e1ku odstra\u0148te plastov\u00e9 zar\u00e1\u017eky z pinhead\u016f.  </p> <p>D\u00e1vejte si pozor, abyste pinheady neohli.</p> <p></p> </li> <li> <p>Polo\u017ete vlo\u017eku pod motor na desti\u010dku plo\u0161n\u00e9ho spoje. Dbejte na jej\u00ed orientaci.</p> <p></p> </li> <li> <p>Nasa\u010fte dome\u010dek s motory na vlo\u017eku tak, aby se pinheady dot\u00fdkaly kontakt\u016f motor\u016f.</p> <p></p> <p>Kontakty motoru mus\u00ed b\u00fdt mezi pinheady.</p> <p> </p> </li> <li> <p>Zajd\u011bte za orgem, aby v\u00e1m zap\u00e1jel motory. Z\u00e1rove\u0148 v\u00e1m zkontroluje, \u017ee motory jedou, jak maj\u00ed.</p> <p>P\u0159e\u010dt\u011bte si popisek tohoto kroku, je to d\u016fle\u017eit\u00e9!</p> </li> <li> <p>Nasa\u010fte enkod\u00e9ry (magnety) na osku motoru.</p> <p></p> </li> <li> <p>Nasa\u010fte vrchn\u00ed dome\u010dek na spodn\u00ed dome\u010dek.</p> <p> </p> </li> <li> <p>Na spodn\u00ed stran\u011b rob\u016ftka zacvakn\u011bte zar\u00e1\u017eku fixy do dome\u010dku.</p> <p> </p> </li> <li> <p>Nasa\u010fte d\u0159ev\u011bnou z\u00e1kladnu. P\u0159i\u0161roubujte ji k rob\u016ftku pomoc\u00ed \u010dty\u0159 \u0161roubk\u016f M3x30.</p> <p>B\u011b\u017ete na st\u016fl 2 za orgem.</p> <p>Pozor na orientaci z\u00e1kladny, d\u00edry mus\u00ed sed\u011bt na sou\u010d\u00e1stky na desce.</p> <p>\u0160rouby do d\u0159ev\u011bn\u00e9 z\u00e1kladny neutahujte silou, aby ji nepo\u0161kodily.</p> <p> </p> </li> <li> <p>P\u0159ipravte si kart\u00e1\u010dky (jeden mal\u00fd a jeden velk\u00fd). Uchopte si kart\u00e1\u010dek kle\u0161t\u011bmi a zatla\u010dte ho do dr\u00e1\u017eky spr\u00e1vn\u00e9 velikosti (mal\u00fd kart\u00e1\u010dek do mal\u00e9 dr\u00e1\u017eky, velk\u00fd kart\u00e1\u010dek do velk\u00e9 dr\u00e1\u017eky).</p> <p> </p> <p>Zatla\u010dte kart\u00e1\u010dky a\u017e na doraz, aby nevyl\u00e9zala kovov\u00e1 \u010d\u00e1st kart\u00e1\u010dku.</p> <p> </p> </li> <li> <p>Vlo\u017ete baterii.</p> <p>Dejte si pozor na polaritu baterie.</p> <p> </p> </li> <li> <p>P\u0159i\u0161roubujte d\u0159ev\u011bnou palubu.</p> <p>Pozor na orientaci paluby, d\u00edry mus\u00ed sed\u011bt na sou\u010d\u00e1stky na desce.</p> <p>  M\u00e1te hotovo!</p> </li> </ol> <p>Krok 2</p>"},{"location":"robotAssembly/stage2/","title":"Stage 2 - Servo, fixa","text":""},{"location":"robotAssembly/stage2/#seznam-potrebnych-veci","title":"Seznam pot\u0159ebn\u00fdch v\u011bc\u00ed","text":"<ul> <li>Hotov\u00fd rob\u016ftek ze stage 1</li> <li>Servo motor</li> <li>Stahovac\u00ed zip p\u00e1sek</li> <li>Fixa</li> <li>Dr\u017e\u00e1k na fixu</li> <li>\u0160roubek a matka</li> <li>Gumi\u010dka</li> </ul>"},{"location":"robotAssembly/stage2/#navod-na-slozeni","title":"N\u00e1vod na slo\u017een\u00edS FIXOU NEJEZD\u011aTE ROB\u016eTKEM PO ZEMI, JENOM PO PAP\u00cd\u0158E NA VYHRAZEN\u00c9M M\u00cdST\u011a.Lidem, co toto poru\u0161\u00ed, bude fixa zabavena!","text":"<ol> <li> <p>Sundejte z Rob\u016ftka d\u0159ev\u011bnou palubu (pokud ji na rob\u016ftku m\u00e1te).</p> <p> </p> </li> <li> <p>P\u0159ipravte si fixu, dr\u017e\u00e1k na fixu, \u0161roubek, matku a p\u0159\u00edpravek.</p> <p></p> </li> <li> <p>O\u010dist\u011bte dr\u017e\u00e1k na fixu.</p> <p> </p> </li> <li> <p>Nasu\u0148te dr\u017e\u00e1k na fixu.</p> <p></p> </li> <li> <p>Nasu\u0148te na fixu p\u0159\u00edpravek. Zatla\u010dte jej a\u017e na doraz.</p> <p></p> </li> <li> <p>Dr\u017e\u00e1k p\u0159itiskn\u011bte k p\u0159\u00edpravku.</p> <p></p> </li> <li> <p>Nasa\u010fte na dr\u017e\u00e1k \u0161roubek s matkou a se\u0161roubujte.</p> <p></p> </li> <li> <p>Prot\u00e1hn\u011bte kabel od serva d\u0159ev\u011bnou palubou.</p> <p></p> </li> <li> <p>Posa\u010fte servo na d\u0159ev\u011bnou palubu.</p> <p></p> </li> <li> <p>Prot\u00e1hn\u011bte stahovac\u00ed p\u00e1sek kolem serva.</p> <p></p> <p>Ut\u00e1hn\u011bte stahovac\u00ed p\u00e1sek tak, aby servem ne\u0161lo hnout.</p> <p></p> </li> <li> <p>Od\u0161t\u00edpn\u011bte p\u0159e\u010dn\u00edvaj\u00edc\u00ed stahovac\u00ed p\u00e1sek.</p> <p> </p> </li> <li> <p>P\u0159ipojte konektor kabelu serva ke t\u0159\u00edpinov\u00e9mu konektoru na z\u00e1kladn\u00ed desce Rob\u016ftka dle obr\u00e1zku.</p> <p>\u0160ipka na konektoru pat\u0159\u00ed na datov\u00fd pin na desce!</p> <p> </p> </li> <li> <p>P\u0159i\u0161roubujte d\u0159ev\u011bnou palubu zp\u00e1tky na Rob\u016ftka.</p> <p> </p> </li> <li> <p>Oto\u010dte si servo do nulov\u00e9 pozice.</p> <p>Abychom mohli jednodu\u0161e pohybovat tu\u017ekou, jsou v knihovn\u011b dostupn\u00e9 konstanty pro pozice serva. P\u00e1\u010du na servo je ale pot\u0159eba nasadit do spr\u00e1vn\u00e9 pozice, aby konstanty odpov\u00eddaly.</p> <p>Pro spr\u00e1vn\u00e9 um\u00edst\u011bn\u00ed oto\u010d\u00edme servo programem na pozici 0 a p\u00e1\u010dku nasad\u00edme tak, aby sm\u011b\u0159ovala p\u0159\u00edmo vzh\u016fru. K tomu je pot\u0159eba spustit n\u00e1sleduj\u00edc\u00ed k\u00f3d:</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\";\nimport { Servo } from \"./libs/servo.js\";\n\nconst robutek = createRobutek(\"V2\");\nconst servo = new Servo(robutek.Pins.Servo2, 1, 4);\n\nservo.write(0);\n</code></pre> </li> <li> <p>Nasa\u010fte na servo p\u00e1\u010dku dle polohy na obr\u00e1zku.</p> <p> </p> </li> <li> <p>Obmotejte dr\u017e\u00e1k na fixu gumi\u010dkou.</p> <p></p> </li> <li> <p>Fixu dejte do Rob\u016ftka a zah\u00e1kn\u011bte p\u00e1\u010dku serva do d\u00edry v \u010dern\u00e9m d\u00edlu.</p> <p></p> <p></p> <p> M\u00e1te hotovo!</p> </li> </ol> <p>Krok 3 - Led p\u00e1sek</p>"},{"location":"robotAssembly/stage3/","title":"Stage 3 - RGB p\u00e1sek","text":"<p>P\u0159\u00edslu\u0161enstv\u00ed si m\u016f\u017eete d\u00e1t kamkoliv na Rob\u016ftka, ale v n\u00e1vodech jsou doporu\u010den\u00e9 pozice.</p> <p></p> <ol> <li> <p>P\u0159ipravte si p\u00e1sek.</p> <p></p> </li> <li> <p>Zap\u00e1jejte p\u00e1sek.</p> <p></p> </li> <li> <p>P\u00e1sek p\u0159ipojte k Rob\u016ftkovi.</p> <p></p> </li> <li> <p>P\u0159\u00edslu\u0161enstv\u00ed si m\u016f\u017eete d\u00e1t kamkoliv na Rob\u016ftka, na obr\u00e1zku je doporu\u010den\u00e9 m\u00edsto.</p> </li> </ol> <p>P\u00e1sek p\u0159id\u011blejte GUMOLEPEM, NE SEKUN\u010e\u00c1KEM!!</p> <p></p> <p>Krok 4 - Tla\u010d\u00edtko</p>"},{"location":"robotAssembly/stage4/","title":"Stage 4 - Tla\u010d\u00edtko","text":"<p>P\u0159\u00edslu\u0161enstv\u00ed si m\u016f\u017eete d\u00e1t kamkoliv na Rob\u016ftka, ale v n\u00e1vodech jsou doporu\u010den\u00e9 pozice.</p> <ol> <li> <p>U\u0159\u00edzneme si 3 cm dlouh\u00fd kus d\u0159ev\u00ed\u010dka jako dr\u017e\u00e1k tla\u010d\u00edtka.</p> <p></p> </li> <li> <p>U\u0159\u00edznut\u00fd kousek si obrous\u00edme, aby byl kr\u00e1sn\u011b hladk\u00fd.</p> <p></p> </li> <li> <p>P\u0159ilep\u00edme dr\u017e\u00e1k k tla\u010d\u00edtku pomoc\u00ed tavn\u00e9 pistole.</p> <p> </p> </li> <li> <p>Tla\u010d\u00edtko s dr\u017e\u00e1\u010dkem m\u016f\u017eeme p\u0159ilepit k Rob\u016ftkovi.</p> <p> </p> </li> <li> <p>Nakonec si p\u0159ipoj\u00edme tla\u010d\u00edtko k Rob\u016ftkovi pomoc\u00ed 3x10cm kabelu (jin\u00fd ne\u017e co je v pytl\u00ed\u010dku).</p> <p> </p> </li> </ol> Tla\u010d\u00edtko Rob\u016ftek OUTPUT \u2192 IO1 GND \u2192 GND VCC \u2192 VCC <p>Krok 5 - Senzor vzd\u00e1lenosti</p>"},{"location":"robotAssembly/stage5/","title":"Stage 5 - Senzor vzd\u00e1lenosti","text":"<p>Senzor vzd\u00e1lenosti m\u00e1 p\u0159edn\u00ed a zadn\u00ed stranu. P\u0159edn\u00ed strana NESM\u00cd B\u00ddT BLOKOVAN\u00c1, aby senzor fungoval.</p> <p></p> <ol> <li>P\u0159ipravte si senzor vzd\u00e1lenosti a \"u\u0161up\" kabel, jak je zn\u00e1zorn\u011bno na obr\u00e1zku (kabely p\u00e1j\u00edme tak, aby \"tr\u010dely\" ze zadn\u00ed strany senzoru).     </li> </ol>"},{"location":"robotAssembly/stage5/#stage-51-vyroba-stojanku-dobrovolne","title":"Stage 5.1 - V\u00fdroba stoj\u00e1nku (dobrovoln\u00e9)","text":"<ol> <li>U\u0159\u00edzn\u011bte si dva 2 cm dlouh\u00e9 kusy d\u0159ev\u00ed\u010dka.</li> <li>U\u0159\u00edznut\u00e9 kousky si obruste, aby byly kr\u00e1sn\u011b hladk\u00e9.</li> <li>Herkules dejte na del\u0161\u00ed stranu jednoho z d\u00edl\u016f.</li> <li> <p>Slepte do prav\u00e9ho \u00fahlu</p> <p></p> </li> </ol>"},{"location":"robotAssembly/stage6/","title":"Stage 6 - RGB senzor","text":"<p>RGB senzor m\u00e1 p\u0159edn\u00ed a zadn\u00ed stranu. P\u0159edn\u00ed strana NESM\u00cd B\u00ddT BLOKOVAN\u00c1, aby senzor fungoval.</p> <ol> <li>P\u0159ipojte kabel do senzoru. </li> <li>P\u0159ipojte senzor do rob\u016ftka. </li> </ol>"},{"location":"robotExtensions/","title":"Roz\u0161i\u0159uj\u00edc\u00ed bloky","text":""},{"location":"robotExtensions/#gridui","title":"GridUI","text":"<p>Blok GridUI</p>"},{"location":"robotExtensions/#cara","title":"\u010c\u00e1ra","text":"<p>Blok Sledov\u00e1n\u00ed \u010d\u00e1ry</p>"},{"location":"robotExtensions/#sumo","title":"Sumo","text":"<p>Blok Suma</p>"},{"location":"robotExtensions/#bludiste","title":"Bludi\u0161t\u011b","text":"<p>Blok Bludi\u0161t\u011b</p>"},{"location":"robotExtensions/#barevny-senzor","title":"Barevn\u00fd senzor","text":"<p>Blok Senzoru barev</p>"},{"location":"robotExtensions/#simulator","title":"Simul\u00e1tor","text":"<p>Blok Simul\u00e1toru</p>"},{"location":"robotExtensions/blokCara/","title":"Sledov\u00e1n\u00ed \u010d\u00e1ry","text":"<p>Po sezn\u00e1men\u00ed s Rob\u016ftkem a programovac\u00edm prost\u0159ed\u00ed se m\u016f\u017eeme pustit do prvn\u00edho projektu. Na\u0161\u00edm c\u00edlem bude vytvo\u0159it robota, kter\u00fd bude n\u00e1sledovat \u010dernou \u010d\u00e1ru nakreslenou na b\u00edl\u00e9m podkladu.</p> <p>K vy\u0159e\u0161en\u00ed tohoto \u00fakolu budeme pou\u017e\u00edvat senzory odrazu sv\u011btla, kter\u00e9 jsou um\u00edst\u011bn\u00e9 na spodn\u00ed stran\u011b Rob\u016ftka. Tyto senzory dok\u00e1\u017e\u00ed rozpoznat, zda se pod nimi nach\u00e1z\u00ed b\u00edl\u00e1 nebo \u010dern\u00e1 plocha, p\u0159\u00edpadn\u011b jakou \u010d\u00e1st pozorovan\u00e9 plochy tvo\u0159\u00ed \u010d\u00e1ra.</p> <p>Senzory na rob\u016ftkovi</p> <p>Jednoduch\u00e9 sledov\u00e1n\u00ed \u010d\u00e1ry</p> <p>Vylep\u0161en\u00e9 sledov\u00e1n\u00ed \u010d\u00e1ry</p>"},{"location":"robotExtensions/blokCara/additions/","title":"Vylep\u0161en\u00e9 sledov\u00e1n\u00ed \u010d\u00e1ry","text":""},{"location":"robotExtensions/blokCara/additions/#jizda-na-jeden-senzor","title":"J\u00edzda na jeden senzor","text":"<p>V p\u0159edchoz\u00edm p\u0159\u00edkladu jsme se ptali na ot\u00e1zku jestli \u010d\u00e1ra pod senzorem je, nebo nen\u00ed a spokojili jsme se jenom s odpov\u011bd\u00ed ano/ne. Na\u0161e \u010d\u00e1rov\u00e9 senzory ale maj\u00ed ur\u010dit\u00fd rozptyl. Pokud senzor sed\u00ed na pomez\u00ed \u010dern\u00e9 a b\u00edl\u00e9, tak n\u00e1m bude \u0159\u00edkat, \u017ee vid\u00ed \u0161edou barvu n\u011bkde mezi. Toho m\u016f\u017eeme vyu\u017e\u00edt.</p> <p>\u0158ekn\u011bme, \u017ee pracujeme s lev\u00fdm senzorem. Pak budeme p\u0159edpokl\u00e1dat, \u017ee \u010d\u00e1ra je napravo od n\u011bj a ztmavuj\u00edc\u00ed se povrch pod senzorem znamen\u00e1, \u017ee jedeme p\u0159\u00edli\u0161 doprava a zesv\u011btluj\u00edc\u00ed se povrch znamen\u00e1 \u017ee jedeme p\u0159\u00edli\u0161 doleva. Ide\u00e1ln\u00ed stav bude, pokud bude senzor nad hranic\u00ed b\u00edl\u00e9 a \u010dern\u00e9.</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\nconst thresh = 500; // Mez pod kterou se barva pova\u017euje za \u010dernou\nasync function main() {\n    robutek.leftMotor.move();\n    robutek.rightMotor.move();\n    while(true) {\n        const l = robutek.readSensor(\"LineFR\");\n        if(l &gt; thresh) {\n            robutek.leftMotor.setSpeed(100);\n            robutek.rightMotor.setSpeed(10);\n        } else {\n            robutek.leftMotor.setSpeed(10);\n            robutek.rightMotor.setSpeed(100);\n        }\n        await sleep(1);\n    }\n}\nmain().catch(console.error);\n</code></pre>"},{"location":"robotExtensions/blokCara/additions/#jemnejsi-styl-jizdy","title":"Jemn\u011bj\u0161\u00ed styl j\u00edzdy","text":"<p>Rob\u016ftek s sebou \u0161kube tam a zp\u00e1tky, jak bychom to mohli vy\u0159e\u0161it? D\u0159\u00edv jsme v\u011bd\u011bli, \u017ee \u010d\u00e1ra je pod jedn\u00edm senzorem, druh\u00fdm senzorem a nebo \"n\u011bkde mezi\". Te\u010f ale v\u00edme jak moc mimo jsme a tak m\u016f\u017eeme reagovat p\u0159im\u011b\u0159en\u011b. Zvol\u00edme si n\u011bjakou ide\u00e1ln\u00ed pozici (setpoint) a n\u011bjak\u00fd koeficient k_p, kter\u00fdm vyn\u00e1sob\u00edme rozd\u00edl mezi ide\u00e1ln\u00ed a re\u00e1lnou pozic\u00ed v\u016f\u010di \u010d\u00e1\u0159e a toto \u010d\u00edslo pou\u017eijeme p\u0159i zat\u00e1\u010den\u00ed.</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\nconst setpoint = 512;\nconst k_p = 0.5;\nasync function main() {\n    robutek.setSpeed(300);\n    while(true) {\n        const l = robutek.readSensor(\"LineFR\");\n        let error = setpoint - l;\n        /* \n        robutek.move prijima hodnoty od -1 do 1,\n        prevedeme si proto chybu do tohoto rozsahu\n        */\n        let normalized_error = error / 512;\n        robutek.move(normalized_error * k_p);\n        await sleep(1);\n    }\n}\nmain().catch(console.error);\n</code></pre>"},{"location":"robotExtensions/blokCara/additions/#vyhlazeni-kmitu","title":"Vyhlazen\u00ed kmit\u016f","text":"<p>Rob\u016ftek u\u017e jezd\u00ed plynuleji a snad i rychleji. Dost mo\u017en\u00e1 se ale po\u0159\u00e1d t\u0159epe, ale i to se d\u00e1 \u0159e\u0161it. M\u016f\u017eeme si zm\u011b\u0159it rychlost s jakou se p\u0159ibli\u017euje/vzdaluje \u010d\u00e1\u0159e a p\u0159i p\u0159\u00edli\u0161 velk\u00e9 rychlosti zm\u011bny \"povolit ot\u011b\u017ee\" (jet rovn\u011bji). Rychlost p\u0159ibli\u017eov\u00e1n\u00ed/vzdalov\u00e1n\u00ed se \u010d\u00e1\u0159e zm\u011b\u0159\u00edme jako rozd\u00edl v\u00fdstupu ze senzoru ve dvou po sob\u011b jdouc\u00edch pr\u016fchodech while cyklem. Takto z\u00edskan\u00e9 \u010d\u00edslo op\u011bt vyn\u00e1sob\u00edme n\u011bjak\u00fdm koeficientem k_d a v\u00fdsledek ode\u010dteme od korekce vypo\u010d\u00edtan\u00e9 pomoc\u00ed. Tento zp\u016fsob \u0159\u00edzen\u00ed rob\u016ftka se naz\u00fdv\u00e1 PD regulace.</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\nconst setpoint = 512;\nlet speed = 789;\nlet k_p = 0.96;\nlet k_d = 4.86;\n\nfunction move(steering: number, speed: number) {\n    if(steering &lt; 0) {\n        robutek.leftMotor.setSpeed((1 + steering) * speed)\n        robutek.rightMotor.setSpeed(speed)\n    } else if(steering &gt; 0) {\n        robutek.rightMotor.setSpeed((1 - steering) * speed)\n        robutek.leftMotor.setSpeed(speed)\n    }\n}\n\nasync function main() {\n    let previous_error = 0;\n    robutek.leftMotor.move()\n    robutek.rightMotor.move()\n    console.log(\"start\")\n    while(true) {\n        const l = robutek.readSensor(\"LineFR\");\n        let error = setpoint - l;\n        let normalized_error = error / 512;\n        let speed_of_change = normalized_error - previous_error;\n        move(normalized_error * k_p + speed_of_change * k_d, speed);\n        previous_error = normalized_error;\n        await sleep(1);\n    }\n}\n\nmain().catch(console.error);\n</code></pre> <p>K ur\u010den\u00ed hodnot k_d a k_p je pot\u0159eba experimentovat. Hod\u00ed se naprogramovat si GUI v GridUI abyste kv\u016fli ka\u017ed\u00e9 zm\u011bn\u011b paramet\u016f nemuseli nahr\u00e1vat k\u00f3d znovu</p>"},{"location":"robotExtensions/blokCara/additions/#co-dal","title":"Co d\u00e1l","text":"<ul> <li> <p>Na\u0161e \u0159\u00edd\u00edc\u00ed algoritmy v t\u00e9to kapitole jezd\u00ed jenom na jeden senzor, daj\u00ed se ale upravit tak, aby fungovaly se dv\u011bma p\u0159edn\u00edmy senzory.</p> </li> <li> <p>Co m\u00e1 robot d\u011blat pokud sjede z \u010d\u00e1ry? M\u00e1me bo\u010dn\u00ed senzory, kter\u00fdmi bychom si mohli pomoct, v\u010das rozpoznat sjet\u00ed z \u010d\u00e1ry a vr\u00e1tit se na ni.</p> </li> </ul>"},{"location":"robotExtensions/blokCara/linefollow/","title":"Jednoduch\u00e9 sledov\u00e1n\u00ed \u010d\u00e1ry","text":""},{"location":"robotExtensions/blokCara/linefollow/#zakladni-myslenka","title":"Z\u00e1kladn\u00ed my\u0161lenka","text":"<p>Na za\u010d\u00e1tku p\u0159edpokl\u00e1d\u00e1me, \u017ee se je \u010d\u00e1ra mezi dv\u011bma p\u0159edn\u00edmy senzory. Na vstup ze senzor\u016f budeme reagovat takto:</p> <ul> <li>\u010c\u00e1ra je uprost\u0159ed: Jedeme rovn\u011b</li> <li>\u010c\u00e1ra je vlevo: Jedeme doleva</li> <li>\u010c\u00e1ra je vpravo: Jedeme doprava</li> </ul>"},{"location":"robotExtensions/blokCara/linefollow/#program","title":"Program","text":"<p>Senzor n\u00e1m barvu pop\u00ed\u0161e jako \u010d\u00edslo od 0 do 1023, n\u00e1s ale nezaj\u00edm\u00e1 konkr\u00e9tn\u00ed \u010d\u00edslo, ale zda se ta barva je\u0161t\u011b d\u00e1 pova\u017eovat za b\u00edlou a nebo u\u017e je to \u010dern\u00e1. Zvol\u00edme si tedy n\u011bjakou prahovou hodnotu (threshold) ve kter\u00e9 se bude na\u0161e vn\u00edm\u00e1n\u00ed barvy l\u00e1mat.</p> <pre><code>const thresh = 700; // Mez pod kterou se barva pova\u017euje za \u010dernou\n</code></pre> <p>Nastav\u00edme, \u017ee motory maj\u00ed jet:</p> <pre><code>robutek.leftMotor.move();\nrobutek.rightMotor.move();\n</code></pre> <p>Nakonec mus\u00edme napsat hlavn\u00ed \u010d\u00e1st programu. Ve while cyklu neust\u00e1le kontrolujeme stav senzor\u016f a nastavujeme v\u00fdkon motor\u016f. V cyklu nesm\u00edme zapomenout na kr\u00e1tk\u00fd await sleep() abychom se vyhnuli probl\u00e9m\u016fm s watchdogem.</p> <pre><code>while(true) {\n    const l = robutek.readSensor(\"LineFL\");\n    const r = robutek.readSensor(\"LineFR\");\n    if(l &lt; thresh) {\n        robutek.leftMotor.setSpeed(100);\n        robutek.rightMotor.setSpeed(10);\n    } else if(r &lt; thresh) {\n        robutek.leftMotor.setSpeed(10);\n        robutek.rightMotor.setSpeed(100);\n    } else {\n        robutek.leftMotor.setSpeed(100);\n        robutek.leftMotor.setSpeed(100);\n    }\n    await sleep(10);\n}\n</code></pre> <p>Cel\u00fd program pak m\u016f\u017ee vypadat n\u011bjak takto:</p> <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\nconst thresh = 700; // Mez pod kterou se barva pova\u017euje za \u010dernou\nasync function main() {\n    /*\n    Nastav\u00edme n\u011bjakou rozumnou rychlost,\n    \u010d\u00edm men\u0161\u00ed, t\u00edm sn\u00e1ze se rob\u016ftek na \u010d\u00e1\u0159e\n    udr\u017e\u00ed\n    */\n    //robutek.setSpeed(0);\n    robutek.leftMotor.move();\n    robutek.rightMotor.move();\n    while(true) {\n        const l = robutek.readSensor(\"LineFL\");\n        const r = robutek.readSensor(\"LineFR\");\n        if(l &lt; thresh) {\n            robutek.leftMotor.setSpeed(100);\n            robutek.rightMotor.setSpeed(10);\n        } else if(r &lt; thresh) {\n            robutek.leftMotor.setSpeed(10);\n            robutek.rightMotor.setSpeed(100);\n        } else {\n            robutek.leftMotor.setSpeed(100);\n            robutek.leftMotor.setSpeed(100);\n        }\n        await sleep(10);\n    }\n}\nmain().catch(console.error);\n</code></pre>"},{"location":"robotExtensions/blokCara/sensors/","title":"Pohled na senzory \u010d\u00e1ry","text":"<p>Na rob\u016ftkovi je zespoda 8 senzor\u016f \u010d\u00e1ry. Hodnota ka\u017ed\u00e9ho senzoru m\u016f\u017ee teoreticky nab\u00fdvat hodnot od 0 (absolutn\u00ed \u010dern\u00e1) do 1023 (nejb\u011blej\u0161\u00ed b\u00edl\u00e1), V praxi se ale hodnota v\u011bt\u0161inou pohybuje n\u011bkde mezi t\u011bmato dv\u011bmi mezemi.</p> <p>P\u0159esn\u00e9 hodnoty pro b\u00edlou a \u010dernou barvu jsou na ka\u017ed\u00e9m h\u0159i\u0161ti jin\u00e9. M\u016f\u017ee b\u00fdt u\u017eite\u010dn\u00e9 p\u0159ed hlavn\u00ed program za\u0159adit kr\u00e1tkou kalibraci p\u0159ejet\u00edm p\u0159es \u010d\u00e1ru.</p> <p>Senzory na rob\u016ftkovi jsou na desce ozna\u010deny n\u00e1zvy A1 - A4 a B1 - B4. Skupina A je vep\u0159edu a kolem st\u0159edov\u00e9 d\u00edry, a skupina B je kolem kol. \u010cten\u00ed ze senzor\u016f je rychl\u00e9, pokud \u010dteme ze senzor\u016f jedn\u00e9 z t\u011bch dvou skupin, pokud bychom ale nap\u0159\u00edklad na\u010detli hodnotu ze senzoru A2 a pot\u00e9 B4, tak \u010dten\u00ed senzoru B4 zabere minim\u00e1ln\u011b 2 milisekundy.</p> Pro\u010d to zdr\u017een\u00ed? <p>Hodnoty ze senzor\u016f se m\u011b\u0159\u00ed pomoc\u00ed analogov\u011b-digit\u00e1ln\u00edch p\u0159evodn\u00edk\u016f (ADC) na ESP a proto je pro ka\u017ed\u00fd senzor pot\u0159eba zvl\u00e1\u0161tn\u00ed pin. Aby nebylo pot\u0159eba tolik pin\u016f jenom pro senzory, pou\u017e\u00edv\u00e1 se pro komunikaci s nimi tzv. multiplexing. V jednu chv\u00edli je mo\u017en\u00e9 \u010d\u00edst senzory jenom z jedn\u00e9 skupiny (pou\u017e\u00edvaj\u00ed se 4 piny + jeden na volbu skupin). Skupinu m\u016f\u017eeme p\u0159ep\u00ednat, ale bezprost\u0159edn\u011b po p\u0159epnut\u00ed je v\u00fdsledek m\u011b\u0159en\u00ed nespolehliv\u00fd, a proto knihovna Rob\u016ftka \u010dek\u00e1 2 milisekundy.</p> <p></p>"},{"location":"robotExtensions/blokCara/sensors/#jak-se-senzory-pracovat","title":"Jak se senzory pracovat","text":"<p>Hodnotu ze senzoru jde vy\u010d\u00edst n\u00e1sleduj\u00edc\u00edm zp\u016fsobem:</p> <pre><code>const l = robutek.readSensor(\"LineFL\");\nconst r = robutek.readSensor(\"LineFR\");\n</code></pre> <p>Na\u010dten\u00e9 hodnoty si m\u016f\u017eeme jednodu\u0161e vypsat</p> <p><pre><code>console.log(`l: ${l}; r: ${r}`);\n</code></pre> Cel\u00fd program na vyzkou\u0161en\u00ed senzor\u016f m\u016f\u017ee vypadat t\u0159eba takto: <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");\nasync function main() {\n    while(true) {\n        const l = robutek.readSensor(\"LineFL\");\n        const r = robutek.readSensor(\"LineFR\");\n        console.log(`l: ${l}, r: ${r}`);\n        await sleep(500); // Nechceme zahltit po\u010d\u00edta\u010d\n    }\n}\nmain().catch(console.error);\n</code></pre></p> <p>B\u011b\u017ete na viz.jaculus.org a uvid\u00edte grafickou vizualizaci v\u00fdstupu ze senzor\u016f.</p>"},{"location":"robotExtensions/blokGridUI/","title":"GridUI designer","text":"<p>Pokud u\u017e jste si u\u017eili dost ovl\u00e1d\u00e1n\u00ed Rob\u016ftka joystickem, nebo byste si k n\u011bmu r\u00e1di p\u0159idali  n\u011bjak\u00e9 dal\u0161\u00ed ovl\u00e1dac\u00ed prvky, m\u016f\u017eete si upravit rozhran\u00ed zobrazovan\u00e9 na mobilu/v prohl\u00ed\u017ee\u010di, jak jen chcete.</p> <p>Rozhran\u00ed zobrazen\u00e9 na ovl\u00e1dac\u00edm za\u0159\u00edzen\u00ed je vytv\u00e1\u0159eno pomoc\u00ed souboru <code>layout.ts</code>, najdete ho vedle souboru <code>index.ts</code>, kter\u00fd obvykle upravujete. Na gridui.robotikabrno.cz si m\u016f\u017eete navrhnout vysn\u011bn\u00e9 rozhran\u00ed a str\u00e1nka pro v\u00e1s soubor <code>layout.ts</code> vygeneruje sama. V\u0161imn\u011bte si, \u017ee v\u0161echny widgety maj\u00ed svoje id, kter\u00fdm je budeme rozli\u0161ovat v k\u00f3du.</p> <p>GridUI designer</p> <p>Nemus\u00edte si vkl\u00e1dat jenom ovl\u00e1dac\u00ed prvky, m\u016f\u017eete si taky na sv\u00e9 rozhran\u00ed d\u00e1t t\u0159eba ledky nebo textov\u00e9 pole na zobrazov\u00e1n\u00ed dat z Rob\u016ftka. </p> <p></p> <p>Takhle by t\u0159eba mohlo vypadat rozhran\u00ed navr\u017een\u00e9 v designeru, m\u00e1me na n\u011bm posuvn\u00edk s popiskem, kter\u00fdm si budeme nastavovat barvu ledek na rob\u016ftkovi, ledku, kterou budeme blikat stejnou barvou a textov\u00e9 pole, do kter\u00e9ho budeme vypisovat RGB hodnoty nastaven\u00e9 barvy.</p> <p>Tady m\u00e1te ke sta\u017een\u00ed popsan\u00fd projekt (nastaven\u00ed barvy ledky na desce, blikaj\u00edc\u00ed ledka stejn\u00e9 barvy na rozhran\u00ed...).</p> OdkazZip <pre><code>https://robutek.robotikabrno.cz/v2/robotExtensions/blokGridUI/colors-gridui.tar.gz\n</code></pre> <p>St\u00e1hnout ZIP</p>"},{"location":"robotExtensions/blokGridUI/#spusteni","title":"Spu\u0161t\u011bn\u00ed","text":"<p><pre><code>import * as colors from \"./libs/colors.js\";\nimport * as gpio from \"gpio\";\nimport { SmartLed, LED_WS2812 } from \"smartled\";\nimport Layout from \"./layout.js\";\nimport * as wifi from \"wifi\";\nimport { createRobutek } from \"./libs/robutek.js\";\nconst robutek = createRobutek(\"V2\");\n\n// zm\u011b\u0148 m\u011b!\nconst OWNER = \"owner\";\nconst DEVICE_NAME = \"Robutek\";\n\nLayout.begin(OWNER, DEVICE_NAME, builder =&gt; {\n    builder.SetColor.onChanged(slider =&gt; {\n        // k\u00f3d spu\u0161t\u011bn\u00fd zm\u011bnou na posuvn\u00edku\n    });\n});\n</code></pre> Po p\u0159ipojen\u00ed rob\u016ftka k wi-fi (pops\u00e1no v lekci 1) inizializujeme rozhran\u00ed funkc\u00ed <code>Layout.begin()</code>, kter\u00e9 v argumentech p\u0159ed\u00e1v\u00e1me jm\u00e9no vlastn\u00edka, jm\u00e9no za\u0159\u00edzen\u00ed a blok k\u00f3du, ve kter\u00e9m nastav\u00edme ud\u00e1losti spou\u0161t\u011bn\u00e9 zm\u011bnami v rozhran\u00ed. Tak zrovna <code>builder.SetColor.onChanged(slider =&gt; { // k\u00f3d zde })</code> bude obsahovat k\u00f3d, kter\u00fd se spust\u00ed, kdy\u017e widget s id <code>SetColor</code> projde n\u011bjakou zm\u011bnou. V tomto p\u0159\u00edpad\u011b je dan\u00fd widget n\u00e1\u0161 posuvn\u00edk a zm\u011bnou bude, kdy\u017e j\u00edm n\u011bkdo posune. V prom\u011bnn\u00e9 <code>slider</code> je na\u0161emu k\u00f3du p\u0159ed\u00e1n stav posuvn\u00edku, tak\u017ee si pot\u00e9 m\u016f\u017eeme vy\u010d\u00edst t\u0159eba jeho aktu\u00e1ln\u00ed hodnotu takto:</p> <pre><code>let hodnota = slider.value;\n</code></pre>"},{"location":"robotExtensions/blokGridUI/#upravovani-widgetu","title":"Upravov\u00e1n\u00ed widget\u016f","text":"<p>Tyto ud\u00e1losti a reakce na n\u011b mus\u00ed b\u00fdt definov\u00e1ny uvnit\u0159 funkce <code>Layout.begin()</code>, ale zapisovat do widget\u016f m\u016f\u017eeme odkudkoliv z k\u00f3du. Poj\u010fm\u011b za\u010d\u00edt blikat ledkou. <pre><code>setInterval(() =&gt; {\n    Layout.Led.on = !Layout.Led.on; // blik\u00e1 ledkou na rozhran\u00ed\n}, 500);\n</code></pre></p> <p>Nemus\u00edme ale ledce nastavovat jenom jestli je zapnut\u00e1 nebo vypnut\u00e1. Vlastn\u011b m\u016f\u017eeme m\u011bnit v\u0161echny jej\u00ed vlastnost\u00ed, kter\u00e9 jsem si nastavili v designeru.</p> <p></p> <p>Na\u0161ept\u00e1va\u010d se ve VSCode zobrazuje s\u00e1m, ale pokud v\u00e1m zmiz\u00ed, znovu si ho m\u016f\u017eete zobrazit stisknut\u00edm Ctrl+Space. </p> <p>Jak vid\u00edte, na\u0161ept\u00e1va\u010d n\u00e1m nab\u00edz\u00ed p\u0159\u00edstup k barv\u011b stavu, v\u00fd\u0161ce, \u0161\u00ed\u0159ce, pozici... Prost\u011b ke v\u0161em vlastnostem ledky, kter\u00e9 si m\u016f\u017eeme v designeru nastavit. N\u011bkter\u00fdm z nich m\u016f\u017eeme v k\u00f3du prost\u011b p\u0159i\u0159adit hodnotu a ona se projev\u00ed na rozhran\u00ed (viz p\u0159\u00edklad blik\u00e1n\u00ed ledkou na rozhran\u00ed v GridUI). Kdy\u017e si potom jednu vlastnost vybereme a najedeme na ni my\u0161\u00ed, uk\u00e1\u017ee se n\u00e1m, jak\u00fd typ hodnoty po\u017eaduj\u00ed. Vlastnost <code>.on</code> u ledky bere booleanskou hodnotu, vlastnost <code>.widgetH</code> \u010d\u00edslo, kter\u00e9 ur\u010duje v\u00fd\u0161ku widgetu, a <code>.color</code> string ve form\u00e1tu <code>#ffffff</code> (RGB hodnoty v hexadecim\u00e1ln\u00ed soustav\u011b).</p> <p>Obdobn\u011b snadno p\u0159ijdete na v\u0161echno, co se d\u00e1 vyv\u00e1d\u011bt s ostatn\u00edmi widgety. Je\u0161t\u011b jedna v\u011bc: nastavovat hodnoty m\u016f\u017eete v\u0161em vlastnostem, kter\u00e9 jsou speci\u00e1ln\u00ed pro konkr\u00e9tn\u00ed widget (barva, velikost fontu, hodnota posuvn\u00edk atd.) zat\u00edmco k obecn\u00fdm vlastnostem, jako je pozice, velikost widgetu a uuid, m\u016f\u017eete p\u0159istupovat pouze ke \u010dten\u00ed.</p> <p>Pohled na jednotliv\u00e9 widgety a jejich vlastnosti je dostupn\u00fd v dal\u0161\u00edm bloku.</p> <p>Widgety v GridUI</p>"},{"location":"robotExtensions/blokGridUI/widgets/","title":"Widgety","text":"<p>GridUI designer n\u00e1m nab\u00edz\u00ed spoustu r\u016fzn\u00fdch widget\u016f, ale co v\u0161echno s nimi dok\u00e1\u017eeme vyv\u00e1d\u011bt? Tady jich v\u011bt\u0161inu projdeme a uk\u00e1\u017eeme si v\u0161echny informace, kter\u00e9 jsme schopni ze jednotliv\u00fdch widget\u016f tahat a naopak co u nich v\u0161echno m\u016f\u017eeme k\u00f3dem nastavovat.</p> <p>GridUI designer</p> <p>St\u00e1hnout ZIP s pr\u00e1zdn\u00fdm projektem</p>"},{"location":"robotExtensions/blokGridUI/widgets/#obecne-vlastnosti","title":"Obecn\u00e9 vlastnosti","text":"<p>Nejprve v\u0161ak zopakov\u00e1n\u00ed obecn\u00fdch vlastnost\u00ed z p\u0159edchoz\u00edho bloku. U ka\u017ed\u00e9ho widgetu si v designeru nastavujeme n\u011bkolik obecn\u00fdch vlastnost\u00ed: <code>id</code> widgetu a jeho pozici (<code>x</code> a <code>y</code>) a velikost (v\u00fd\u0161ka <code>h</code> a \u0161\u00ed\u0159ka <code>w</code>). Tyto vlastnosti jsme z rob\u016ftka schopni pouze \u010d\u00edst a ne upravovat.</p> <p></p> <p>Na obr\u00e1zku si v\u0161imnete je\u0161t\u011b dvou dal\u0161\u00edch \u0159\u00e1dk\u016f: <code>tab</code> a <code>css</code>. Vlastnosti <code>tab</code> se budeme v\u011bnovat v budouc\u00edm bloku (a\u017e ho vyrob\u00edm).</p> <p>K vlastnostem widgetu p\u0159istupujeme pomoc\u00ed <code>id</code> p\u0159\u00edkazem <code>Layout.&lt;id&gt;.&lt;vlastnost&gt;</code>. Budeme-li tedy m\u00edt na rozhran\u00ed n\u011bjak\u00fd widget s <code>id = mujWidget</code>, jeho v\u00fd\u0161ku p\u0159e\u010dteme p\u0159\u00edkazem <code>Layout.mujWidget.widgetH</code>, x-ovou sou\u0159adnici p\u0159\u00edkazem <code>Layout.mujWidget.widgetX</code> atd.</p>"},{"location":"robotExtensions/blokGridUI/widgets/#bar","title":"Bar","text":"<p>U widgetu Bar m\u016f\u017eeme nastavovat a \u010d\u00edst n\u00e1sleduj\u00edc\u00ed vlastnosti: barvu, velikost fontu popisku, zobrazen\u00ed popisku (true/false), minim\u00e1ln\u00ed a maxim\u00e1ln\u00ed hodnotu a aktu\u00e1ln\u00ed hodnotu. <pre><code>Layout.Bar1.color = \"rgb(150 0 85)\"; // barva\nLayout.Bar1.fontSize = 20; // velikost fontu popisku\nLayout.Bar1.showValue = true; // ur\u010duje, zobraz\u00ed-li se popisek\n\nLayout.Bar1.min = 10; // minim\u00e1ln\u00ed hodnota\nLayout.Bar1.max = 50; // maxim\u00e1ln\u00ed hodnota\nLayout.Bar1.value = 0; //aktu\u00e1ln\u00ed hodnota\n</code></pre></p>"},{"location":"robotExtensions/blokGridUI/widgets/#tlacitko","title":"Tla\u010d\u00edtko","text":"<p>U widgetu Button (tla\u010d\u00edtko) m\u016f\u017eeme hlavn\u011b \u010d\u00edst, jestli je zm\u00e1\u010dknut\u00e9 nebo ne. Taky m\u016f\u017eeme uvnit\u0159 funkce <code>Layout.begin()</code> definovat, co se stane p\u0159i zm\u00e1\u010dknut\u00ed a pu\u0161t\u011bn\u00ed tla\u010d\u00edtka. <pre><code>const OWNER = \"owner\";\nconst DEVICE_NAME = \"robutek\";\n\nLayout.begin(OWNER, DEVICE_NAME, builder =&gt; {\n    builder.Button1.onPress(state =&gt; {\n        console.log(\"Tla\u010d\u00edtko bylo zm\u00e1\u010dknuto.\"); // k\u00f3d spu\u0161t\u011bn\u00fd zm\u00e1\u010dknut\u00edm tla\u010d\u00edtka\n    });\n\n    builder.Button1.onRelease(state =&gt; {\n        console.log(\"Tla\u010d\u00edtko bylo pu\u0161t\u011bno.\"); // k\u00f3d spu\u0161t\u011bn\u00fd pu\u0161t\u011bn\u00edm tla\u010d\u00edtka\n    });\n});\n\nsetInterval(() =&gt; { // jednou za sekundu vypisuje do konzole stav tla\u010d\u00edtka (true =&gt; je zm\u00e1\u010dknut\u00e9, false =&gt; je pu\u0161t\u011bn\u00e9)\n    console.log(Layout.Button1.pressed); }, 1000);\n</code></pre></p> A co znamen\u00e1 to <code>state</code>? <p>Do prom\u011bnn\u00e9 <code>state</code> (ve funkci <code>builder.Button1.onPress()</code>) se n\u00e1m ukl\u00e1d\u00e1 aktu\u00e1ln\u00ed stav tla\u010d\u00edtka (nebo jak\u00e9hokoli jin\u00e9ho pou\u017eit\u00e9ho widgetu) v\u010detn\u011b v\u0161ech jeho vlastnost\u00ed. Uvnit\u0159 n\u00e1sleduj\u00edc\u00edho bloku k\u00f3du tedy m\u016f\u017eeme m\u00edsto <code>Layout.Button1.color</code> apod. ps\u00e1t <code>state.color</code>. Jde o prom\u011bnnou, m\u016f\u017eete j\u00ed tedy d\u00e1t jak\u00e9koliv jm\u00e9no.</p> <p>Tak\u00e9 m\u016f\u017eeme nastavovat (i \u010d\u00edst!) v\u0161echny vlastnosti tla\u010d\u00edtka, viz n\u00e1sleduj\u00edc\u00ed blok k\u00f3du: <pre><code>Layout.Button1.text = \"\u010cudl\u00edk\"; // popisek tla\u010d\u00edtka\nLayout.Button1.color = \"rgb(0 0 0)\"; // barva popisku\nLayout.Button1.fontSize = 35; // velikost fontu popisku\nLayout.Button1.align = \"flex-start\"; // zarovn\u00e1n\u00ed popisku\nLayout.Button1.valign = \"center\"; // vertik\u00e1ln\u00ed zarovn\u00e1n\u00ed popisku\n\nLayout.Button1.background = \"rgb(0 200 130)\"; // barva tla\u010d\u00edtka\nLayout.Button1.disabled = false; // ur\u010duje, jeli tla\u010d\u00edtko zm\u00e1\u010dknuteln\u00e9\n</code></pre></p>"},{"location":"robotExtensions/blokGridUI/widgets/#zaskrtavaci-policko","title":"Za\u0161krt\u00e1vac\u00ed pol\u00ed\u010dko","text":"<p>U widgetu Checkbox (za\u0161krt\u00e1vac\u00ed pol\u00ed\u010dko) m\u016f\u017eeme ve funci <code>Layout.begin()</code> definovat, co se stane p\u0159i zm\u011bn\u011b. Zm\u011bnou je, pokud je pol\u00ed\u010dko za\u0161krtnuto nebo odza\u0161krtnuto.</p> <pre><code>const OWNER = \"owner\";\nconst DEVICE_NAME = \"robutek\";\n\nLayout.begin(OWNER, DEVICE_NAME, builder =&gt; {\n    builder.Checkbox1.onChanged(state =&gt; {\n        if (state.checked) {\n            console.log(\"Pol\u00ed\u010dko bylo za\u0161krtnuto.\");\n        } else {\n            console.log(\"Pol\u00ed\u010dko bylo odza\u0161krtnuto.\");\n        }\n    });\n});\n</code></pre> <p>Tak\u00e9 m\u016f\u017eeme nastavovat a \u010d\u00edst v\u0161echny vlastnosti za\u0161krt\u00e1vac\u00edho pol\u00ed\u010dka, viz n\u00e1sleduj\u00edc\u00ed blok k\u00f3du.</p> <pre><code>Layout.Checkbox1.text = \"Napsat lekci na GridUI\"; // popisek pol\u00ed\u010dka\nLayout.Checkbox1.color = \"rgb(255 80 130)\"; // barva\nLayout.Checkbox1.fontSize = 30; // velikost fontu popisku\nLayout.Checkbox1.checked = true; // nastaven\u00ed za\u0161krtnut\u00ed pol\u00ed\u010dka\n\nlet stavPolicka = Layout.Checkbox1.checked; // \u010dten\u00ed za\u0161krtnut\u00ed pol\u00ed\u010dka, vrac\u00ed true/false\n</code></pre>"},{"location":"robotExtensions/blokGridUI/widgets/#kruh","title":"Kruh","text":"<p>Widget Circle (kruh) je velmi podobn\u00fd widgetu Bar, m\u00e1 n\u00e1sleduj\u00edc\u00ed p\u0159\u00edkazy:</p> <pre><code>Layout.Circle1.color = \"rgb(0 50 222)\"; // barva\nLayout.Circle1.lineWidth = 25; // tlou\u0161\u0165ka kruhu\n\nLayout.Circle1.fontSize = 17; // velikost fontu popisku\nLayout.Circle1.showValue = true; //zobrazen\u00ed popisku (true/false)\n\nLayout.Circle1.min = 0; // minim\u00e1ln\u00ed hodnota\nLayout.Circle1.max = 100; // maxim\u00e1ln\u00ed hodnota\nLayout.Circle1.value = 75; // jeden konec vybarven\u00e9 \u010d\u00e1sti kruhu\nLayout.Circle1.valueStart = 50; // druh\u00fd konec vybarven\u00e9 \u010d\u00e1sti kruhu\n</code></pre> <p>Doporu\u010duji si nejprve ru\u010dn\u011b pohr\u00e1t s hodnotama v designeru a pochopit, co kter\u00e1 doopravdy d\u011bl\u00e1.</p>"},{"location":"robotExtensions/blokGridUI/widgets/#vstup","title":"Vstup","text":"<p>Input (vstup) m\u00e1 t\u0159i m\u00f3dy: norm\u00e1ln\u00ed textov\u00fd, \u010d\u00edseln\u00fd a heslov\u00fd. V heslov\u00e9m m\u00f3du se v\u00e1m zapsan\u00fd text zobraz\u00ed jako te\u010dky. V <code>Layout.begin()</code> m\u016f\u017eeme nastavit ud\u00e1lost spu\u0161t\u011bnou zm\u011bnou ve vstupu:</p> <pre><code>const OWNER = \"owner\";\nconst DEVICE_NAME = \"robutek\";\n\nLayout.begin(OWNER, DEVICE_NAME, builder =&gt; {\n    builder.Input1.onChanged(vstup =&gt;{\n        console.log(vstup.text);\n    });\n});\n</code></pre> <p>Op\u011bt m\u016f\u017eeme \u010d\u00edst i nastavovat v\u0161echny n\u00e1sleduj\u00edc\u00ed vlastnosti vstupu:</p> <pre><code>Layout.Input1.color = \"rgb(20 20 200)\"; // barva ohrani\u010den\u00ed vstupu\nLayout.Input1.type = \"text\"; // typ vstupu (\"text\", \"number\", \"password\")\nLayout.Input1.disabled = false; // nastavuje, m\u016f\u017ee-li b\u00fdt text ve vstupu zm\u011bn\u011bn\nLayout.Input1.text = \"superTajneHeslo\"; // text ve vstupu\n</code></pre>"},{"location":"robotExtensions/blokGridUI/widgets/#joystick","title":"Joystick","text":"<p>U joysticku op\u011bt m\u016f\u017eeme v <code>Layout.begin()</code> nastavit k\u00f3d zpu\u0161t\u011bn\u00fd zm\u011bnou jeho polohy nebo kliknut\u00edm/\u0165uknut\u00edm na n\u011bj. Tak\u00e9 m\u016f\u017eeme vy\u010d\u00edtat jeho pozici pomoc\u00ed <code>Layout.&lt;joystickID&gt;&lt;/JoystickId&gt;.x</code> a <code>Layout.&lt;joystickId&gt;.y</code>.</p> <pre><code>const OWNER = \"owner\";\nconst DEVICE_NAME = \"robutek\";\n\nLayout.begin(OWNER, DEVICE_NAME, builder =&gt; {\n    builder.Joystick1.onClick(joy =&gt;{\n        console.log(\"klik\");\n    });\n    builder.Joystick1.onPositionChanged(joy =&gt;{\n        console.log(\"Pozice joysticku: x = \" + joy.x + \", y = \" + joy.y);\n    });\n});\n</code></pre> <p>Joystick p\u0159ed\u00e1v\u00e1 svou pozici jako sou\u0159adnice x a y, kter\u00e9 maj\u00ed hodnoty mezi -32768 a 32768.</p> <p>M\u016f\u017eeme \u010d\u00edst a nastavovat vlastnosti joysticku n\u00e1sleduj\u00edc\u00edmi p\u0159\u00edkazy:</p> <pre><code>Layout.Joystick1.color = \"rgb(0 0 255)\"; // barva\nLayout.Joystick1.keys = \"wasd\"; // p\u0159i\u0159azen\u00e9 kl\u00e1vesy, viz tip n\u00ed\u017ee\nLayout.Joystick1.text = \":D\"; // popisek\n</code></pre> <code>Layout.&lt;joystickId&gt;.keys</code> <p>Pokud ovl\u00e1d\u00e1te rob\u016ftka z po\u010d\u00edta\u010de, m\u016f\u017eete joysticku p\u0159i\u0159adit \u010dty\u0159i kl\u00e1vesy, kter\u00e9 odpov\u00eddaj\u00ed sm\u011br\u016fm nahoru, doleva, dol\u016f a doprava v  tomto po\u0159ad\u00ed. K tomu slou\u017e\u00ed <code>.keys</code>. Mohli bychom je t\u0159eba p\u0159emapovat na \u010d\u00edsl\u00ed\u010dka na numpadu a ty pou\u017e\u00edvat m\u00edsto \u0161ipek nebo obvykl\u00e9ho WASD.</p>"},{"location":"robotExtensions/blokGridUI/widgets/#led","title":"LED","text":"<p>LEDka m\u00e1 n\u00e1sleduj\u00edc\u00ed p\u0159\u00edkazy:</p> <pre><code>Layout.Led1.color = \"rgb(40 80 150)\"; // barva\nLayout.Led1.on = true; // ur\u010duje, jeli LEDka rozsv\u00edcen\u00e1\n</code></pre>"},{"location":"robotExtensions/blokGridUI/widgets/#vyber","title":"V\u00fdb\u011br","text":"<p>\u010cten\u00ed ze <code>.selectedIndex</code> nen\u00ed moment\u00e1ln\u011b naimplementovan\u00e9 a \u010din\u00ed tak v\u00fdb\u011brov\u00fd widget prakticky nepou\u017eiteln\u00fdm.</p> <p></p> <p>Widget Select (v\u00fdb\u011br) umo\u017e\u0148uje u\u017eivateli vybrat jednu z p\u0159edem ur\u010den\u00fdch mo\u017enost\u00ed. M\u00e1 metodu <code>.onChanged</code> pou\u017eitelnou uvnit\u0159 <code>Layout.begin()</code>:</p> <pre><code>const OWNER = \"owner\";\nconst DEVICE_NAME = \"robutek\";\n\nLayout.begin(OWNER, DEVICE_NAME, builder =&gt; {\n    console.log(sel.selectedIndex);\n});\n</code></pre> <p>M\u016f\u017eeme nastavovat a \u010d\u00edst tyto vlastnosti:</p> <pre><code>Layout.Select1.color = \"rgb(255 255 255)\";\nLayout.Select1.background = \"rgb(150 30 80)\";\nLayout.Select1.disabled = false;\nLayout.Select1.options = \"Sn\u00eddan\u011b, Ob\u011bd, V\u011b\u010de\u0159e, P\u016flno\u010dn\u00ed sva\u010dinka\";\nLayout.Select1.selectedIndex = 3;\n</code></pre>"},{"location":"robotExtensions/blokGridUI/widgets/#posuvnik","title":"Posuvn\u00edk","text":"<p>Slider (posuvn\u00edk) m\u00e1 metodu <code>.onChanged</code> pou\u017eitelnou uvnit\u0159 <code>Layout.begin()</code>:</p> <pre><code>const OWNER = \"owner\";\nconst DEVICE_NAME = \"robutek\";\n\nLayout.begin(OWNER, DEVICE_NAME, builder =&gt; {\n    builder.Slider1.onChanged(slid =&gt; {\n        console.log(slid.value);\n    })\n});\n</code></pre> <p>M\u016f\u017eeme nastavovat a \u010d\u00edst tyto vlastnosti:</p> <pre><code>Layout.Slider1.color = \"rgb(0 180 0)\"; // barva\nLayout.Slider1.fontSize = 20; // velikost fontu popisku\nLayout.Slider1.showValue = true; // ur\u010duje, zobraz\u00ed-li se popisek\nLayout.Slider1.max = 10; // maxim\u00e1ln\u00ed hodnota\nLayout.Slider1.min = 1; // minim\u00e1ln\u00ed hodnota\nLayout.Slider1.value = 3.5 // aktu\u00e1ln\u00ed hodnota\nLayout.Slider1.precision = 0.5; // p\u0159esnost (nap\u0159. zaokrouhl\u00ed na nejbli\u017e\u0161\u00ed n\u00e1sobek 0.5)\n</code></pre>"},{"location":"robotExtensions/blokGridUI/widgets/#spinedit","title":"SpinEdit","text":"<p>SpinEdit m\u00e1 metodu <code>.onChanged</code> pou\u017eitelnou uvnit\u0159 <code>Layout.begin()</code>:</p> <pre><code>const OWNER = \"owner\";\nconst DEVICE_NAME = \"robutek\";\n\nLayout.begin(OWNER, DEVICE_NAME, builder =&gt; {\n    builder.Spinedit1.onChanged(spin =&gt; {\n        console.log(sspin.value);\n    })\n});\n</code></pre> <p>M\u016f\u017eeme nastavovat a \u010d\u00edst tyto vlastnosti:</p> <pre><code>Layout.Slider1.color = \"rgb(0 180 0)\"; // barva\nLayout.Slider1.fontSize = 20; // velikost fontu popisku\nLayout.Slider1.showValue = true; // ur\u010duje, zobraz\u00ed-li se popisek\nLayout.Slider1.max = 10; // maxim\u00e1ln\u00ed hodnota\nLayout.Slider1.min = 1; // minim\u00e1ln\u00ed hodnota\nLayout.Slider1.value = 3.5 // aktu\u00e1ln\u00ed hodnota\nLayout.Slider1.precision = 0.5; // p\u0159esnost (nap\u0159. zaokrouhl\u00ed na nejbli\u017e\u0161\u00ed n\u00e1sobek 0.5)\n</code></pre>"},{"location":"robotExtensions/blokGridUI/widgets/#prepinac","title":"P\u0159ep\u00edna\u010d","text":"<p>Switcher (p\u0159ep\u00edna\u010d) m\u00e1 metodu <code>.onChanged</code> pou\u017eitelnou uvnit\u0159 <code>Layout.begin()</code>. M\u016f\u017eeme taky \u010d\u00edst (a pouze \u010d\u00edst!) hodnotu na p\u0159ep\u00edna\u010di:</p> <pre><code>const OWNER = \"owner\";\nconst DEVICE_NAME = \"robutek\";\n\nLayout.begin(OWNER, DEVICE_NAME, builder =&gt; {\n    builder.Switcher1.onChanged(swi =&gt; {\n        console.log(swi.value);\n    })\n});\n</code></pre> <p>M\u016f\u017eeme nastavovat a \u010d\u00edst tyto vlastnosti: <pre><code>Layout.Switcher1.color = \"rgb(244 205 64)\" // barva\nLayout.Switcher1.fontSize = 28 // velikost fontu\nLayout.Switcher1.min = 0 // minim\u00e1ln\u00ed hodnota\nLayout.Switcher1.max = 3 // maxim\u00e1ln\u00ed hodnota\n</code></pre></p>"},{"location":"robotExtensions/blokGridUI/widgets/#text","title":"Text","text":"<p>Widget text je norm\u00e1ln\u00ed textov\u00e9 pole, do kter\u00e9ho (na rozd\u00edl od Inputu) u\u017eivatel rozhran\u00ed nem\u016f\u017ee nic ps\u00e1t. M\u016f\u017eete u n\u011bj nastavovat a \u010d\u00edst n\u00e1sleduj\u00edc\u00ed vlastnosti:</p> <pre><code>Layout.Text1.background = \"rgb(58 164 38)\" // barva textov\u00e9ho pole\nLayout.Text1.color = \"rgb(200 255 200)\" // barva textu\nLayout.Text1.fontSize = 18 // velikost fontu textu\n\nLayout.Text1.text = \"t\u00e1bor\" // hlavn\u00ed text\nLayout.Text1.prefix = \"Robotick\u00fd \" // text vlo\u017een\u00fd p\u0159ed hlavn\u00ed text\nLayout.Text1.suffix = \" je mega.\" // text vlo\u017een\u00fd za hlavn\u00ed text\n</code></pre> <p>Pokud se v\u00e1\u0161 text nevejde na jeden \u0159\u00e1dek, vlastnost <code>.align</code> se automaticky nastav\u00ed na <code>\"flex-start\"</code>.</p>"},{"location":"robotExtensions/blokI2C/","title":"I2C","text":""},{"location":"robotExtensions/blokMaze/","title":"Projekt - Hled\u00e1n\u00ed cesty v bludi\u0161ti","text":"<p>Dal\u0161\u00ed na \u0159ad\u011b je na pohled o n\u011bco slo\u017eit\u011bj\u0161\u00ed projekt, ve kter\u00e9m si vyzkou\u0161\u00edme orientaci a pohyb v bludi\u0161ti. C\u00edlem bude naj\u00edt cestu z po\u010d\u00e1te\u010dn\u00edho bodu do c\u00edle.</p> <p>K tomu, abychom se dok\u00e1zali v bludi\u0161ti pohybovat, mus\u00edme m\u00edt zp\u016fsob, jak detekovat p\u0159ek\u00e1\u017eky a podle nich se rozhodovat, jak\u00fdm sm\u011brem se vydat. N\u00e1m k tomuto \u00fa\u010delu bude slou\u017eit dvojice senzor\u016f - tla\u010d\u00edtko na p\u0159edn\u00ed stran\u011b a laserov\u00fd d\u00e1lkom\u011br sm\u011b\u0159uj\u00edc\u00ed do strany.</p> <p>1. Pohled na gpio</p> <p>2. Pohled na senzor vzd\u00e1lenosti</p> <p>3. Pohled na logiku proch\u00e1zen\u00ed </p>"},{"location":"robotExtensions/blokMaze/gpio-adv/","title":"GPIO - roz\u0161\u00ed\u0159en\u00e9","text":"<p>2. Pohled na senzor vzd\u00e1lenosti</p>"},{"location":"robotExtensions/blokMaze/gpio/","title":"GPIO","text":"<p>2. Pohled na senzor vzd\u00e1lenosti</p> <p>Pokro\u010dil\u00fd pohled na GPIO</p>"},{"location":"robotExtensions/blokMaze/logic/","title":"Logika proch\u00e1zen\u00ed bludi\u0161t\u011b","text":"<p>U bludi\u0161t\u011b se standartn\u011b pou\u017e\u00edv\u00e1 algoritmus pod n\u00e1zvem pravidlo prav\u00e9 ruky (right hand rule)</p> <p></p> <p>Pokud se m\u016f\u017eeme oto\u010dit vpravo a ud\u011blat \"krok\", ud\u011bl\u00e1me ho, pokud ne, oto\u010dime se vlevo a zkus\u00edme znova.</p> Pseudo k\u00f3d <pre><code>while (true){\n    if (can_go_right()) {\n        turn_right()\n        make_step()\n    }\n    else {\n        turn_left()\n    }\n}\n</code></pre>"},{"location":"robotExtensions/blokMaze/tof/","title":"Senzor vzd\u00e1lenosti VL53L0X","text":"<p>K rob\u016ftkovi lze p\u0159ipojit d\u00e1lkom\u011br VL53L0X, kter\u00fd umo\u017e\u0148uje opticky m\u011b\u0159it vzd\u00e1lenost. S d\u00e1lkom\u011brem se komunikuje skrze I2C sb\u011brnici. Proto\u017ee je protokol pro ovl\u00e1d\u00e1n\u00ed d\u00e1lkom\u011bru slo\u017eit\u00fd<sup>1</sup>, pou\u017eijeme ke komunikaci knihovnu <code>VL53L0X.ts</code><sup>2</sup>.</p>"},{"location":"robotExtensions/blokMaze/tof/#import-knihovny","title":"Import knihovny","text":"<p>Nejprve si mus\u00edme knihovnu importovat. Z\u00e1rove\u0148 budeme tak\u00e9 pot\u0159ebovat importovat modul <code>i2c</code> pro komunikaci p\u0159es I2C sb\u011brnici. To ud\u011bl\u00e1me pomoc\u00ed p\u0159\u00edkazu <code>import</code>:</p> <pre><code>import { I2C1 } from \"i2c\"\nimport { VL53L0X } from \"./libs/VL53L0X.js\"\n</code></pre>"},{"location":"robotExtensions/blokMaze/tof/#konfigurace-dalkomeru","title":"Konfigurace d\u00e1lkom\u011bru","text":"<p>Po naimportov\u00e1n\u00ed knihovny z\u00edsk\u00e1me konstruktor t\u0159\u00eddy <code>VL53L0X</code>, kter\u00fdm m\u016f\u017eeme vytvo\u0159it nov\u00fd objekt d\u00e1lkom\u011bru. Tak\u00e9 z\u00edsk\u00e1me objekt <code>I2C1</code>, kter\u00fd slou\u017e\u00ed k ovl\u00e1d\u00e1n\u00ed I2C sb\u011brnice. Sb\u011brnici mus\u00edme nejprve nakonfigurovat a n\u00e1sledn\u011b m\u016f\u017eeme vytvo\u0159it objekt d\u00e1lkom\u011bru.</p> <pre><code>// Konfigurace I2C sb\u011brnice na spr\u00e1vn\u00fdch pinech.\nI2C1.setup({sda: robutek.Pins.SDA, scl: robutek.Pins.SCL, bitrate: 400000});\n\n// Vytvo\u0159en\u00ed objektu d\u00e1lkom\u011bru\nconst vl = new VL53L0X(I2C1);\n</code></pre>"},{"location":"robotExtensions/blokMaze/tof/#dostupne-rozhrani","title":"Dostupn\u00e9 rozhran\u00ed","text":"<p>Po vytvo\u0159en\u00ed objektu d\u00e1lkom\u011bru m\u016f\u017eeme za\u010d\u00edt s m\u011b\u0159en\u00edm vzd\u00e1lenosti. K dispozici m\u00e1me pouze jednu metodu:</p> <ul> <li><code>async read(): Promise&lt;Measurement&gt;</code> - zah\u00e1j\u00ed m\u011b\u0159en\u00ed vzd\u00e1lenosti a vr\u00e1t\u00ed nam\u011b\u0159enou hodnotu v milimetrech. M\u011b\u0159en\u00ed vzd\u00e1lenosti chv\u00edli trv\u00e1, funkce je tedy asynchronn\u00ed a je pot\u0159eba pou\u017e\u00edt <code>await</code>. Funkce na konci m\u011b\u0159en\u00ed vrac\u00ed objekt typu <code>Measurement</code>, kter\u00fd obsahuje nam\u011b\u0159enou hodnotu a informace o v\u00fdsledku m\u011b\u0159en\u00ed.</li> </ul>"},{"location":"robotExtensions/blokMaze/tof/#priklad-pouziti","title":"P\u0159\u00edklad pou\u017eit\u00ed","text":"<p>Nyn\u00ed si uk\u00e1\u017eeme, jak m\u016f\u017eeme m\u011b\u0159it vzd\u00e1lenost pomoc\u00ed d\u00e1lkom\u011bru VL53L0X. N\u00e1sleduj\u00edc\u00ed program bude ka\u017edou vte\u0159inu m\u011b\u0159it vzd\u00e1lenost a vypisovat informace o m\u011b\u0159en\u00ed do monitoru.</p> <pre><code>import { I2C1 } from \"i2c\";\nimport { VL53L0X } from \"./libs/VL53L0X.js\"\nimport { stdout } from \"stdio\";\nimport { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");; // ovl\u00e1d\u00e1n\u00ed motor\u016f\n\nI2C1.setup({sda: robutek.Pins.SDA, scl: robutek.Pins.SCL, bitrate: 400000});\nconst vl = new VL53L0X(I2C1);\n\nasync function main() {\n    while (true) {\n        const m = await vl.read();\n        console.log(\"Distance: \" + m.distance + \" mm  \\tSignal: \" + m.signalRate + \"\\tAmb: \" + m.ambientRate + \"\\tSPAD: \" + m.effectiveSpadRtnCount);\n        await sleep(10);\n    }\n}\n\nmain().catch(console.error);\n</code></pre> <p>V\u00fdpis potom m\u016f\u017ee vypadat nap\u0159\u00edklad takto:</p> <pre><code>Distance: 203 mm        Signal: 10.671875       Amb: 1.265625   SPAD: 177\nDistance: 199 mm        Signal: 11.265625       Amb: 1.203125   SPAD: 177\nDistance: 203 mm        Signal: 10.9765625      Amb: 1.234375   SPAD: 177\n</code></pre> <ul> <li>prom\u011bnn\u00e1 <code>m.distance</code> obsahuje nam\u011b\u0159enou vzd\u00e1lenost v milimetrech,</li> <li>prom\u011bnn\u00e1 <code>m.signalRate</code> obsahuje informaci o kvalit\u011b sign\u00e1lu,</li> <li>prom\u011bnn\u00e1 <code>m.ambientRate</code> obsahuje informaci o okoln\u00edm \u0161umu,</li> <li>prom\u011bnn\u00e1 <code>m.effectiveSpadRtnCount</code> obsahuje informaci o po\u010dtu aktivn\u00edch pixel\u016f (z t\u011bch se skl\u00e1d\u00e1 senzor a zap\u00edn\u00e1 je podle toho, jakou vzd\u00e1lenost a v jak\u00e9m prost\u0159ed\u00ed m\u011b\u0159\u00ed).</li> </ul> <p>3. Pohled na logiku proch\u00e1zen\u00ed </p> <ol> <li> <p>Podle v\u00fdrobce dokonce tak slo\u017eit\u00fd, \u017ee k n\u011bmu nelze dob\u0159e sepsat specifikaci (ve skute\u010dnosti to bude nejsp\u00ed\u0161 pouze neschopnost v\u00fdrobce a\u0165 u\u017e kv\u016fli \u0161patn\u00e9mu n\u00e1vrhu protokolu, nebo neochot\u011b sepsat dokumentaci).\u00a0\u21a9</p> </li> <li> <p>Dod\u00e1van\u00e1 knihovna je upravenou verz\u00ed knihovny VL53L0X.js od Espruino tak, aby fungovala v Jaculu\u00a0\u21a9</p> </li> </ol>"},{"location":"robotExtensions/blokRGB/","title":"Senzory barev","text":"<p>Rob\u016ftek disponuje dv\u011bma RGB senzory. Jeden z nich je zabudov\u00e1n v podvozku vedle mal\u00e9ho kart\u00e1\u010dku, druh\u016f je extern\u00ed a je nutn\u00e9 ho p\u0159ipojit kabelem. Ob\u011b mo\u017enosti komunikuj\u00ed s ESP p\u0159es sb\u011brnici I2C. Senzor krom\u011b RGB um\u00ed tak\u00e9 sn\u00edmat IR(infra\u010derven\u00e9) sv\u011btlo.</p> <p>Pokud chceme pou\u017e\u00edvat extern\u00ed senzor, mus\u00edme ho nejprve zapojit do robota.</p> <p>Extern\u00ed senzor</p> <p>Pokud chceme pou\u017e\u00edvat vestav\u011bn\u00fd senzor, m\u016f\u017eeme rovnou senzor naprogramovat.</p> <p>Programov\u00e1n\u00ed</p>"},{"location":"robotExtensions/blokRGB/calibration/","title":"Kalibrace","text":"<p>D\u0159\u00edve, ne\u017e za\u010dneme se senzory m\u011b\u0159it, mus\u00edme je zkalibrovat. Kalibrace n\u00e1m poskytne hodnoty v rozsahu <code>0-1</code>, kter\u00e9 jsou upraven\u00e9 tak, aby sam\u00e9 nuly odpov\u00eddaly \u010dern\u00e9 a sam\u00e9 jedni\u010dky odpov\u00eddaly b\u00edl\u00e9. Hodnoty tak budou v\u00edce odpov\u00eddat skute\u010dn\u00e9 barv\u011b povrchu pod senzorem.</p> <p>Tato jsou funkce, kter\u00e9 ke kalibraci pou\u017eijeme.</p> <pre><code>const sensor = new ZSCS2016C(I2C1, ADDR_BIT);\n\n// zah\u00e1j\u00ed kalibra\u010dn\u00ed cyklus pro senzor a aplikuje kalibra\u010dn\u00ed hodnoty\nawait sensor.runCalibration();\n\n// perzistentn\u011b ulo\u017e\u00ed kalibra\u010dn\u00ed hodnoty pod zadan\u00fdm kl\u00ed\u010dem\nsensor.saveCalibration(\"KEY\");\n\n// na\u010dte kalibra\u010dn\u00ed hodnoty z pam\u011bti pod zadan\u00fdm kl\u00ed\u010dem\nsensor.loadCalibration(\"KEY\");\n</code></pre> <p>Kalibra\u010dn\u00ed program vyu\u017e\u00edvaj\u00edc\u00ed tyto funkce pak vypad\u00e1 takto. Tento program n\u00e1m vyp\u00ed\u0161e kalibra\u010dn\u00ed hodnoty pro n\u00e1\u0161 senzor za sou\u010dasn\u00fdch podm\u00ednek. Procesem kalibrace n\u00e1s program provede zpr\u00e1vami v termin\u00e1lu.</p> <pre><code>import { I2C1 } from \"i2c\";\nimport { ZSCS2016C } from \"./libs/zscs2016c.js\";\nimport { createRobutek } from \"./libs/robutek.js\"\nimport { SmartLed, LED_WS2812B } from \"smartled\";\n\nconst robutek = createRobutek(\"V2\");\n\nI2C1.setup({ sda: robutek.Pins.SDA, scl: robutek.Pins.SCL, bitrate: 400000 });\nconst sensor = new ZSCS2016C(I2C1, true);\n\nconst ledStrip = new SmartLed(robutek.Pins.ILED, 7, LED_WS2812B);\n\nledStrip.set(1, { r: 255, g: 255, b: 255 });\nledStrip.set(2, { r: 255, g: 255, b: 255 });\nledStrip.show();\n\nsensor.enable();\n\nasync function main() {\n    // spust\u00ed se kalibra\u010dn\u00ed proces\n    await sensor.runCalibration();\n    console.log(`Calibration data: ${JSON.stringify(sensor.getCalibration())}`);\n\n    // ulo\u017e\u00ed sou\u010dasn\u00e9 kalibra\u010dn\u00ed hodnoty pod kl\u00ed\u010dem 'default'\n    sensor.saveCalibration(\"default\");\n}\n\nmain().catch(console.error);\n</code></pre> <p>Takto m\u016f\u017ee vypadat objekt s kalibra\u010dn\u00edmi hodnotami</p> <pre><code>{\n    mins: [3426,7332,4844,529,15877],\n    maxs: [62644,65535,65535,13320,65535]\n}\n</code></pre> <p>Kalibraci je nutn\u00e9 prov\u00e1d\u011bt pouze jednou. Pot\u00e9 se perzestentn\u011b ukl\u00e1daj\u00ed pam\u011bti pod zadan\u00fdm kl\u00ed\u010dem. Stejn\u00fdm pomoc\u00ed stejn\u00e9ho kl\u00ed\u010de je pak mo\u017en\u00e9 kalibraci znovu na\u010d\u00edst a pou\u017e\u00edt. Je tak\u00e9 mo\u017en\u00e9 ulo\u017eit v\u00edce kalibrac\u00ed pod r\u016fzn\u00fdmi kl\u00ed\u010di a podle pot\u0159eby je p\u0159ep\u00ednat.</p> <p>Rob\u016ftek disponuje dv\u011bma RGB senzory, kalibraci je t\u0159eba prov\u00e9st pro ka\u017ed\u00fd z nich zvl\u00e1\u0161t. Kalibra\u010dn\u00ed soubory si m\u016f\u017eeme pojmenovat nap\u0159\u00edklad <code>external</code> pro vn\u011bj\u0161\u00ed senzor a <code>internal</code> pro vestav\u011bn\u00fd senzor.</p> <pre><code>import { I2C1 } from \"i2c\";\nimport { ZSCS2016C } from \"./libs/zscs2016c.js\";\nimport { createRobutek } from \"./libs/robutek.js\"\nimport { SmartLed, LED_WS2812B } from \"smartled\";\n\nconst robutek = createRobutek(\"V2\");\n\nI2C1.setup({ sda: robutek.Pins.SDA, scl: robutek.Pins.SCL, bitrate: 400000 });\nconst sensor = new ZSCS2016C(I2C1, true);\n\nconst ledStrip = new SmartLed(robutek.Pins.ILED, 7, LED_WS2812B);\nledStrip.set(1, { r: 255, g: 255, b: 255 });\nledStrip.set(2, { r: 255, g: 255, b: 255 });\nledStrip.show();\n\nsensor.enable();\nsensor.loadCalibration(\"default\");\n\nsetInterval(() =&gt; {\n    console.log(`${JSON.stringify(sensor.readRGB())}`);\n}, 1000);\n</code></pre> <p>POZOR</p> <p>Kalibrace prob\u00edh\u00e1 pro specifick\u00e9 podm\u00ednky, jako t\u0159eba mno\u017estv\u00ed sv\u011btla \u010di vzd\u00e1lenost od m\u011b\u0159en\u00e9ho povrchu. Pokud nap\u0159\u00edklad provedete kalibraci se senzorem 1cm od povrchu a m\u011b\u0159en\u00ed 2cm od povrchu, m\u011b\u0159en\u00e9 data nebudou odpov\u00eddat dan\u00e9 barv\u011b.</p> <p>M\u011b\u0159en\u00ed</p>"},{"location":"robotExtensions/blokRGB/externalSensor/","title":"Extern\u00ed senzor","text":""},{"location":"robotExtensions/blokRGB/externalSensor/#soucastky","title":"Sou\u010d\u00e1stky","text":"<ul> <li>Extern\u00ed RGB senzor</li> <li>u\u0160up kabel</li> </ul>"},{"location":"robotExtensions/blokRGB/externalSensor/#zapojeni","title":"Zapojen\u00ed","text":"<p>TODO</p> <ol> <li> <p>Pokud m\u00e1me p\u0159i\u0161robovanou palubu, odd\u011bl\u00e1me ji.</p> </li> <li> <p>Zapoj\u00edme u\u0160up kabel do konektoru na desce.</p> <p>Pozor na polaritu u\u0160up konektoru</p> </li> <li> <p>Prot\u00e1hneme kabel spr\u00e1vnou d\u00edrou v palub\u011b</p> </li> <li> <p>P\u0159ipoj\u00edme kabel do konektoru na senzoru</p> <p>Pozor na polaritu u\u0160up konektoru</p> </li> <li> <p>Palubu d\u00e1me zp\u011bt na Rob\u016ftka.</p> <p>P\u0159i mont\u00e1\u017ei desky si mus\u00edme d\u00e1t pozor, abychom nesk\u0159ipli kabel mezi palubu a motorov\u00fd blok</p> </li> </ol> <p>Jakmile m\u00e1me senzor p\u0159ipojen\u00fd, mus\u00edme ho naprogramovat.</p> <p>Programov\u00e1n\u00ed</p>"},{"location":"robotExtensions/blokRGB/readData/","title":"M\u011b\u0159en\u00ed","text":"<p>Pro m\u011b\u0159en\u00ed vyu\u017eejeme funkce <code>readRGB()</code>. Tato funkce n\u00e1m vr\u00e1ti kalibrovan\u00e9 data v rozsahu <code>0-1</code>. Form\u00e1t vr\u00e1cen\u00fdch dat v\u0161ak p\u0159imo neodpov\u00edd\u00e1 form\u00e1tu, kter\u00fd o\u010dek\u00e1v\u00e1 knihovna <code>SmartLeds</code>. K p\u0159evodu mezi nimi vyu\u017eijeme funkci <code>sensorDataToRGB(SENSOR_DATA)</code> z knihovny <code>colors</code>. S form\u00e1tem RGB u\u017e m\u016f\u017eeme pracovat pohodln\u011b.</p> <pre><code>// vy\u010dteme kalibrovan\u00e1 data, funkce vrac\u00ed pole se 3 hodnotami 0-1\nconst sensorData = sensor.readRGB();\n\n// provedeme p\u0159evod na form\u00e1t RGB\nconst rgb = colors.sensorDataToRGB(sensorData);\n\n/*\ntakto m\u016f\u017ee vypadat objekt rgb (toto je fialov\u00e1 barva)\n{\n    r: 255,\n    g: 0,\n    b: 255,\n}\n\n*/\n</code></pre> <p>Dal\u0161\u00ed funkce</p> <p>Knihovna umo\u017e\u0148uje tak\u00e9 m\u011b\u0159en\u00ed jednotliv\u00fdch barevn\u00fdch kan\u00e1l\u016f: <code>readRed()</code>, <code>readGreen()</code>, <code>readBlue()</code>, <code>readIR()</code>, <code>readClear()</code>. Pro \u010dten\u00ed hodnot na RGB kan\u00e1lech je v\u0161ak efektivn\u011bj\u0161\u00ed pou\u017e\u00edt funkci <code>readRGB()</code>.</p>"},{"location":"robotExtensions/blokRGB/readData/#priklad-1","title":"P\u0159\u00edklad 1","text":"<p>Vytvo\u0159 program, kter\u00fd bude do konzole vypisovat hodnoty ve form\u00e1tu, kter\u00fd o\u010dek\u00e1v\u00e1 vizualiz\u00e9r JacViz. Umo\u017e\u0148uje vykreslit aktu\u00e1ln\u00ed barvu m\u011b\u0159enou senzorem.</p> <p>O\u010dek\u00e1van\u00fd form\u00e1t se skl\u00e1d\u00e1 ze samostatn\u00fdch \u0159\u00e1dk\u016f, kter\u00e9 odpov\u00eddaj\u00ed jednotliv\u00fdm m\u011b\u0159en\u00edm:</p> <pre><code>r: 123, g: 234, b: 45\n</code></pre> \u0158e\u0161en\u00ed <pre><code>import * as colors from \"./libs/colors.js\";\nimport { I2C1 } from \"i2c\";\nimport { ZSCS2016C } from \"./libs/zscs2016c.js\";\nimport { LED_WS2812B, SmartLed } from \"smartled\";\nimport { createRobutek } from \"./libs/robutek.js\";\n\nconst robutek = createRobutek(\"V2\");\n\nI2C1.setup({ sda: robutek.Pins.SDA, scl: robutek.Pins.SCL, bitrate: 400000 });\nconst sensor = new ZSCS2016C(I2C1, true);\n\nconst ledStrip = new SmartLed(robutek.Pins.ILED, 7, LED_WS2812B);\nledStrip.set(1, { r: 255, g: 255, b: 255 });\nledStrip.set(2, { r: 255, g: 255, b: 255 });\nledStrip.show();\n\nsensor.enable();\nsensor.loadCalibration(\"default\");\n\nsetInterval(() =&gt; {\n    const calData = sensor.readRGB();\n    const rgb = colors.sensorDataToRGB(calData);\n    console.log(`r: ${rgb.r}, g: ${rgb.g}, b: ${rgb.b}`);\n}, 50);\n</code></pre>"},{"location":"robotExtensions/blokRGB/readData/#priklad-2","title":"P\u0159\u00edklad 2","text":"<p>Vytvo\u0159 program, kter\u00fd m\u011bn\u00ed barvu LED na desce na barvu, kterou m\u011b\u0159\u00ed senzor. Pokud pou\u017e\u00edv\u00e1me vestav\u011bn\u00fd senzor, nen\u00ed vhodn\u00e9 m\u011bnit barvu ledek, kterou jsou p\u0159\u00edmo vedle n\u011bj.</p> \u0158e\u0161en\u00ed <pre><code>import * as colors from \"./libs/colors.js\";\nimport { I2C1 } from \"i2c\";\nimport { ZSCS2016C } from \"./libs/zscs2016c.js\";\nimport { LED_WS2812B, SmartLed } from \"smartled\";\nimport { createRobutek } from \"./libs/robutek.js\";\n\nconst robutek = createRobutek(\"V2\");\n\nI2C1.setup({ sda: robutek.Pins.SDA, scl: robutek.Pins.SCL, bitrate: 400000 });\nconst sensor = new ZSCS2016C(I2C1, true);\n\nconst ledStrip = new SmartLed(robutek.Pins.ILED, 7, LED_WS2812B);\nledStrip.set(1, { r: 255, g: 255, b: 255 });\nledStrip.set(2, { r: 255, g: 255, b: 255 });\nledStrip.show();\n\nsensor.enable();\nsensor.loadCalibration(\"default\");\n\nsetInterval(() =&gt; {\n    const calData = sensor.readRGB();\n    const rgb: colors.Rgb = colors.sensorDataToRGB(calData);\n    ledStrip.set(0, rgb);\n    ledStrip.show();\n}, 50);\n</code></pre>"},{"location":"robotExtensions/blokRGB/readData/#mozne-pokracovani","title":"Mo\u017en\u00e9 pokra\u010dov\u00e1n\u00ed","text":"<ul> <li>Ud\u011blej program, kter\u00fd bude m\u011b\u0159it barvu p\u0159edm\u011btu p\u0159ed senzorem a \"pozn\u00e1\", o jakou barvu se jedn\u00e1. Pokud p\u0159ed n\u011bj d\u00e1me zelen\u00fd p\u0159edm\u011bt, vyp\u00ed\u0161e n\u00e1m do konzole \"zelen\u00e1\" atd...</li> </ul>"},{"location":"robotExtensions/blokRGB/setup/","title":"Inicializace senzoru","text":"OdkazZip <pre><code>https://robutek.robotikabrno.cz/v2/robot/blank_project.tar.gz\n</code></pre> <p>St\u00e1hnout ZIP</p> <p>Prvn\u00edm krokem je nastaven\u00ed komunikace p\u0159es I2C.</p> <p>Pokud prohod\u00edme SDA a SCL, komunikace nebude fungovat</p> <pre><code>import { I2C1 } from \"i2c\";\nimport { createRobutek } from \"./libs/robutek.js\"\n\nconst robutek = createRobutek(\"V2\");\n\nI2C1.setup({ sda: robutek.Pins.SDA, scl: robutek.Pins.SCL, bitrate: 400000 });\n</code></pre> <p>Pot\u00e9 mus\u00edme senzor inicializovat a povolit.</p> <pre><code>import { ZSCS2016C } from \"./libs/zscs2016c.js\";\n\nconst sensor = new ZSCS2016C(I2C1, addrBit);\nsensor.enable();\n</code></pre> <p>Parametr <code>addrBit</code> specifikuje, jestli chceme komunikovat se senzorem na desce nebo extern\u00edm senzorem.</p> <pre><code>const sensor = new ZSCS2016C(I2C1, true); // senzor na desce\nconst sensor = new ZSCS2016C(I2C1, false); // extern\u00ed senzor\n</code></pre> <p>Knihovna pro senzor n\u00e1m d\u00e1v\u00e1 n\u011bkolik funkc\u00ed. Tyto funkce tvo\u0159\u00ed 3 hlavn\u00ed skupiny: - Kalibrace - funkce pro kalibraci senzoru - \u010cten\u00ed dat - funkce pro \u010dten\u00ed dat ze senzoru s kalibrac\u00ed - Nekalibrovan\u00e9 \u010dten\u00ed dat - funkce pro \u010dten\u00ed dat ze senzoru bez kalibrace</p> <p>RGB knihovna pro z\u00e1jemce</p> <p>Pokud v\u00e1s zaj\u00edm\u00e1, jak funkce funguj\u00ed, m\u016f\u017eete si pro\u010d\u00edst soubor knihovny. Pokud nev\u00edte co d\u011bl\u00e1te, knihovnu nep\u0159episujte, nebude v\u00e1m fungovat.</p> <p>Kalibrace</p>"},{"location":"robotExtensions/blokSim/","title":"Simul\u00e1tor","text":"Varov\u00e1n\u00ed <p>Simul\u00e1tor neni aktu\u00e1ln\u00ed, l\u00e9pe funguje s dokumentac\u00ed V1</p> <p>Tato lekce je ur\u010dena na pr\u00e1ci v Simul\u00e1toru. Program obsahuje zjednodu\u0161enou verzi reality, ve kter\u00e9 n\u00e1m bude jezdit \u017eelvi\u010dka a p\u0159ij\u00edmat p\u0159\u00edkazy na z\u00e1klad\u011b vn\u011bj\u0161\u00edch podn\u011bt\u016f.</p> <p>Programy n\u00e1m budou fungovat i na skute\u010dn\u00e9m robotovi. Je v\u0161ak je d\u016fle\u017eit\u00e9 nejd\u0159\u00edve si v simulaci ov\u011b\u0159it funk\u010dnost, aby se n\u00e1m skute\u010dn\u00fd robot neza\u010dal chovat neo\u010dek\u00e1van\u00fdm zp\u016fsobem a nezp\u016fsobil sob\u011b nebo n\u00e1m \u0161kody.</p> <p>Program m\u00e1 textov\u00e9 okno, kam m\u016f\u017eeme ps\u00e1t p\u0159\u00edkazy. N\u00e1m ji\u017e zn\u00e1m\u00e9 p\u0159\u00edkazy jsou:</p> <p><code>robutek.rotate(deg)</code> - \u017eelvi\u010dka se oto\u010d\u00ed o <code>deg</code> stup\u0148\u016f po sm\u011bru hodinov\u00fdch ru\u010di\u010dek <code>robutek.move(direction, options)</code> - \u017eelvi\u010dka jede n\u011bkter\u00fdm sm\u011brem na z\u00e1klad\u011b zadan\u00fdch parametr\u016f</p>"},{"location":"robotExtensions/blokSim/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>V jedn\u00e9 z p\u0159edchoz\u00edch lekc\u00ed jsme pou\u017eili znalosti o ovl\u00e1d\u00e1n\u00ed motor\u016f a fixy na nakreslen\u00ed \u010dtverce. Museli jsme v\u0161ak n\u011bkolikr\u00e1t pod sebou kop\u00edrovat k\u00f3d na pohyb dop\u0159edu a oto\u010den\u00ed, a\u010dkoliv jsme vykon\u00e1vali \u010dty\u0159ikr\u00e1t to stejn\u00e9. Tentokr\u00e1t pomoc\u00ed for cyklu napi\u0161te k\u00f3d, d\u00edky kter\u00e9mu robot nakresl\u00ed \u010dtverec a vr\u00e1t\u00ed se do v\u00fdchoz\u00ed polohy.</p> <p></p> \u0158e\u0161en\u00ed <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");; // ovl\u00e1d\u00e1n\u00ed motor\u016f\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\npen.write(robutek.PenPos.Down); // d\u00e1me dol\u016f tu\u017eku\n\nrobutek.setSpeed(100) // nastav\u00edme rychlost na 100 mm/s\n\nfor (let i: number = 0; i &lt; 4; i++) { // chov\u00e1n\u00ed opakujeme 4x, pro ka\u017edou st\u011bnu \u010dtverce\n    await robutek.move(0, { distance: 200 }); // posun dop\u0159edu o 20 cm\n    await robutek.rotate(90); // rotace doprava o 90 stup\u0148\u016f\n}\n</code></pre>"},{"location":"robotExtensions/blokSim/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Napi\u0161te k\u00f3d, pomoc\u00ed kter\u00e9ho nakresl\u00edte n\u011bkolik na sebe navazuj\u00edc\u00edch kruh\u016f. D\u00e1 se na to vyu\u017e\u00edt zat\u00e1\u010den\u00ed pomoc\u00ed <code>motors.move(1)</code>. Vzd\u00e1lenost, kterou je pot\u0159eba ujet si dopo\u010d\u00edt\u00e1me na z\u00e1klad\u011b toho, \u017ee kola jsou od sebe <code>82mm</code> daleko.  Po nakreslen\u00ed ka\u017ed\u00e9ho kola se m\u016f\u017eeme oto\u010dit, ale pro plynul\u00fd pohyb chceme kreslit ka\u017ed\u00e9 kolo z jin\u00e9ho sm\u011bru. K tomu m\u016f\u017ee pomoct nap\u0159\u00edklad stavov\u00e1 prom\u011bnn\u00e1, kter\u00e1 n\u00e1m \u0159ekne, jestli tentokr\u00e1t pojedeme doprava, nebo doleva.</p> <p></p> \u0158e\u0161en\u00ed <pre><code>import { createRobutek } from \"./libs/robutek.js\"\nconst robutek = createRobutek(\"V2\");; // ovl\u00e1d\u00e1n\u00ed motor\u016f\n\nlet pen = new Servo(robutek.Pins.Servo2, 1, 4);\npen.write(robutek.PenPos.Down); // d\u00e1me dol\u016f tu\u017eku\n\nrobutek.setSpeed(100) // nastav\u00edme rychlost na 100 mm/s\n\nlet direction: number = 1; // sm\u011br ot\u00e1\u010den\u00ed\nlet circumference: number = 2 * 3.14 * 82; // obvod jednoho kruhu, kter\u00fd robot objede\nfor (let i: number = 0; i &lt; 4; i++) { // chov\u00e1n\u00ed opakujeme 4x\n    await robutek.move(direction, { distance: circumference * 1.5 }); // chceme projet obvod 1,5x\n    if( direction == 1 ){\n        direction = -1;\n    } else {\n        direction = 1;\n    }\n}\n</code></pre>"},{"location":"robotExtensions/blokSim/#vystupni-ukol-v1-trojuhelnik","title":"V\u00fdstupn\u00ed \u00fakol V1 - Troj\u00faheln\u00edk","text":"<p>Napi\u0161te k\u00f3d, kter\u00fd zp\u016fsob\u00ed, \u017ee \u017eelvi\u010dka nakresl\u00ed m\u00edsto \u010dtverce troj\u00faheln\u00edk. Rozm\u011bry troj\u00faheln\u00edku jsou na v\u00e1s, jen mus\u00ed skute\u010dn\u011b j\u00edt o troj\u00faheln\u00edk.</p> <p>Jak na Troj\u00faheln\u00edky\"</p> <p>Tvar s d\u00e9lkami <code>a</code>, <code>b</code> a <code>c</code> naz\u00fdv\u00e1me troj\u00faheln\u00edkem, pokud spl\u0148uje troj\u00faheln\u00edkovou nerovnost: <pre><code>a + b &gt; c\na + c &gt; b\nb + c &gt; a\n</code></pre></p> <p>Nejjednodu\u0161\u0161\u00ed troj\u00faheln\u00edk je rovnostrann\u00fd, kter\u00fd bude m\u00edt v\u0161echny strany stejn\u011b dlouh\u00e9 a 60\u00b0 vnit\u0159n\u00ed \u00fahel na ka\u017ed\u00e9m rohu.</p> <p>Hned po n\u011bm n\u00e1sleduje rovnoramenn\u00fd, kter\u00fd v nejjednodu\u0161\u0161\u00edm p\u0159\u00edpad\u011b bude m\u00edt 90\u00b0 \u00fahel mezi krat\u0161\u00edmi stranami, a 45\u00b0 mezi kr\u00e1tkou a dlouhou.</p> <p>Pokud chceme n\u011bjak\u00fd m\u00e9n\u011b pravideln\u00fd troj\u00faheln\u00edk, m\u016f\u017eeme na v\u00fdpo\u010det \u00fahlu a d\u00e9lek pou\u017e\u00edt kos\u00ednovu v\u011btu.</p>"},{"location":"robotExtensions/blokSim/#vystupni-ukol-v2-domecek","title":"V\u00fdstupn\u00ed \u00fakol V2 - Dome\u010dek","text":"<p>Propojte dosavadn\u00ed znalosti do jednoho k\u00f3du. Napi\u0161te program, kter\u00fd zp\u016fsob\u00ed \u017ee si \u017eelvi\u010dka nakresl\u00ed dome\u010dek z \u010dtverce a troj\u00faheln\u00edkov\u00e9 st\u0159echy.</p> <p>N\u00e1sledn\u011b \u017eelvi\u010dka p\u0159estane kreslit, a vjede doprost\u0159ed dome\u010dku, kde zastav\u00ed.</p>"},{"location":"robotExtensions/blokSim/#dobrovolny-ukol-spusteni-na-vlastnim-robotovi","title":"Dobrovoln\u00fd \u00fakol - Spu\u0161t\u011bn\u00ed na vlastn\u00edm robotovi","text":"<p>Pokud v\u00e1m program funguje v simul\u00e1toru, zkuste si ho nahr\u00e1t do skute\u010dn\u00e9ho robota. Funguje v\u00e1m? Pozorujete n\u011bjak\u00e9 rozd\u00edly v jeho chov\u00e1n\u00ed oproti zjednodu\u0161en\u00e9mu prost\u0159ed\u00ed?</p>"},{"location":"robotExtensions/blokSumo/","title":"Sumo","text":"<p>Po sezn\u00e1men\u00ed s Rob\u016ftkem a programovac\u00edm prost\u0159ed\u00ed se m\u016f\u017eeme pustit do prvn\u00edho projektu. Na\u0161\u00edm c\u00edlem bude vytvo\u0159it robota, kter\u00fd nespadne z hrac\u00edho pole. Hrac\u00ed pople je pokryt\u00e9 \u010dernou barvou a jeho okraj oblepen\u00fd b\u00edlou p\u00e1skou. Kdy\u017e Rob\u016ftkovi senzorz detekuj\u00ed b\u00edlou p\u00e1sku tak se oto\u010d\u00ed a vyraz\u00ed n\u00e1hodn\u011b zp\u011bt do hrac\u00edho pole.</p> <p>K \u0159e\u0161en\u00ed budeme pou\u017e\u00edvat senzory odrazu sv\u011btla, kter\u00e9 jsou um\u00edst\u011bn\u00e9 na spodn\u00ed stran\u011b Rob\u016ftka. Tyto senzory dok\u00e1\u017e\u00ed rozpoznat, zda se pod nimi nach\u00e1z\u00ed b\u00edl\u00e1 nebo \u010dern\u00e1 plocha.</p> <p>Ne\u017e se pust\u00edte do \u0159e\u0161en\u00ed projd\u011bte si Blok \u010c\u00e1ra</p>"},{"location":"robotExtensions/blokSumo/#kompetetivni-zadani","title":"Kompetetivn\u00ed zad\u00e1n\u00ed","text":"<p>Dva Rob\u016ftci budou postaveni do hrac\u00edho pole. \u00dakolem va\u0161eho Rob\u016ftka bude zhodit protivn\u00edka z hrac\u00edho pole a s\u00e1m z n\u011bj nespadnout.</p> <p>Uk\u00e1zka jednoduch\u00e9ho programu:</p> <p></p>"},{"location":"robotExtensions/blokWiFi/","title":"Konfigurace WiFi","text":"<p>Konfiguraci prov\u00e1d\u00edme p\u0159es Jaculus extension pod z\u00e1lo\u017ekou <code>WiFi Configuration</code>. Pro konfiguraci mus\u00ed b\u00fdt Rob\u016ftek p\u0159ipojen\u00fd k po\u010d\u00edta\u010di a mus\u00ed b\u00fdt vybran\u00fd spr\u00e1vn\u00fd port. </p> <p></p> <p>Kliknut\u00edm na tla\u010d\u00edtko <code>Configure WiFi</code> se n\u00e1m otev\u0159e menu.</p> <p></p> <p>V menu m\u016f\u017eeme vybrat z n\u011bkolika mo\u017enost\u00ed.</p> <ul> <li><code>Display current WiFi config</code> - vyps\u00e1n\u00ed sou\u010dasn\u00e9 WiFi konfigurace Rob\u016ftka do konzole </li> <li><code>Add a WiFi network</code> - p\u0159id\u00e1n\u00ed nov\u00e9 WiFi, vy\u017eaduje jm\u00e9no WiFi a heslo</li> <li><code>Remove a WiFi network</code> - odstran\u011bn\u00ed WiFi s\u00edt\u011b z pam\u011bti Rob\u016ftka, vy\u017eaduje jm\u00e9no WiFi</li> <li><code>Disable WiFi</code> - vypnut\u00ed Wifi Rob\u016ftka</li> <li><code>Set WiFi to Station mode (connect to wifi)</code> - zapnut\u00ed WiFi v re\u017eimu stanice, Rob\u016ftek se p\u0159ipojuje k WiFi</li> <li><code>Set WiFi to AP mode (create a hotspot)</code> - zapnut\u00ed WiFi v re\u017eimu hotspotu, Rob\u016ftek vytv\u00e1\u0159i hotspot, ostatn\u00ed za\u0159\u00edzen\u00ed se p\u0159ipojuj\u00ed k n\u011bmu</li> </ul> <p>Pro p\u0159ipojen\u00ed k WiFi bez hesla a vytvo\u0159en\u00ed hotspotu bez hesla sta\u010d\u00ed ponechat heslo pr\u00e1zdn\u00e9. </p> <p>Probl\u00e9my s WiFi</p> <p>Zapnut\u00e1 WiFi m\u016f\u017ee Rob\u016ftkovi zp\u016fsobovat probl\u00e9my. Proto WiFi vyp\u00edn\u00e1me, pokud ji zrovna nepot\u0159ebujeme.</p>"},{"location":"robotExtensions/blokWiFi/#funkce-s-wifi","title":"Funkce s WiFi","text":"<p>Knihovny pro Rob\u016ftka n\u00e1m d\u00e1vaj\u00ed k dispozici 2 funkce.</p> <ul> <li><code>currentIp()</code> - vrac\u00ed sou\u010dasnou konfiguraci WiFi, pokud nen\u00ed p\u0159ipojen k WiFi, vrac\u00ed <code>null</code></li> <li> <p><code>listNetwork()</code> - vrac\u00ed pole v\u0161ech ulo\u017een\u00fdch WiFi s\u00edt\u00ed</p> <pre><code>import * as wifi from 'wifi'\n\nconst ip = wifi.currentIp();\nconst networks = wifi.listNetworks();\n\nconsole.log(ip);\nconsole.log(networks);\n</code></pre> </li> </ul>"},{"location":"robutekLibrary/","title":"Robutek Library","text":"<p>ZIP s knihovnou</p>"}]}